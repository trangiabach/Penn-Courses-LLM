{
  "version": 3,
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["packages/core/primitive/src/index.ts","packages/core/primitive/src/primitive.tsx","/turbopack/[project]/node_modules/@radix-ui/primitive/dist/index.mjs"],"sourcesContent":["export { composeEventHandlers } from './primitive';\n","function composeEventHandlers<E>(\n  originalEventHandler?: (event: E) => void,\n  ourEventHandler?: (event: E) => void,\n  { checkForDefaultPrevented = true } = {}\n) {\n  return function handleEvent(event: E) {\n    originalEventHandler?.(event);\n\n    if (checkForDefaultPrevented === false || !((event as unknown) as Event).defaultPrevented) {\n      return ourEventHandler?.(event);\n    }\n  };\n}\n\nexport { composeEventHandlers };\n",null],"names":["composeEventHandlers","originalEventHandler","ourEventHandler","checkForDefaultPrevented","handleEvent","event","defaultPrevented"],"mappings":";;;ACAA,SAASA,0CACPC,oBADF,EAEEC,eAFF,EAGE,EAAA,0BAAEC,2BAA2B,IAA3BA,EAAF,GAAsC,CAAA,CAHxC;IAKE,OAAO,SAASC,YAAYC,KAArB;QACLJ,yBAAoB,QAApBA,yBAAoB,KAAA,KAApBA,qBAAuBI;QAEvB,IAAIF,6BAA6B,SAAS,CAAGE,MAA4BC,gBAAzE,EACE,OAAOJ,oBAAP,QAAOA,oBAAP,KAAA,IAAA,KAAA,IAAOA,gBAAkBG"}},
    {"offset": {"line": 16, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 21, "column": 0}, "map": {"version":3,"sources":["packages/react/compose-refs/src/index.ts","packages/react/compose-refs/src/composeRefs.tsx","/turbopack/[project]/node_modules/@radix-ui/react-compose-refs/dist/index.mjs"],"sourcesContent":["export { composeRefs, useComposedRefs } from './composeRefs';\n","import * as React from 'react';\n\ntype PossibleRef<T> = React.Ref<T> | undefined;\n\n/**\n * Set a given ref to a given value\n * This utility takes care of different types of refs: callback refs and RefObject(s)\n */\nfunction setRef<T>(ref: PossibleRef<T>, value: T) {\n  if (typeof ref === 'function') {\n    ref(value);\n  } else if (ref !== null && ref !== undefined) {\n    (ref as React.MutableRefObject<T>).current = value;\n  }\n}\n\n/**\n * A utility to compose multiple refs together\n * Accepts callback refs and RefObject(s)\n */\nfunction composeRefs<T>(...refs: PossibleRef<T>[]) {\n  return (node: T) => refs.forEach((ref) => setRef(ref, node));\n}\n\n/**\n * A custom hook that composes multiple refs\n * Accepts callback refs and RefObject(s)\n */\nfunction useComposedRefs<T>(...refs: PossibleRef<T>[]) {\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  return React.useCallback(composeRefs(...refs), refs);\n}\n\nexport { composeRefs, useComposedRefs };\n",null],"names":["setRef","ref","value","undefined","current","composeRefs","refs","node","forEach","useComposedRefs","React"],"mappings":";;;;;;;ACIA;;;IAIA,SAASA,6BAAUC,GAAnB,EAAwCC,KAAxC;IACE,IAAI,OAAOD,QAAQ,YACjBA,IAAIC;SACC,IAAID,QAAQ,QAAQA,QAAQE,WAChCF,IAAkCG,OAAnC,GAA6CF;;AAIjD;;;IAIA,SAASG,0CAAe,GAAGC,IAA3B;IACE,OAAQC,CAAAA,OAAYD,KAAKE,OAAL,CAAcP,CAAAA,MAAQD,6BAAOC,KAAKM;;AAGxD;;;IAIA,SAASE,0CAAmB,GAAGH,IAA/B;IACE,uDAAA;IACA,OAAOI,6KAAkBL,6CAAeC,OAAOA"}},
    {"offset": {"line": 50, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["packages/react/context/src/index.ts","packages/react/context/src/createContext.tsx","/turbopack/[project]/node_modules/@radix-ui/react-context/dist/index.mjs"],"sourcesContent":["export { createContext, createContextScope } from './createContext';\nexport type { CreateScope, Scope } from './createContext';\n","import * as React from 'react';\n\nfunction createContext<ContextValueType extends object | null>(\n  rootComponentName: string,\n  defaultContext?: ContextValueType\n) {\n  const Context = React.createContext<ContextValueType | undefined>(defaultContext);\n\n  function Provider(props: ContextValueType & { children: React.ReactNode }) {\n    const { children, ...context } = props;\n    // Only re-memoize when prop values change\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    const value = React.useMemo(() => context, Object.values(context)) as ContextValueType;\n    return <Context.Provider value={value}>{children}</Context.Provider>;\n  }\n\n  function useContext(consumerName: string) {\n    const context = React.useContext(Context);\n    if (context) return context;\n    if (defaultContext !== undefined) return defaultContext;\n    // if a defaultContext wasn't specified, it's a required context.\n    throw new Error(`\\`${consumerName}\\` must be used within \\`${rootComponentName}\\``);\n  }\n\n  Provider.displayName = rootComponentName + 'Provider';\n  return [Provider, useContext] as const;\n}\n\n/* -------------------------------------------------------------------------------------------------\n * createContextScope\n * -----------------------------------------------------------------------------------------------*/\n\ntype Scope<C = any> = { [scopeName: string]: React.Context<C>[] } | undefined;\ntype ScopeHook = (scope: Scope) => { [__scopeProp: string]: Scope };\ninterface CreateScope {\n  scopeName: string;\n  (): ScopeHook;\n}\n\nfunction createContextScope(scopeName: string, createContextScopeDeps: CreateScope[] = []) {\n  let defaultContexts: any[] = [];\n\n  /* -----------------------------------------------------------------------------------------------\n   * createContext\n   * ---------------------------------------------------------------------------------------------*/\n\n  function createContext<ContextValueType extends object | null>(\n    rootComponentName: string,\n    defaultContext?: ContextValueType\n  ) {\n    const BaseContext = React.createContext<ContextValueType | undefined>(defaultContext);\n    const index = defaultContexts.length;\n    defaultContexts = [...defaultContexts, defaultContext];\n\n    function Provider(\n      props: ContextValueType & { scope: Scope<ContextValueType>; children: React.ReactNode }\n    ) {\n      const { scope, children, ...context } = props;\n      const Context = scope?.[scopeName][index] || BaseContext;\n      // Only re-memoize when prop values change\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      const value = React.useMemo(() => context, Object.values(context)) as ContextValueType;\n      return <Context.Provider value={value}>{children}</Context.Provider>;\n    }\n\n    function useContext(consumerName: string, scope: Scope<ContextValueType | undefined>) {\n      const Context = scope?.[scopeName][index] || BaseContext;\n      const context = React.useContext(Context);\n      if (context) return context;\n      if (defaultContext !== undefined) return defaultContext;\n      // if a defaultContext wasn't specified, it's a required context.\n      throw new Error(`\\`${consumerName}\\` must be used within \\`${rootComponentName}\\``);\n    }\n\n    Provider.displayName = rootComponentName + 'Provider';\n    return [Provider, useContext] as const;\n  }\n\n  /* -----------------------------------------------------------------------------------------------\n   * createScope\n   * ---------------------------------------------------------------------------------------------*/\n\n  const createScope: CreateScope = () => {\n    const scopeContexts = defaultContexts.map((defaultContext) => {\n      return React.createContext(defaultContext);\n    });\n    return function useScope(scope: Scope) {\n      const contexts = scope?.[scopeName] || scopeContexts;\n      return React.useMemo(\n        () => ({ [`__scope${scopeName}`]: { ...scope, [scopeName]: contexts } }),\n        [scope, contexts]\n      );\n    };\n  };\n\n  createScope.scopeName = scopeName;\n  return [createContext, composeContextScopes(createScope, ...createContextScopeDeps)] as const;\n}\n\n/* -------------------------------------------------------------------------------------------------\n * composeContextScopes\n * -----------------------------------------------------------------------------------------------*/\n\nfunction composeContextScopes(...scopes: CreateScope[]) {\n  const baseScope = scopes[0];\n  if (scopes.length === 1) return baseScope;\n\n  const createScope: CreateScope = () => {\n    const scopeHooks = scopes.map((createScope) => ({\n      useScope: createScope(),\n      scopeName: createScope.scopeName,\n    }));\n\n    return function useComposedScopes(overrideScopes) {\n      const nextScopes = scopeHooks.reduce((nextScopes, { useScope, scopeName }) => {\n        // We are calling a hook inside a callback which React warns against to avoid inconsistent\n        // renders, however, scoping doesn't have render side effects so we ignore the rule.\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        const scopeProps = useScope(overrideScopes);\n        const currentScope = scopeProps[`__scope${scopeName}`];\n        return { ...nextScopes, ...currentScope };\n      }, {});\n\n      return React.useMemo(() => ({ [`__scope${baseScope.scopeName}`]: nextScopes }), [nextScopes]);\n    };\n  };\n\n  createScope.scopeName = baseScope.scopeName;\n  return createScope;\n}\n\n/* -----------------------------------------------------------------------------------------------*/\n\nexport { createContext, createContextScope };\nexport type { CreateScope, Scope };\n",null],"names":["createContext","rootComponentName","defaultContext","Context","React","Provider","props","children","context","value","Object","values","useContext","consumerName","undefined","Error","displayName","createContextScope","scopeName","createContextScopeDeps","defaultContexts","BaseContext","index","length","scope","createScope","scopeContexts","map","useScope","contexts","composeContextScopes","scopes","baseScope","scopeHooks","useComposedScopes","overrideScopes","nextScopes","reduce","scopeProps","currentScope"],"mappings":"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"}},
    {"offset": {"line": 178, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 183, "column": 0}, "map": {"version":3,"sources":["packages/react/slot/src/index.ts","packages/react/slot/src/Slot.tsx","/turbopack/[project]/node_modules/@radix-ui/react-slot/dist/index.mjs"],"sourcesContent":["export {\n  Slot,\n  Slottable,\n  //\n  Root,\n} from './Slot';\nexport type { SlotProps } from './Slot';\n","import * as React from 'react';\nimport { composeRefs } from '@radix-ui/react-compose-refs';\n\n/* -------------------------------------------------------------------------------------------------\n * Slot\n * -----------------------------------------------------------------------------------------------*/\n\ninterface SlotProps extends React.HTMLAttributes<HTMLElement> {\n  children?: React.ReactNode;\n}\n\nconst Slot = React.forwardRef<HTMLElement, SlotProps>((props, forwardedRef) => {\n  const { children, ...slotProps } = props;\n  const childrenArray = React.Children.toArray(children);\n  const slottable = childrenArray.find(isSlottable);\n\n  if (slottable) {\n    // the new element to render is the one passed as a child of `Slottable`\n    const newElement = slottable.props.children as React.ReactNode;\n\n    const newChildren = childrenArray.map((child) => {\n      if (child === slottable) {\n        // because the new element will be the one rendered, we are only interested\n        // in grabbing its children (`newElement.props.children`)\n        if (React.Children.count(newElement) > 1) return React.Children.only(null);\n        return React.isValidElement(newElement)\n          ? (newElement.props.children as React.ReactNode)\n          : null;\n      } else {\n        return child;\n      }\n    });\n\n    return (\n      <SlotClone {...slotProps} ref={forwardedRef}>\n        {React.isValidElement(newElement)\n          ? React.cloneElement(newElement, undefined, newChildren)\n          : null}\n      </SlotClone>\n    );\n  }\n\n  return (\n    <SlotClone {...slotProps} ref={forwardedRef}>\n      {children}\n    </SlotClone>\n  );\n});\n\nSlot.displayName = 'Slot';\n\n/* -------------------------------------------------------------------------------------------------\n * SlotClone\n * -----------------------------------------------------------------------------------------------*/\n\ninterface SlotCloneProps {\n  children: React.ReactNode;\n}\n\nconst SlotClone = React.forwardRef<any, SlotCloneProps>((props, forwardedRef) => {\n  const { children, ...slotProps } = props;\n\n  if (React.isValidElement(children)) {\n    return React.cloneElement(children, {\n      ...mergeProps(slotProps, children.props),\n      ref: forwardedRef ? composeRefs(forwardedRef, (children as any).ref) : (children as any).ref,\n    });\n  }\n\n  return React.Children.count(children) > 1 ? React.Children.only(null) : null;\n});\n\nSlotClone.displayName = 'SlotClone';\n\n/* -------------------------------------------------------------------------------------------------\n * Slottable\n * -----------------------------------------------------------------------------------------------*/\n\nconst Slottable = ({ children }: { children: React.ReactNode }) => {\n  return <>{children}</>;\n};\n\n/* ---------------------------------------------------------------------------------------------- */\n\ntype AnyProps = Record<string, any>;\n\nfunction isSlottable(child: React.ReactNode): child is React.ReactElement {\n  return React.isValidElement(child) && child.type === Slottable;\n}\n\nfunction mergeProps(slotProps: AnyProps, childProps: AnyProps) {\n  // all child props should override\n  const overrideProps = { ...childProps };\n\n  for (const propName in childProps) {\n    const slotPropValue = slotProps[propName];\n    const childPropValue = childProps[propName];\n\n    const isHandler = /^on[A-Z]/.test(propName);\n    if (isHandler) {\n      // if the handler exists on both, we compose them\n      if (slotPropValue && childPropValue) {\n        overrideProps[propName] = (...args: unknown[]) => {\n          childPropValue(...args);\n          slotPropValue(...args);\n        };\n      }\n      // but if it exists only on the slot, we use only this one\n      else if (slotPropValue) {\n        overrideProps[propName] = slotPropValue;\n      }\n    }\n    // if it's `style`, we merge them\n    else if (propName === 'style') {\n      overrideProps[propName] = { ...slotPropValue, ...childPropValue };\n    } else if (propName === 'className') {\n      overrideProps[propName] = [slotPropValue, childPropValue].filter(Boolean).join(' ');\n    }\n  }\n\n  return { ...slotProps, ...overrideProps };\n}\n\nconst Root = Slot;\n\nexport {\n  Slot,\n  Slottable,\n  //\n  Root,\n};\nexport type { SlotProps };\n",null],"names":["Slot","React","props","forwardedRef","children","slotProps","childrenArray","toArray","slottable","find","isSlottable","newElement","newChildren","map","child","count","only","undefined","displayName","SlotClone","mergeProps","ref","composeRefs","Slottable","type","childProps","overrideProps","propName","slotPropValue","childPropValue","isHandler","test","args","filter","Boolean","join","Root"],"mappings":";;;;;;;;;;;;ACGA;;qGAQA,MAAMA,4CAAI,WAAA,GAAGC,4KAAyC,CAACC,OAAOC;IAC5D,MAAM,EAAA,UAAEC,QAAF,EAAY,GAAGC,WAAf,GAA6BH;IACnC,MAAMI,gBAAgBL,0KAAeM,OAAf,CAAuBH;IAC7C,MAAMI,YAAYF,cAAcG,IAAd,CAAmBC;IAErC,IAAIF,WAAW;QACb,wEAAA;QACA,MAAMG,aAAaH,UAAUN,KAAV,CAAgBE,QAAnC;QAEA,MAAMQ,cAAcN,cAAcO,GAAd,CAAmBC,CAAAA;YACrC,IAAIA,UAAUN,WAAW;gBACvB,2EAAA;gBACA,yDAAA;gBACA,IAAIP,0KAAec,KAAf,CAAqBJ,cAAc,GAAG,OAAOV,0KAAee,IAAf,CAAoB;gBACrE,OAAO,WAAA,GAAAf,gLAAqBU,cACvBA,WAAWT,KAAX,CAAiBE,QADf,GAEH;mBAEJ,OAAOU;;QAIX,OAAA,WAAA,GACE,+KAAC,iCAAD,8KAAA,CAAA,GAAeT,WADjB;YAC4B,KAAKF;YAC5B,WAAA,GAAAF,gLAAqBU,cAArB,WAAA,GACGV,8KAAmBU,YAAYM,WAAWL,eAC1C;;IAKV,OAAA,WAAA,GACE,+KAAC,iCAAD,8KAAA,CAAA,GAAeP,WADjB;QAC4B,KAAKF;QAC5BC;;AAKPJ,0CAAKkB,WAAL,GAAmB;AAEnB;;qGAQA,MAAMC,kCAAS,WAAA,GAAGlB,4KAAsC,CAACC,OAAOC;IAC9D,MAAM,EAAA,UAAEC,QAAF,EAAY,GAAGC,WAAf,GAA6BH;IAEnC,IAAA,WAAA,GAAID,gLAAqBG,WACvB,OAAA,WAAA,GAAOH,8KAAmBG,UAAU;QAClC,GAAGgB,iCAAWf,WAAWD,SAASF,KAArB,CADqB;QAElCmB,KAAKlB,eAAemB,8LAAYnB,cAAeC,SAAiBiB,GAAjC,IAAyCjB,SAAiBiB,GAAzFA;;IAIJ,OAAOpB,0KAAec,KAAf,CAAqBX,YAAY,IAAIH,0KAAee,IAAf,CAAoB,QAAQ;;AAG1EG,gCAAUD,WAAV,GAAwB;AAExB;;qGAIA,MAAMK,4CAAY,CAAC,EAAA,UAAEnB,QAAAA,EAAH;IAChB,OAAA,WAAA,GAAO,0VAAA,MAAGA;;AAGZ,kGAAA,GAIA,SAASM,kCAAYI,KAArB;IACE,OAAO,WAAA,GAAAb,gLAAqBa,UAAUA,MAAMU,IAAN,KAAeD;;AAGvD,SAASH,iCAAWf,SAApB,EAAyCoB,UAAzC;IACE,kCAAA;IACA,MAAMC,gBAAgB;QAAE,GAAGD,UAA3B;;IAEA,IAAK,MAAME,YAAYF,WAAY;QACjC,MAAMG,gBAAgBvB,SAAS,CAACsB,SAAhC;QACA,MAAME,iBAAiBJ,UAAU,CAACE,SAAlC;QAEA,MAAMG,YAAY,WAAWC,IAAX,CAAgBJ;QAClC,IAAIG,WAAW;YACb,iDAAA;YACA,IAAIF,iBAAiBC,gBACnBH,aAAa,CAACC,SAAd,GAA0B,CAAIK,GAAAA;gBAC5BH,kBAAkBG;gBAClBJ,iBAAiBI;;iBAIhB,IAAIJ,eACPF,aAAa,CAACC,SAAd,GAA0BC;eAIzB,IAAID,aAAa,SACpBD,aAAa,CAACC,SAAd,GAA0B;YAAE,GAAGC,aAAL;YAAoB,GAAGC,cAAH;;aACzC,IAAIF,aAAa,aACtBD,aAAa,CAACC,SAAd,GAA0B;YAACC;YAAeC;SAAhB,CAAgCI,MAAhC,CAAuCC,SAASC,IAAhD,CAAqD;;IAInF,OAAO;QAAE,GAAG9B,SAAL;QAAgB,GAAGqB,aAAH;;;AAGzB,MAAMU,4CAAOpC"}},
    {"offset": {"line": 273, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 278, "column": 0}, "map": {"version":3,"sources":["packages/react/primitive/src/index.ts","packages/react/primitive/src/Primitive.tsx","/turbopack/[project]/node_modules/@radix-ui/react-primitive/dist/index.mjs"],"sourcesContent":["export {\n  Primitive,\n  //\n  Root,\n  //\n  dispatchDiscreteCustomEvent,\n} from './Primitive';\nexport type { ComponentPropsWithoutRef, PrimitivePropsWithRef } from './Primitive';\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { Slot } from '@radix-ui/react-slot';\n\nconst NODES = [\n  'a',\n  'button',\n  'div',\n  'form',\n  'h2',\n  'h3',\n  'img',\n  'input',\n  'label',\n  'li',\n  'nav',\n  'ol',\n  'p',\n  'span',\n  'svg',\n  'ul',\n] as const;\n\n// Temporary while we await merge of this fix:\n// https://github.com/DefinitelyTyped/DefinitelyTyped/pull/55396\n// prettier-ignore\ntype PropsWithoutRef<P> = P extends any ? ('ref' extends keyof P ? Pick<P, Exclude<keyof P, 'ref'>> : P) : P;\ntype ComponentPropsWithoutRef<T extends React.ElementType> = PropsWithoutRef<\n  React.ComponentProps<T>\n>;\n\ntype Primitives = { [E in typeof NODES[number]]: PrimitiveForwardRefComponent<E> };\ntype PrimitivePropsWithRef<E extends React.ElementType> = React.ComponentPropsWithRef<E> & {\n  asChild?: boolean;\n};\n\ninterface PrimitiveForwardRefComponent<E extends React.ElementType>\n  extends React.ForwardRefExoticComponent<PrimitivePropsWithRef<E>> {}\n\n/* -------------------------------------------------------------------------------------------------\n * Primitive\n * -----------------------------------------------------------------------------------------------*/\n\nconst Primitive = NODES.reduce((primitive, node) => {\n  const Node = React.forwardRef((props: PrimitivePropsWithRef<typeof node>, forwardedRef: any) => {\n    const { asChild, ...primitiveProps } = props;\n    const Comp: any = asChild ? Slot : node;\n\n    React.useEffect(() => {\n      (window as any)[Symbol.for('radix-ui')] = true;\n    }, []);\n\n    return <Comp {...primitiveProps} ref={forwardedRef} />;\n  });\n\n  Node.displayName = `Primitive.${node}`;\n\n  return { ...primitive, [node]: Node };\n}, {} as Primitives);\n\n/* -------------------------------------------------------------------------------------------------\n * Utils\n * -----------------------------------------------------------------------------------------------*/\n\n/**\n * Flush custom event dispatch\n * https://github.com/radix-ui/primitives/pull/1378\n *\n * React batches *all* event handlers since version 18, this introduces certain considerations when using custom event types.\n *\n * Internally, React prioritises events in the following order:\n *  - discrete\n *  - continuous\n *  - default\n *\n * https://github.com/facebook/react/blob/a8a4742f1c54493df00da648a3f9d26e3db9c8b5/packages/react-dom/src/events/ReactDOMEventListener.js#L294-L350\n *\n * `discrete` is an  important distinction as updates within these events are applied immediately.\n * React however, is not able to infer the priority of custom event types due to how they are detected internally.\n * Because of this, it's possible for updates from custom events to be unexpectedly batched when\n * dispatched by another `discrete` event.\n *\n * In order to ensure that updates from custom events are applied predictably, we need to manually flush the batch.\n * This utility should be used when dispatching a custom event from within another `discrete` event, this utility\n * is not nessesary when dispatching known event types, or if dispatching a custom type inside a non-discrete event.\n * For example:\n *\n * dispatching a known click 👎\n * target.dispatchEvent(new Event(‘click’))\n *\n * dispatching a custom type within a non-discrete event 👎\n * onScroll={(event) => event.target.dispatchEvent(new CustomEvent(‘customType’))}\n *\n * dispatching a custom type within a `discrete` event 👍\n * onPointerDown={(event) => dispatchDiscreteCustomEvent(event.target, new CustomEvent(‘customType’))}\n *\n * Note: though React classifies `focus`, `focusin` and `focusout` events as `discrete`, it's  not recommended to use\n * this utility with them. This is because it's possible for those handlers to be called implicitly during render\n * e.g. when focus is within a component as it is unmounted, or when managing focus on mount.\n */\n\nfunction dispatchDiscreteCustomEvent<E extends CustomEvent>(target: E['target'], event: E) {\n  if (target) ReactDOM.flushSync(() => target.dispatchEvent(event));\n}\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst Root = Primitive;\n\nexport {\n  Primitive,\n  //\n  Root,\n  //\n  dispatchDiscreteCustomEvent,\n};\nexport type { ComponentPropsWithoutRef, PrimitivePropsWithRef };\n",null],"names":["NODES","Primitive","reduce","primitive","node","Node","React","props","forwardedRef","asChild","primitiveProps","Comp","window","Symbol","for","displayName","dispatchDiscreteCustomEvent","target","event","ReactDOM","dispatchEvent","Root"],"mappings":";;;;;;;;;;;;;;ACIA,MAAMA,8BAAQ;IACZ;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CAhBF,EAmBA,8CAnBA;AAoBA,gEAAA;AACA,kBAAA;AAcA;;qGAIA,MAAMC,4CAAYD,4BAAME,MAAN,CAAa,CAACC,WAAWC;IACzC,MAAMC,OAAI,WAAA,GAAGC,4KAAiB,CAACC,OAA2CC;QACxE,MAAM,EAAA,SAAEC,OAAF,EAAW,GAAGC,gBAAd,GAAiCH;QACvC,MAAMI,OAAYF,wLAAiBL;QAEnCE,2KAAgB;YACbM,MAAD,CAAgBC,OAAOC,GAAP,CAAW,YAA3B,GAA0C;WACzC,EAFH;QAIA,OAAA,WAAA,GAAO,+KAAC,MAAD,8KAAA,CAAA,GAAUJ,gBAAjB;YAAiC,KAAKF;;;IAGxCH,KAAKU,WAAL,GAAoB,CAAA,UAAA,EAAYX,KAAK,CAArC;IAEA,OAAO;QAAE,GAAGD,SAAL;QAAgB,CAACC,KAAD,EAAQC;;GAC9B,CAAA;AAEH;;qGAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAqCA,SAASW,0CAAmDC,MAA5D,EAAiFC,KAAjF;IACE,IAAID,QAAQE,kLAAmB,IAAMF,OAAOG,aAAP,CAAqBF;;AAG5D,kGAAA,GAEA,MAAMG,4CAAOpB"}},
    {"offset": {"line": 374, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 379, "column": 0}, "map": {"version":3,"sources":["packages/react/use-callback-ref/src/index.ts","packages/react/use-callback-ref/src/useCallbackRef.tsx","/turbopack/[project]/node_modules/@radix-ui/react-use-callback-ref/dist/index.mjs"],"sourcesContent":["export { useCallbackRef } from './useCallbackRef';\n","import * as React from 'react';\n\n/**\n * A custom hook that converts a callback to a ref to avoid triggering re-renders when passed as a\n * prop or avoid re-executing effects when passed as a dependency\n */\nfunction useCallbackRef<T extends (...args: any[]) => any>(callback: T | undefined): T {\n  const callbackRef = React.useRef(callback);\n\n  React.useEffect(() => {\n    callbackRef.current = callback;\n  });\n\n  // https://github.com/facebook/react/issues/19240\n  return React.useMemo(() => ((...args) => callbackRef.current?.(...args)) as T, []);\n}\n\nexport { useCallbackRef };\n",null],"names":["useCallbackRef","callback","callbackRef","React","current","args"],"mappings":";;;;;;ACEA;;;IAIA,SAASA,0CAAkDC,QAA3D;IACE,MAAMC,cAAcC,wKAAaF;IAEjCE,2KAAgB;QACdD,YAAYE,OAAZ,GAAsBH;QAGxB,iDAFC;IAGD,OAAOE,yKAAc,IAAO,CAAIE,GAAAA;YAAJ,IAAA;YAAA,OAAA,CAAA,uBAAaH,YAAYE,OAAzB,MAAA,QAAA,yBAAA,KAAA,IAAA,KAAA,IAAa,qBAAA,IAAA,CAAAF,gBAAyBG;WAAa,EAAxE"}},
    {"offset": {"line": 400, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 405, "column": 0}, "map": {"version":3,"sources":["packages/react/use-escape-keydown/src/index.ts","packages/react/use-escape-keydown/src/useEscapeKeydown.tsx","/turbopack/[project]/node_modules/@radix-ui/react-use-escape-keydown/dist/index.mjs"],"sourcesContent":["export { useEscapeKeydown } from './useEscapeKeydown';\n","import * as React from 'react';\nimport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\n\n/**\n * Listens for when the escape key is down\n */\nfunction useEscapeKeydown(\n  onEscapeKeyDownProp?: (event: KeyboardEvent) => void,\n  ownerDocument: Document = globalThis?.document\n) {\n  const onEscapeKeyDown = useCallbackRef(onEscapeKeyDownProp);\n\n  React.useEffect(() => {\n    const handleKeyDown = (event: KeyboardEvent) => {\n      if (event.key === 'Escape') {\n        onEscapeKeyDown(event);\n      }\n    };\n    ownerDocument.addEventListener('keydown', handleKeyDown);\n    return () => ownerDocument.removeEventListener('keydown', handleKeyDown);\n  }, [onEscapeKeyDown, ownerDocument]);\n}\n\nexport { useEscapeKeydown };\n",null],"names":["useEscapeKeydown","onEscapeKeyDownProp","ownerDocument","globalThis","document","onEscapeKeyDown","useCallbackRef","React","handleKeyDown","event","key","addEventListener","removeEventListener"],"mappings":";;;;;;;;ACGA;;IAGA,SAASA,0CACPC,mBADF,EAEEC,gBAA0BC,eAAH,QAAGA,eAAH,KAAA,IAAA,KAAA,IAAGA,WAAYC,QAFxC;IAIE,MAAMC,kBAAkBC,wMAAeL;IAEvCM,2KAAgB;QACd,MAAMC,gBAAiBC,CAAAA;YACrB,IAAIA,MAAMC,GAAN,KAAc,UAChBL,gBAAgBI;;QAGpBP,cAAcS,gBAAd,CAA+B,WAAWH;QAC1C,OAAO,IAAMN,cAAcU,mBAAd,CAAkC,WAAWJ;OACzD;QAACH;QAAiBH;KARrB"}},
    {"offset": {"line": 430, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 435, "column": 0}, "map": {"version":3,"sources":["packages/react/dismissable-layer/src/index.ts","packages/react/dismissable-layer/src/DismissableLayer.tsx","/turbopack/[project]/node_modules/@radix-ui/react-dismissable-layer/dist/index.mjs"],"sourcesContent":["export {\n  DismissableLayer,\n  DismissableLayerBranch,\n  //\n  Root,\n  Branch,\n} from './DismissableLayer';\nexport type { DismissableLayerProps } from './DismissableLayer';\n","import * as React from 'react';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { Primitive, dispatchDiscreteCustomEvent } from '@radix-ui/react-primitive';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\nimport { useEscapeKeydown } from '@radix-ui/react-use-escape-keydown';\n\nimport type * as Radix from '@radix-ui/react-primitive';\n\n/* -------------------------------------------------------------------------------------------------\n * DismissableLayer\n * -----------------------------------------------------------------------------------------------*/\n\nconst DISMISSABLE_LAYER_NAME = 'DismissableLayer';\nconst CONTEXT_UPDATE = 'dismissableLayer.update';\nconst POINTER_DOWN_OUTSIDE = 'dismissableLayer.pointerDownOutside';\nconst FOCUS_OUTSIDE = 'dismissableLayer.focusOutside';\n\nlet originalBodyPointerEvents: string;\n\nconst DismissableLayerContext = React.createContext({\n  layers: new Set<DismissableLayerElement>(),\n  layersWithOutsidePointerEventsDisabled: new Set<DismissableLayerElement>(),\n  branches: new Set<DismissableLayerBranchElement>(),\n});\n\ntype DismissableLayerElement = React.ElementRef<typeof Primitive.div>;\ntype PrimitiveDivProps = Radix.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface DismissableLayerProps extends PrimitiveDivProps {\n  /**\n   * When `true`, hover/focus/click interactions will be disabled on elements outside\n   * the `DismissableLayer`. Users will need to click twice on outside elements to\n   * interact with them: once to close the `DismissableLayer`, and again to trigger the element.\n   */\n  disableOutsidePointerEvents?: boolean;\n  /**\n   * Event handler called when the escape key is down.\n   * Can be prevented.\n   */\n  onEscapeKeyDown?: (event: KeyboardEvent) => void;\n  /**\n   * Event handler called when the a `pointerdown` event happens outside of the `DismissableLayer`.\n   * Can be prevented.\n   */\n  onPointerDownOutside?: (event: PointerDownOutsideEvent) => void;\n  /**\n   * Event handler called when the focus moves outside of the `DismissableLayer`.\n   * Can be prevented.\n   */\n  onFocusOutside?: (event: FocusOutsideEvent) => void;\n  /**\n   * Event handler called when an interaction happens outside the `DismissableLayer`.\n   * Specifically, when a `pointerdown` event happens outside or focus moves outside of it.\n   * Can be prevented.\n   */\n  onInteractOutside?: (event: PointerDownOutsideEvent | FocusOutsideEvent) => void;\n  /**\n   * Handler called when the `DismissableLayer` should be dismissed\n   */\n  onDismiss?: () => void;\n}\n\nconst DismissableLayer = React.forwardRef<DismissableLayerElement, DismissableLayerProps>(\n  (props, forwardedRef) => {\n    const {\n      disableOutsidePointerEvents = false,\n      onEscapeKeyDown,\n      onPointerDownOutside,\n      onFocusOutside,\n      onInteractOutside,\n      onDismiss,\n      ...layerProps\n    } = props;\n    const context = React.useContext(DismissableLayerContext);\n    const [node, setNode] = React.useState<DismissableLayerElement | null>(null);\n    const ownerDocument = node?.ownerDocument ?? globalThis?.document;\n    const [, force] = React.useState({});\n    const composedRefs = useComposedRefs(forwardedRef, (node) => setNode(node));\n    const layers = Array.from(context.layers);\n    const [highestLayerWithOutsidePointerEventsDisabled] = [...context.layersWithOutsidePointerEventsDisabled].slice(-1); // prettier-ignore\n    const highestLayerWithOutsidePointerEventsDisabledIndex = layers.indexOf(highestLayerWithOutsidePointerEventsDisabled); // prettier-ignore\n    const index = node ? layers.indexOf(node) : -1;\n    const isBodyPointerEventsDisabled = context.layersWithOutsidePointerEventsDisabled.size > 0;\n    const isPointerEventsEnabled = index >= highestLayerWithOutsidePointerEventsDisabledIndex;\n\n    const pointerDownOutside = usePointerDownOutside((event) => {\n      const target = event.target as HTMLElement;\n      const isPointerDownOnBranch = [...context.branches].some((branch) => branch.contains(target));\n      if (!isPointerEventsEnabled || isPointerDownOnBranch) return;\n      onPointerDownOutside?.(event);\n      onInteractOutside?.(event);\n      if (!event.defaultPrevented) onDismiss?.();\n    }, ownerDocument);\n\n    const focusOutside = useFocusOutside((event) => {\n      const target = event.target as HTMLElement;\n      const isFocusInBranch = [...context.branches].some((branch) => branch.contains(target));\n      if (isFocusInBranch) return;\n      onFocusOutside?.(event);\n      onInteractOutside?.(event);\n      if (!event.defaultPrevented) onDismiss?.();\n    }, ownerDocument);\n\n    useEscapeKeydown((event) => {\n      const isHighestLayer = index === context.layers.size - 1;\n      if (!isHighestLayer) return;\n      onEscapeKeyDown?.(event);\n      if (!event.defaultPrevented && onDismiss) {\n        event.preventDefault();\n        onDismiss();\n      }\n    }, ownerDocument);\n\n    React.useEffect(() => {\n      if (!node) return;\n      if (disableOutsidePointerEvents) {\n        if (context.layersWithOutsidePointerEventsDisabled.size === 0) {\n          originalBodyPointerEvents = ownerDocument.body.style.pointerEvents;\n          ownerDocument.body.style.pointerEvents = 'none';\n        }\n        context.layersWithOutsidePointerEventsDisabled.add(node);\n      }\n      context.layers.add(node);\n      dispatchUpdate();\n      return () => {\n        if (\n          disableOutsidePointerEvents &&\n          context.layersWithOutsidePointerEventsDisabled.size === 1\n        ) {\n          ownerDocument.body.style.pointerEvents = originalBodyPointerEvents;\n        }\n      };\n    }, [node, ownerDocument, disableOutsidePointerEvents, context]);\n\n    /**\n     * We purposefully prevent combining this effect with the `disableOutsidePointerEvents` effect\n     * because a change to `disableOutsidePointerEvents` would remove this layer from the stack\n     * and add it to the end again so the layering order wouldn't be _creation order_.\n     * We only want them to be removed from context stacks when unmounted.\n     */\n    React.useEffect(() => {\n      return () => {\n        if (!node) return;\n        context.layers.delete(node);\n        context.layersWithOutsidePointerEventsDisabled.delete(node);\n        dispatchUpdate();\n      };\n    }, [node, context]);\n\n    React.useEffect(() => {\n      const handleUpdate = () => force({});\n      document.addEventListener(CONTEXT_UPDATE, handleUpdate);\n      return () => document.removeEventListener(CONTEXT_UPDATE, handleUpdate);\n    }, []);\n\n    return (\n      <Primitive.div\n        {...layerProps}\n        ref={composedRefs}\n        style={{\n          pointerEvents: isBodyPointerEventsDisabled\n            ? isPointerEventsEnabled\n              ? 'auto'\n              : 'none'\n            : undefined,\n          ...props.style,\n        }}\n        onFocusCapture={composeEventHandlers(props.onFocusCapture, focusOutside.onFocusCapture)}\n        onBlurCapture={composeEventHandlers(props.onBlurCapture, focusOutside.onBlurCapture)}\n        onPointerDownCapture={composeEventHandlers(\n          props.onPointerDownCapture,\n          pointerDownOutside.onPointerDownCapture\n        )}\n      />\n    );\n  }\n);\n\nDismissableLayer.displayName = DISMISSABLE_LAYER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DismissableLayerBranch\n * -----------------------------------------------------------------------------------------------*/\n\nconst BRANCH_NAME = 'DismissableLayerBranch';\n\ntype DismissableLayerBranchElement = React.ElementRef<typeof Primitive.div>;\ninterface DismissableLayerBranchProps extends PrimitiveDivProps {}\n\nconst DismissableLayerBranch = React.forwardRef<\n  DismissableLayerBranchElement,\n  DismissableLayerBranchProps\n>((props, forwardedRef) => {\n  const context = React.useContext(DismissableLayerContext);\n  const ref = React.useRef<DismissableLayerBranchElement>(null);\n  const composedRefs = useComposedRefs(forwardedRef, ref);\n\n  React.useEffect(() => {\n    const node = ref.current;\n    if (node) {\n      context.branches.add(node);\n      return () => {\n        context.branches.delete(node);\n      };\n    }\n  }, [context.branches]);\n\n  return <Primitive.div {...props} ref={composedRefs} />;\n});\n\nDismissableLayerBranch.displayName = BRANCH_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype PointerDownOutsideEvent = CustomEvent<{ originalEvent: PointerEvent }>;\ntype FocusOutsideEvent = CustomEvent<{ originalEvent: FocusEvent }>;\n\n/**\n * Listens for `pointerdown` outside a react subtree. We use `pointerdown` rather than `pointerup`\n * to mimic layer dismissing behaviour present in OS.\n * Returns props to pass to the node we want to check for outside events.\n */\nfunction usePointerDownOutside(\n  onPointerDownOutside?: (event: PointerDownOutsideEvent) => void,\n  ownerDocument: Document = globalThis?.document\n) {\n  const handlePointerDownOutside = useCallbackRef(onPointerDownOutside) as EventListener;\n  const isPointerInsideReactTreeRef = React.useRef(false);\n  const handleClickRef = React.useRef(() => {});\n\n  React.useEffect(() => {\n    const handlePointerDown = (event: PointerEvent) => {\n      if (event.target && !isPointerInsideReactTreeRef.current) {\n        const eventDetail = { originalEvent: event };\n\n        function handleAndDispatchPointerDownOutsideEvent() {\n          handleAndDispatchCustomEvent(\n            POINTER_DOWN_OUTSIDE,\n            handlePointerDownOutside,\n            eventDetail,\n            { discrete: true }\n          );\n        }\n\n        /**\n         * On touch devices, we need to wait for a click event because browsers implement\n         * a ~350ms delay between the time the user stops touching the display and when the\n         * browser executres events. We need to ensure we don't reactivate pointer-events within\n         * this timeframe otherwise the browser may execute events that should have been prevented.\n         *\n         * Additionally, this also lets us deal automatically with cancellations when a click event\n         * isn't raised because the page was considered scrolled/drag-scrolled, long-pressed, etc.\n         *\n         * This is why we also continuously remove the previous listener, because we cannot be\n         * certain that it was raised, and therefore cleaned-up.\n         */\n        if (event.pointerType === 'touch') {\n          ownerDocument.removeEventListener('click', handleClickRef.current);\n          handleClickRef.current = handleAndDispatchPointerDownOutsideEvent;\n          ownerDocument.addEventListener('click', handleClickRef.current, { once: true });\n        } else {\n          handleAndDispatchPointerDownOutsideEvent();\n        }\n      } else {\n        // We need to remove the event listener in case the outside click has been canceled.\n        // See: https://github.com/radix-ui/primitives/issues/2171\n        ownerDocument.removeEventListener('click', handleClickRef.current);\n      }\n      isPointerInsideReactTreeRef.current = false;\n    };\n    /**\n     * if this hook executes in a component that mounts via a `pointerdown` event, the event\n     * would bubble up to the document and trigger a `pointerDownOutside` event. We avoid\n     * this by delaying the event listener registration on the document.\n     * This is not React specific, but rather how the DOM works, ie:\n     * ```\n     * button.addEventListener('pointerdown', () => {\n     *   console.log('I will log');\n     *   document.addEventListener('pointerdown', () => {\n     *     console.log('I will also log');\n     *   })\n     * });\n     */\n    const timerId = window.setTimeout(() => {\n      ownerDocument.addEventListener('pointerdown', handlePointerDown);\n    }, 0);\n    return () => {\n      window.clearTimeout(timerId);\n      ownerDocument.removeEventListener('pointerdown', handlePointerDown);\n      ownerDocument.removeEventListener('click', handleClickRef.current);\n    };\n  }, [ownerDocument, handlePointerDownOutside]);\n\n  return {\n    // ensures we check React component tree (not just DOM tree)\n    onPointerDownCapture: () => (isPointerInsideReactTreeRef.current = true),\n  };\n}\n\n/**\n * Listens for when focus happens outside a react subtree.\n * Returns props to pass to the root (node) of the subtree we want to check.\n */\nfunction useFocusOutside(\n  onFocusOutside?: (event: FocusOutsideEvent) => void,\n  ownerDocument: Document = globalThis?.document\n) {\n  const handleFocusOutside = useCallbackRef(onFocusOutside) as EventListener;\n  const isFocusInsideReactTreeRef = React.useRef(false);\n\n  React.useEffect(() => {\n    const handleFocus = (event: FocusEvent) => {\n      if (event.target && !isFocusInsideReactTreeRef.current) {\n        const eventDetail = { originalEvent: event };\n        handleAndDispatchCustomEvent(FOCUS_OUTSIDE, handleFocusOutside, eventDetail, {\n          discrete: false,\n        });\n      }\n    };\n    ownerDocument.addEventListener('focusin', handleFocus);\n    return () => ownerDocument.removeEventListener('focusin', handleFocus);\n  }, [ownerDocument, handleFocusOutside]);\n\n  return {\n    onFocusCapture: () => (isFocusInsideReactTreeRef.current = true),\n    onBlurCapture: () => (isFocusInsideReactTreeRef.current = false),\n  };\n}\n\nfunction dispatchUpdate() {\n  const event = new CustomEvent(CONTEXT_UPDATE);\n  document.dispatchEvent(event);\n}\n\nfunction handleAndDispatchCustomEvent<E extends CustomEvent, OriginalEvent extends Event>(\n  name: string,\n  handler: ((event: E) => void) | undefined,\n  detail: { originalEvent: OriginalEvent } & (E extends CustomEvent<infer D> ? D : never),\n  { discrete }: { discrete: boolean }\n) {\n  const target = detail.originalEvent.target;\n  const event = new CustomEvent(name, { bubbles: false, cancelable: true, detail });\n  if (handler) target.addEventListener(name, handler as EventListener, { once: true });\n\n  if (discrete) {\n    dispatchDiscreteCustomEvent(target, event);\n  } else {\n    target.dispatchEvent(event);\n  }\n}\n\nconst Root = DismissableLayer;\nconst Branch = DismissableLayerBranch;\n\nexport {\n  DismissableLayer,\n  DismissableLayerBranch,\n  //\n  Root,\n  Branch,\n};\nexport type { DismissableLayerProps };\n",null],"names":["DISMISSABLE_LAYER_NAME","CONTEXT_UPDATE","POINTER_DOWN_OUTSIDE","FOCUS_OUTSIDE","originalBodyPointerEvents","DismissableLayerContext","React","layers","Set","layersWithOutsidePointerEventsDisabled","branches","DismissableLayer","props","forwardedRef","disableOutsidePointerEvents","onEscapeKeyDown","onPointerDownOutside","onFocusOutside","onInteractOutside","onDismiss","layerProps","context","node","setNode","ownerDocument","globalThis","document","force","composedRefs","useComposedRefs","Array","from","highestLayerWithOutsidePointerEventsDisabled","slice","highestLayerWithOutsidePointerEventsDisabledIndex","indexOf","index","isBodyPointerEventsDisabled","size","isPointerEventsEnabled","pointerDownOutside","usePointerDownOutside","event","target","isPointerDownOnBranch","some","branch","contains","defaultPrevented","focusOutside","useFocusOutside","isFocusInBranch","useEscapeKeydown","isHighestLayer","preventDefault","body","style","pointerEvents","add","dispatchUpdate","delete","handleUpdate","addEventListener","removeEventListener","undefined","composeEventHandlers","onFocusCapture","onBlurCapture","onPointerDownCapture","BRANCH_NAME","DismissableLayerBranch","ref","current","handlePointerDownOutside","useCallbackRef","isPointerInsideReactTreeRef","handleClickRef","handlePointerDown","eventDetail","originalEvent","handleAndDispatchPointerDownOutsideEvent","handleAndDispatchCustomEvent","discrete","pointerType","once","timerId","window","setTimeout","clearTimeout","handleFocusOutside","isFocusInsideReactTreeRef","handleFocus","CustomEvent","dispatchEvent","name","handler","detail","bubbles","cancelable","dispatchDiscreteCustomEvent","Root","Branch"],"mappings":"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"}},
    {"offset": {"line": 712, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 717, "column": 0}, "map": {"version":3,"sources":["packages/react/use-layout-effect/src/index.ts","packages/react/use-layout-effect/src/useLayoutEffect.tsx","/turbopack/[project]/node_modules/@radix-ui/react-use-layout-effect/dist/index.mjs"],"sourcesContent":["export { useLayoutEffect } from './useLayoutEffect';\n","import * as React from 'react';\n\n/**\n * On the server, React emits a warning when calling `useLayoutEffect`.\n * This is because neither `useLayoutEffect` nor `useEffect` run on the server.\n * We use this safe version which suppresses the warning by replacing it with a noop on the server.\n *\n * See: https://reactjs.org/docs/hooks-reference.html#uselayouteffect\n */\nconst useLayoutEffect = Boolean(globalThis?.document) ? React.useLayoutEffect : () => {};\n\nexport { useLayoutEffect };\n",null],"names":["useLayoutEffect","Boolean","globalThis","document"],"mappings":";;;;;;ACEA;;;;;;IAOA,MAAMA,4CAAkBC,QAAQC,eAAD,QAACA,eAAD,KAAA,IAAA,KAAA,IAACA,WAAYC,QAAb,uLAAiD,KAAM"}},
    {"offset": {"line": 732, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 737, "column": 0}, "map": {"version":3,"sources":["packages/react/id/src/index.ts","packages/react/id/src/id.tsx","/turbopack/[project]/node_modules/@radix-ui/react-id/dist/index.mjs"],"sourcesContent":["export { useId } from './id';\n","import * as React from 'react';\nimport { useLayoutEffect } from '@radix-ui/react-use-layout-effect';\n\n// We `toString()` to prevent bundlers from trying to `import { useId } from 'react';`\nconst useReactId = (React as any)['useId'.toString()] || (() => undefined);\nlet count = 0;\n\nfunction useId(deterministicId?: string): string {\n  const [id, setId] = React.useState<string | undefined>(useReactId());\n  // React versions older than 18 will have client-side ids only.\n  useLayoutEffect(() => {\n    if (!deterministicId) setId((reactId) => reactId ?? String(count++));\n  }, [deterministicId]);\n  return deterministicId || (id ? `radix-${id}` : '');\n}\n\nexport { useId };\n",null],"names":["useReactId","React","toString","undefined","count","useId","deterministicId","id","setId","useState","useLayoutEffect","reactId","String"],"mappings":";;;;;;;;ACIA,MAAMA,mCAAcC,6JAAD,CAAe,QAAQC,QAAR,GAAf,IAAuC,CAAA,IAAMC,SAA7C;AACnB,IAAIC,8BAAQ;AAEZ,SAASC,0CAAMC,eAAf;IACE,MAAM,CAACC,IAAIC,MAAL,GAAcP,8JAAMQ,QAAN,CAAmCT,qCACvD,+DADA;IAEAU,0MAAgB;QACd,IAAI,CAACJ,iBAAiBE,MAAOG,CAAAA,UAAYA,YAAb,QAAaA,YAAb,KAAA,IAAaA,UAAWC,OAAOR;OAC1D;QAACE;KAFW;IAGf,OAAOA,mBAAoBC,CAAAA,KAAM,CAAA,MAAA,EAAQA,GAAG,CAAf,GAAmB,EAA1B"}},
    {"offset": {"line": 758, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 763, "column": 0}, "map": {"version":3,"sources":["packages/react/arrow/src/index.ts","packages/react/arrow/src/Arrow.tsx","/turbopack/[project]/node_modules/@radix-ui/react-arrow/dist/index.mjs"],"sourcesContent":["export {\n  Arrow,\n  //\n  Root,\n} from './Arrow';\nexport type { ArrowProps } from './Arrow';\n","import * as React from 'react';\nimport { Primitive } from '@radix-ui/react-primitive';\n\nimport type * as Radix from '@radix-ui/react-primitive';\n\n/* -------------------------------------------------------------------------------------------------\n * Arrow\n * -----------------------------------------------------------------------------------------------*/\n\nconst NAME = 'Arrow';\n\ntype ArrowElement = React.ElementRef<typeof Primitive.svg>;\ntype PrimitiveSvgProps = Radix.ComponentPropsWithoutRef<typeof Primitive.svg>;\ninterface ArrowProps extends PrimitiveSvgProps {}\n\nconst Arrow = React.forwardRef<ArrowElement, ArrowProps>((props, forwardedRef) => {\n  const { children, width = 10, height = 5, ...arrowProps } = props;\n  return (\n    <Primitive.svg\n      {...arrowProps}\n      ref={forwardedRef}\n      width={width}\n      height={height}\n      viewBox=\"0 0 30 10\"\n      preserveAspectRatio=\"none\"\n    >\n      {/* We use their children if they're slotting to replace the whole svg */}\n      {props.asChild ? children : <polygon points=\"0,0 30,0 15,10\" />}\n    </Primitive.svg>\n  );\n});\n\nArrow.displayName = NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst Root = Arrow;\n\nexport {\n  Arrow,\n  //\n  Root,\n};\nexport type { ArrowProps };\n",null],"names":["NAME","Arrow","React","props","forwardedRef","children","width","height","arrowProps","asChild","Root"],"mappings":";;;;;;;;;;;ACKA;;qGAIA,MAAMA,6BAAO;AAMb,MAAMC,4CAAK,WAAA,GAAGC,4KAA2C,CAACC,OAAOC;IAC/D,MAAM,EAAA,UAAEC,QAAF,EAAA,OAAYC,QAAQ,EAApB,EAAA,QAAwBC,SAAS,CAAjC,EAAoC,GAAGC,YAAvC,GAAsDL;IAC5D,OAAA,WAAA,GACE,+KAAC,sLAAU,GAAX,EAAA,8KAAA,CAAA,GACMK,YAFR;QAGI,KAAKJ;QACL,OAAOE;QACP,QAAQC;QACR,SAAQ;QACR,qBAAoB;QAGnBJ,MAAMM,OAAN,GAAgBJ,WAAhB,WAAA,GAA2B,+KAT9B,WAAA;QASuC,QAAO;;;AAKlD,WAAA,GAAA,OAAA,MAAA,CAAA,2CAAA;IAAA,aAAA;;AAEA,kGAAA,GAEA,MAAMK,4CAAOT"}},
    {"offset": {"line": 795, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 800, "column": 0}, "map": {"version":3,"sources":["packages/react/use-size/src/index.ts","packages/react/use-size/src/useSize.tsx","/turbopack/[project]/node_modules/@radix-ui/react-use-size/dist/index.mjs"],"sourcesContent":["export { useSize } from './useSize';\n","/// <reference types=\"resize-observer-browser\" />\n\nimport * as React from 'react';\nimport { useLayoutEffect } from '@radix-ui/react-use-layout-effect';\n\nfunction useSize(element: HTMLElement | null) {\n  const [size, setSize] = React.useState<{ width: number; height: number } | undefined>(undefined);\n\n  useLayoutEffect(() => {\n    if (element) {\n      // provide size as early as possible\n      setSize({ width: element.offsetWidth, height: element.offsetHeight });\n\n      const resizeObserver = new ResizeObserver((entries) => {\n        if (!Array.isArray(entries)) {\n          return;\n        }\n\n        // Since we only observe the one element, we don't need to loop over the\n        // array\n        if (!entries.length) {\n          return;\n        }\n\n        const entry = entries[0];\n        let width: number;\n        let height: number;\n\n        if ('borderBoxSize' in entry) {\n          const borderSizeEntry = entry['borderBoxSize'];\n          // iron out differences between browsers\n          const borderSize = Array.isArray(borderSizeEntry) ? borderSizeEntry[0] : borderSizeEntry;\n          width = borderSize['inlineSize'];\n          height = borderSize['blockSize'];\n        } else {\n          // for browsers that don't support `borderBoxSize`\n          // we calculate it ourselves to get the correct border box.\n          width = element.offsetWidth;\n          height = element.offsetHeight;\n        }\n\n        setSize({ width, height });\n      });\n\n      resizeObserver.observe(element, { box: 'border-box' });\n\n      return () => resizeObserver.unobserve(element);\n    } else {\n      // We only want to reset to `undefined` when the element becomes `null`,\n      // not if it changes to another element.\n      setSize(undefined);\n    }\n  }, [element]);\n\n  return size;\n}\n\nexport { useSize };\n",null],"names":["useSize","element","size","setSize","React","undefined","useLayoutEffect","width","offsetWidth","height","offsetHeight","resizeObserver","ResizeObserver","entries","Array","isArray","length","entry","borderSizeEntry","borderSize","observe","box","unobserve"],"mappings":";;;;;;;;ACKA,SAASA,0CAAQC,OAAjB;IACE,MAAM,CAACC,MAAMC,QAAP,GAAkBC,0KAA8DC;IAEtFC,0MAAgB;QACd,IAAIL,SAAS;YACX,oCAAA;YACAE,QAAQ;gBAAEI,OAAON,QAAQO,WAAjB;gBAA8BC,QAAQR,QAAQS,YAAhBD;;YAEtC,MAAME,iBAAiB,IAAIC,eAAgBC,CAAAA;gBACzC,IAAI,CAACC,MAAMC,OAAN,CAAcF,UACjB;gBAGF,wEAFC;gBAGD,QAAA;gBACA,IAAI,CAACA,QAAQG,MAAb,EACE;gBAGF,MAAMC,QAAQJ,OAAO,CAAC,EAAtB;gBACA,IAAIN;gBACJ,IAAIE;gBAEJ,IAAI,mBAAmBQ,OAAO;oBAC5B,MAAMC,kBAAkBD,KAAK,CAAC,gBAA9B,EACA,wCADA;oBAEA,MAAME,aAAaL,MAAMC,OAAN,CAAcG,mBAAmBA,eAAe,CAAC,EAAjD,GAAsDA;oBACzEX,QAAQY,UAAU,CAAC,aAAnB;oBACAV,SAASU,UAAU,CAAC,YAApB;uBACK;oBACL,kDAAA;oBACA,2DAAA;oBACAZ,QAAQN,QAAQO,WAAhB;oBACAC,SAASR,QAAQS,YAAjB;;gBAGFP,QAAQ;oBAzChB,OAyCkBI;oBAzClB,QAyCyBE;;;YAGnBE,eAAeS,OAAf,CAAuBnB,SAAS;gBAAEoB,KAAK;;YAEvC,OAAO,IAAMV,eAAeW,SAAf,CAAyBrB;eAGtC,wCAAA;QACAE,QAAQE;OAET;QAACJ;KA5CW;IA8Cf,OAAOC"}},
    {"offset": {"line": 854, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 859, "column": 0}, "map": {"version":3,"sources":["packages/react/popper/src/index.ts","packages/react/popper/src/Popper.tsx","/turbopack/[project]/node_modules/@radix-ui/react-popper/dist/index.mjs"],"sourcesContent":["export {\n  createPopperScope,\n  //\n  Popper,\n  PopperAnchor,\n  PopperContent,\n  PopperArrow,\n  //\n  Root,\n  Anchor,\n  Content,\n  Arrow,\n  //\n  SIDE_OPTIONS,\n  ALIGN_OPTIONS,\n} from './Popper';\nexport type {\n  PopperProps,\n  PopperAnchorProps,\n  PopperContentProps,\n  PopperArrowProps,\n} from './Popper';\n","import * as React from 'react';\nimport {\n  useFloating,\n  autoUpdate,\n  offset,\n  shift,\n  limitShift,\n  hide,\n  arrow as floatingUIarrow,\n  flip,\n  size,\n} from '@floating-ui/react-dom';\nimport * as ArrowPrimitive from '@radix-ui/react-arrow';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\nimport { useLayoutEffect } from '@radix-ui/react-use-layout-effect';\nimport { useSize } from '@radix-ui/react-use-size';\n\nimport type { Placement, Middleware } from '@floating-ui/react-dom';\nimport type * as Radix from '@radix-ui/react-primitive';\nimport type { Scope } from '@radix-ui/react-context';\nimport type { Measurable } from '@radix-ui/rect';\n\nconst SIDE_OPTIONS = ['top', 'right', 'bottom', 'left'] as const;\nconst ALIGN_OPTIONS = ['start', 'center', 'end'] as const;\n\ntype Side = typeof SIDE_OPTIONS[number];\ntype Align = typeof ALIGN_OPTIONS[number];\n\n/* -------------------------------------------------------------------------------------------------\n * Popper\n * -----------------------------------------------------------------------------------------------*/\n\nconst POPPER_NAME = 'Popper';\n\ntype ScopedProps<P> = P & { __scopePopper?: Scope };\nconst [createPopperContext, createPopperScope] = createContextScope(POPPER_NAME);\n\ntype PopperContextValue = {\n  anchor: Measurable | null;\n  onAnchorChange(anchor: Measurable | null): void;\n};\nconst [PopperProvider, usePopperContext] = createPopperContext<PopperContextValue>(POPPER_NAME);\n\ninterface PopperProps {\n  children?: React.ReactNode;\n}\nconst Popper: React.FC<PopperProps> = (props: ScopedProps<PopperProps>) => {\n  const { __scopePopper, children } = props;\n  const [anchor, setAnchor] = React.useState<Measurable | null>(null);\n  return (\n    <PopperProvider scope={__scopePopper} anchor={anchor} onAnchorChange={setAnchor}>\n      {children}\n    </PopperProvider>\n  );\n};\n\nPopper.displayName = POPPER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * PopperAnchor\n * -----------------------------------------------------------------------------------------------*/\n\nconst ANCHOR_NAME = 'PopperAnchor';\n\ntype PopperAnchorElement = React.ElementRef<typeof Primitive.div>;\ntype PrimitiveDivProps = Radix.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface PopperAnchorProps extends PrimitiveDivProps {\n  virtualRef?: React.RefObject<Measurable>;\n}\n\nconst PopperAnchor = React.forwardRef<PopperAnchorElement, PopperAnchorProps>(\n  (props: ScopedProps<PopperAnchorProps>, forwardedRef) => {\n    const { __scopePopper, virtualRef, ...anchorProps } = props;\n    const context = usePopperContext(ANCHOR_NAME, __scopePopper);\n    const ref = React.useRef<PopperAnchorElement>(null);\n    const composedRefs = useComposedRefs(forwardedRef, ref);\n\n    React.useEffect(() => {\n      // Consumer can anchor the popper to something that isn't\n      // a DOM node e.g. pointer position, so we override the\n      // `anchorRef` with their virtual ref in this case.\n      context.onAnchorChange(virtualRef?.current || ref.current);\n    });\n\n    return virtualRef ? null : <Primitive.div {...anchorProps} ref={composedRefs} />;\n  }\n);\n\nPopperAnchor.displayName = ANCHOR_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * PopperContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'PopperContent';\n\ntype PopperContentContextValue = {\n  placedSide: Side;\n  onArrowChange(arrow: HTMLSpanElement | null): void;\n  arrowX?: number;\n  arrowY?: number;\n  shouldHideArrow: boolean;\n};\n\nconst [PopperContentProvider, useContentContext] =\n  createPopperContext<PopperContentContextValue>(CONTENT_NAME);\n\ntype Boundary = Element | null;\n\ntype PopperContentElement = React.ElementRef<typeof Primitive.div>;\ninterface PopperContentProps extends PrimitiveDivProps {\n  side?: Side;\n  sideOffset?: number;\n  align?: Align;\n  alignOffset?: number;\n  arrowPadding?: number;\n  avoidCollisions?: boolean;\n  collisionBoundary?: Boundary | Boundary[];\n  collisionPadding?: number | Partial<Record<Side, number>>;\n  sticky?: 'partial' | 'always';\n  hideWhenDetached?: boolean;\n  updatePositionStrategy?: 'optimized' | 'always';\n  onPlaced?: () => void;\n}\n\nconst PopperContent = React.forwardRef<PopperContentElement, PopperContentProps>(\n  (props: ScopedProps<PopperContentProps>, forwardedRef) => {\n    const {\n      __scopePopper,\n      side = 'bottom',\n      sideOffset = 0,\n      align = 'center',\n      alignOffset = 0,\n      arrowPadding = 0,\n      avoidCollisions = true,\n      collisionBoundary = [],\n      collisionPadding: collisionPaddingProp = 0,\n      sticky = 'partial',\n      hideWhenDetached = false,\n      updatePositionStrategy = 'optimized',\n      onPlaced,\n      ...contentProps\n    } = props;\n\n    const context = usePopperContext(CONTENT_NAME, __scopePopper);\n\n    const [content, setContent] = React.useState<HTMLDivElement | null>(null);\n    const composedRefs = useComposedRefs(forwardedRef, (node) => setContent(node));\n\n    const [arrow, setArrow] = React.useState<HTMLSpanElement | null>(null);\n    const arrowSize = useSize(arrow);\n    const arrowWidth = arrowSize?.width ?? 0;\n    const arrowHeight = arrowSize?.height ?? 0;\n\n    const desiredPlacement = (side + (align !== 'center' ? '-' + align : '')) as Placement;\n\n    const collisionPadding =\n      typeof collisionPaddingProp === 'number'\n        ? collisionPaddingProp\n        : { top: 0, right: 0, bottom: 0, left: 0, ...collisionPaddingProp };\n\n    const boundary = Array.isArray(collisionBoundary) ? collisionBoundary : [collisionBoundary];\n    const hasExplicitBoundaries = boundary.length > 0;\n\n    const detectOverflowOptions = {\n      padding: collisionPadding,\n      boundary: boundary.filter(isNotNull),\n      // with `strategy: 'fixed'`, this is the only way to get it to respect boundaries\n      altBoundary: hasExplicitBoundaries,\n    };\n\n    const { refs, floatingStyles, placement, isPositioned, middlewareData } = useFloating({\n      // default to `fixed` strategy so users don't have to pick and we also avoid focus scroll issues\n      strategy: 'fixed',\n      placement: desiredPlacement,\n      whileElementsMounted: (...args) => {\n        const cleanup = autoUpdate(...args, {\n          animationFrame: updatePositionStrategy === 'always',\n        });\n        return cleanup;\n      },\n      elements: {\n        reference: context.anchor,\n      },\n      middleware: [\n        offset({ mainAxis: sideOffset + arrowHeight, alignmentAxis: alignOffset }),\n        avoidCollisions &&\n          shift({\n            mainAxis: true,\n            crossAxis: false,\n            limiter: sticky === 'partial' ? limitShift() : undefined,\n            ...detectOverflowOptions,\n          }),\n        avoidCollisions && flip({ ...detectOverflowOptions }),\n        size({\n          ...detectOverflowOptions,\n          apply: ({ elements, rects, availableWidth, availableHeight }) => {\n            const { width: anchorWidth, height: anchorHeight } = rects.reference;\n            const contentStyle = elements.floating.style;\n            contentStyle.setProperty('--radix-popper-available-width', `${availableWidth}px`);\n            contentStyle.setProperty('--radix-popper-available-height', `${availableHeight}px`);\n            contentStyle.setProperty('--radix-popper-anchor-width', `${anchorWidth}px`);\n            contentStyle.setProperty('--radix-popper-anchor-height', `${anchorHeight}px`);\n          },\n        }),\n        arrow && floatingUIarrow({ element: arrow, padding: arrowPadding }),\n        transformOrigin({ arrowWidth, arrowHeight }),\n        hideWhenDetached && hide({ strategy: 'referenceHidden', ...detectOverflowOptions }),\n      ],\n    });\n\n    const [placedSide, placedAlign] = getSideAndAlignFromPlacement(placement);\n\n    const handlePlaced = useCallbackRef(onPlaced);\n    useLayoutEffect(() => {\n      if (isPositioned) {\n        handlePlaced?.();\n      }\n    }, [isPositioned, handlePlaced]);\n\n    const arrowX = middlewareData.arrow?.x;\n    const arrowY = middlewareData.arrow?.y;\n    const cannotCenterArrow = middlewareData.arrow?.centerOffset !== 0;\n\n    const [contentZIndex, setContentZIndex] = React.useState<string>();\n    useLayoutEffect(() => {\n      if (content) setContentZIndex(window.getComputedStyle(content).zIndex);\n    }, [content]);\n\n    return (\n      <div\n        ref={refs.setFloating}\n        data-radix-popper-content-wrapper=\"\"\n        style={{\n          ...floatingStyles,\n          transform: isPositioned ? floatingStyles.transform : 'translate(0, -200%)', // keep off the page when measuring\n          minWidth: 'max-content',\n          zIndex: contentZIndex,\n          ['--radix-popper-transform-origin' as any]: [\n            middlewareData.transformOrigin?.x,\n            middlewareData.transformOrigin?.y,\n          ].join(' '),\n        }}\n        // Floating UI interally calculates logical alignment based the `dir` attribute on\n        // the reference/floating node, we must add this attribute here to ensure\n        // this is calculated when portalled as well as inline.\n        dir={props.dir}\n      >\n        <PopperContentProvider\n          scope={__scopePopper}\n          placedSide={placedSide}\n          onArrowChange={setArrow}\n          arrowX={arrowX}\n          arrowY={arrowY}\n          shouldHideArrow={cannotCenterArrow}\n        >\n          <Primitive.div\n            data-side={placedSide}\n            data-align={placedAlign}\n            {...contentProps}\n            ref={composedRefs}\n            style={{\n              ...contentProps.style,\n              // if the PopperContent hasn't been placed yet (not all measurements done)\n              // we prevent animations so that users's animation don't kick in too early referring wrong sides\n              animation: !isPositioned ? 'none' : undefined,\n              // hide the content if using the hide middleware and should be hidden\n              opacity: middlewareData.hide?.referenceHidden ? 0 : undefined,\n            }}\n          />\n        </PopperContentProvider>\n      </div>\n    );\n  }\n);\n\nPopperContent.displayName = CONTENT_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * PopperArrow\n * -----------------------------------------------------------------------------------------------*/\n\nconst ARROW_NAME = 'PopperArrow';\n\nconst OPPOSITE_SIDE: Record<Side, Side> = {\n  top: 'bottom',\n  right: 'left',\n  bottom: 'top',\n  left: 'right',\n};\n\ntype PopperArrowElement = React.ElementRef<typeof ArrowPrimitive.Root>;\ntype ArrowProps = Radix.ComponentPropsWithoutRef<typeof ArrowPrimitive.Root>;\ninterface PopperArrowProps extends ArrowProps {}\n\nconst PopperArrow = React.forwardRef<PopperArrowElement, PopperArrowProps>(function PopperArrow(\n  props: ScopedProps<PopperArrowProps>,\n  forwardedRef\n) {\n  const { __scopePopper, ...arrowProps } = props;\n  const contentContext = useContentContext(ARROW_NAME, __scopePopper);\n  const baseSide = OPPOSITE_SIDE[contentContext.placedSide];\n\n  return (\n    // we have to use an extra wrapper because `ResizeObserver` (used by `useSize`)\n    // doesn't report size as we'd expect on SVG elements.\n    // it reports their bounding box which is effectively the largest path inside the SVG.\n    <span\n      ref={contentContext.onArrowChange}\n      style={{\n        position: 'absolute',\n        left: contentContext.arrowX,\n        top: contentContext.arrowY,\n        [baseSide]: 0,\n        transformOrigin: {\n          top: '',\n          right: '0 0',\n          bottom: 'center 0',\n          left: '100% 0',\n        }[contentContext.placedSide],\n        transform: {\n          top: 'translateY(100%)',\n          right: 'translateY(50%) rotate(90deg) translateX(-50%)',\n          bottom: `rotate(180deg)`,\n          left: 'translateY(50%) rotate(-90deg) translateX(50%)',\n        }[contentContext.placedSide],\n        visibility: contentContext.shouldHideArrow ? 'hidden' : undefined,\n      }}\n    >\n      <ArrowPrimitive.Root\n        {...arrowProps}\n        ref={forwardedRef}\n        style={{\n          ...arrowProps.style,\n          // ensures the element can be measured correctly (mostly for if SVG)\n          display: 'block',\n        }}\n      />\n    </span>\n  );\n});\n\nPopperArrow.displayName = ARROW_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction isNotNull<T>(value: T | null): value is T {\n  return value !== null;\n}\n\nconst transformOrigin = (options: { arrowWidth: number; arrowHeight: number }): Middleware => ({\n  name: 'transformOrigin',\n  options,\n  fn(data) {\n    const { placement, rects, middlewareData } = data;\n\n    const cannotCenterArrow = middlewareData.arrow?.centerOffset !== 0;\n    const isArrowHidden = cannotCenterArrow;\n    const arrowWidth = isArrowHidden ? 0 : options.arrowWidth;\n    const arrowHeight = isArrowHidden ? 0 : options.arrowHeight;\n\n    const [placedSide, placedAlign] = getSideAndAlignFromPlacement(placement);\n    const noArrowAlign = { start: '0%', center: '50%', end: '100%' }[placedAlign];\n\n    const arrowXCenter = (middlewareData.arrow?.x ?? 0) + arrowWidth / 2;\n    const arrowYCenter = (middlewareData.arrow?.y ?? 0) + arrowHeight / 2;\n\n    let x = '';\n    let y = '';\n\n    if (placedSide === 'bottom') {\n      x = isArrowHidden ? noArrowAlign : `${arrowXCenter}px`;\n      y = `${-arrowHeight}px`;\n    } else if (placedSide === 'top') {\n      x = isArrowHidden ? noArrowAlign : `${arrowXCenter}px`;\n      y = `${rects.floating.height + arrowHeight}px`;\n    } else if (placedSide === 'right') {\n      x = `${-arrowHeight}px`;\n      y = isArrowHidden ? noArrowAlign : `${arrowYCenter}px`;\n    } else if (placedSide === 'left') {\n      x = `${rects.floating.width + arrowHeight}px`;\n      y = isArrowHidden ? noArrowAlign : `${arrowYCenter}px`;\n    }\n    return { data: { x, y } };\n  },\n});\n\nfunction getSideAndAlignFromPlacement(placement: Placement) {\n  const [side, align = 'center'] = placement.split('-');\n  return [side as Side, align as Align] as const;\n}\n\nconst Root = Popper;\nconst Anchor = PopperAnchor;\nconst Content = PopperContent;\nconst Arrow = PopperArrow;\n\nexport {\n  createPopperScope,\n  //\n  Popper,\n  PopperAnchor,\n  PopperContent,\n  PopperArrow,\n  //\n  Root,\n  Anchor,\n  Content,\n  Arrow,\n  //\n  SIDE_OPTIONS,\n  ALIGN_OPTIONS,\n};\nexport type { PopperProps, PopperAnchorProps, PopperContentProps, PopperArrowProps };\n",null],"names":["SIDE_OPTIONS","ALIGN_OPTIONS","POPPER_NAME","createPopperContext","createPopperScope","createContextScope","PopperProvider","usePopperContext","Popper","props","__scopePopper","children","anchor","setAnchor","React","ANCHOR_NAME","PopperAnchor","forwardedRef","virtualRef","anchorProps","context","ref","composedRefs","useComposedRefs","onAnchorChange","current","CONTENT_NAME","PopperContentProvider","useContentContext","PopperContent","side","sideOffset","align","alignOffset","arrowPadding","avoidCollisions","collisionBoundary","collisionPadding","collisionPaddingProp","sticky","hideWhenDetached","updatePositionStrategy","onPlaced","contentProps","content","setContent","node","arrow","setArrow","arrowSize","useSize","arrowWidth","width","arrowHeight","height","desiredPlacement","top","right","bottom","left","boundary","Array","isArray","hasExplicitBoundaries","length","detectOverflowOptions","padding","filter","isNotNull","altBoundary","refs","floatingStyles","placement","isPositioned","middlewareData","useFloating","strategy","whileElementsMounted","args","cleanup","autoUpdate","animationFrame","elements","reference","middleware","offset","mainAxis","alignmentAxis","shift","crossAxis","limiter","limitShift","undefined","flip","size","apply","rects","availableWidth","availableHeight","anchorWidth","anchorHeight","contentStyle","floating","style","setProperty","floatingUIarrow","element","transformOrigin","hide","placedSide","placedAlign","getSideAndAlignFromPlacement","handlePlaced","useCallbackRef","useLayoutEffect","arrowX","x","arrowY","y","cannotCenterArrow","centerOffset","contentZIndex","setContentZIndex","window","getComputedStyle","zIndex","setFloating","transform","minWidth","join","dir","animation","opacity","referenceHidden","ARROW_NAME","OPPOSITE_SIDE","PopperArrow","arrowProps","contentContext","baseSide","onArrowChange","position","visibility","shouldHideArrow","display","value","options","name","fn","data","isArrowHidden","noArrowAlign","start","center","end","arrowXCenter","arrowYCenter","split","Root","Anchor","Content","Arrow"],"mappings":"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"}},
    {"offset": {"line": 1191, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1196, "column": 0}, "map": {"version":3,"sources":["packages/react/portal/src/index.ts","packages/react/portal/src/Portal.tsx","/turbopack/[project]/node_modules/@radix-ui/react-portal/dist/index.mjs"],"sourcesContent":["export {\n  Portal,\n  //\n  Root,\n} from './Portal';\nexport type { PortalProps } from './Portal';\n","import * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Primitive } from '@radix-ui/react-primitive';\n\nimport type * as Radix from '@radix-ui/react-primitive';\n\n/* -------------------------------------------------------------------------------------------------\n * Portal\n * -----------------------------------------------------------------------------------------------*/\n\nconst PORTAL_NAME = 'Portal';\n\ntype PortalElement = React.ElementRef<typeof Primitive.div>;\ntype PrimitiveDivProps = Radix.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface PortalProps extends PrimitiveDivProps {\n  /**\n   * An optional container where the portaled content should be appended.\n   */\n  container?: HTMLElement | null;\n}\n\nconst Portal = React.forwardRef<PortalElement, PortalProps>((props, forwardedRef) => {\n  const { container = globalThis?.document?.body, ...portalProps } = props;\n  return container\n    ? ReactDOM.createPortal(<Primitive.div {...portalProps} ref={forwardedRef} />, container)\n    : null;\n});\n\nPortal.displayName = PORTAL_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst Root = Portal;\n\nexport {\n  Portal,\n  //\n  Root,\n};\nexport type { PortalProps };\n",null],"names":["PORTAL_NAME","Portal","React","props","forwardedRef","container","globalThis","document","body","portalProps","ReactDOM","createPortal","Root"],"mappings":";;;;;;;;;;;;;ACMA;;qGAIA,MAAMA,oCAAc;AAWpB,MAAMC,4CAAM,WAAA,GAAGC,4KAA6C,CAACC,OAAOC;IAAiB,IAAA;IACnF,MAAM,EAAA,WAAEC,YAAYC,eAAH,QAAGA,eAAH,KAAA,IAAA,KAAA,IAAA,CAAA,uBAAGA,WAAYC,QAAf,MAAA,QAAA,yBAAA,KAAA,IAAA,KAAA,IAAG,qBAAsBC,IAApC,EAA0C,GAAGC,aAA7C,GAA6DN;IACnE,OAAOE,YAAS,WAAA,GACZK,gLAASC,YAAT,CAAA,WAAA,GAAsB,+KAAC,sLAAU,GAAX,EAAA,8KAAA,CAAA,GAAmBF,aAD7C;QAC0D,KAAKL;SAAkBC,aAC7E;;AAGN,WAAA,GAAA,OAAA,MAAA,CAAA,2CAAA;IAAA,aAAA;;AAEA,kGAAA,GAEA,MAAMO,4CAAOX"}},
    {"offset": {"line": 1225, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1230, "column": 0}, "map": {"version":3,"sources":["packages/react/presence/src/index.ts","packages/react/presence/src/Presence.tsx","packages/react/presence/src/useStateMachine.tsx","/turbopack/[project]/node_modules/@radix-ui/react-presence/dist/index.mjs"],"sourcesContent":["export { Presence } from './Presence';\nexport type { PresenceProps } from './Presence';\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { useLayoutEffect } from '@radix-ui/react-use-layout-effect';\nimport { useStateMachine } from './useStateMachine';\n\ninterface PresenceProps {\n  children: React.ReactElement | ((props: { present: boolean }) => React.ReactElement);\n  present: boolean;\n}\n\nconst Presence: React.FC<PresenceProps> = (props) => {\n  const { present, children } = props;\n  const presence = usePresence(present);\n\n  const child = (\n    typeof children === 'function'\n      ? children({ present: presence.isPresent })\n      : React.Children.only(children)\n  ) as React.ReactElement;\n\n  const ref = useComposedRefs(presence.ref, (child as any).ref);\n  const forceMount = typeof children === 'function';\n  return forceMount || presence.isPresent ? React.cloneElement(child, { ref }) : null;\n};\n\nPresence.displayName = 'Presence';\n\n/* -------------------------------------------------------------------------------------------------\n * usePresence\n * -----------------------------------------------------------------------------------------------*/\n\nfunction usePresence(present: boolean) {\n  const [node, setNode] = React.useState<HTMLElement>();\n  const stylesRef = React.useRef<CSSStyleDeclaration>({} as any);\n  const prevPresentRef = React.useRef(present);\n  const prevAnimationNameRef = React.useRef<string>('none');\n  const initialState = present ? 'mounted' : 'unmounted';\n  const [state, send] = useStateMachine(initialState, {\n    mounted: {\n      UNMOUNT: 'unmounted',\n      ANIMATION_OUT: 'unmountSuspended',\n    },\n    unmountSuspended: {\n      MOUNT: 'mounted',\n      ANIMATION_END: 'unmounted',\n    },\n    unmounted: {\n      MOUNT: 'mounted',\n    },\n  });\n\n  React.useEffect(() => {\n    const currentAnimationName = getAnimationName(stylesRef.current);\n    prevAnimationNameRef.current = state === 'mounted' ? currentAnimationName : 'none';\n  }, [state]);\n\n  useLayoutEffect(() => {\n    const styles = stylesRef.current;\n    const wasPresent = prevPresentRef.current;\n    const hasPresentChanged = wasPresent !== present;\n\n    if (hasPresentChanged) {\n      const prevAnimationName = prevAnimationNameRef.current;\n      const currentAnimationName = getAnimationName(styles);\n\n      if (present) {\n        send('MOUNT');\n      } else if (currentAnimationName === 'none' || styles?.display === 'none') {\n        // If there is no exit animation or the element is hidden, animations won't run\n        // so we unmount instantly\n        send('UNMOUNT');\n      } else {\n        /**\n         * When `present` changes to `false`, we check changes to animation-name to\n         * determine whether an animation has started. We chose this approach (reading\n         * computed styles) because there is no `animationrun` event and `animationstart`\n         * fires after `animation-delay` has expired which would be too late.\n         */\n        const isAnimating = prevAnimationName !== currentAnimationName;\n\n        if (wasPresent && isAnimating) {\n          send('ANIMATION_OUT');\n        } else {\n          send('UNMOUNT');\n        }\n      }\n\n      prevPresentRef.current = present;\n    }\n  }, [present, send]);\n\n  useLayoutEffect(() => {\n    if (node) {\n      /**\n       * Triggering an ANIMATION_OUT during an ANIMATION_IN will fire an `animationcancel`\n       * event for ANIMATION_IN after we have entered `unmountSuspended` state. So, we\n       * make sure we only trigger ANIMATION_END for the currently active animation.\n       */\n      const handleAnimationEnd = (event: AnimationEvent) => {\n        const currentAnimationName = getAnimationName(stylesRef.current);\n        const isCurrentAnimation = currentAnimationName.includes(event.animationName);\n        if (event.target === node && isCurrentAnimation) {\n          // With React 18 concurrency this update is applied\n          // a frame after the animation ends, creating a flash of visible content.\n          // By manually flushing we ensure they sync within a frame, removing the flash.\n          ReactDOM.flushSync(() => send('ANIMATION_END'));\n        }\n      };\n      const handleAnimationStart = (event: AnimationEvent) => {\n        if (event.target === node) {\n          // if animation occurred, store its name as the previous animation.\n          prevAnimationNameRef.current = getAnimationName(stylesRef.current);\n        }\n      };\n      node.addEventListener('animationstart', handleAnimationStart);\n      node.addEventListener('animationcancel', handleAnimationEnd);\n      node.addEventListener('animationend', handleAnimationEnd);\n      return () => {\n        node.removeEventListener('animationstart', handleAnimationStart);\n        node.removeEventListener('animationcancel', handleAnimationEnd);\n        node.removeEventListener('animationend', handleAnimationEnd);\n      };\n    } else {\n      // Transition to the unmounted state if the node is removed prematurely.\n      // We avoid doing so during cleanup as the node may change but still exist.\n      send('ANIMATION_END');\n    }\n  }, [node, send]);\n\n  return {\n    isPresent: ['mounted', 'unmountSuspended'].includes(state),\n    ref: React.useCallback((node: HTMLElement) => {\n      if (node) stylesRef.current = getComputedStyle(node);\n      setNode(node);\n    }, []),\n  };\n}\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction getAnimationName(styles?: CSSStyleDeclaration) {\n  return styles?.animationName || 'none';\n}\n\nexport { Presence };\nexport type { PresenceProps };\n","import * as React from 'react';\n\ntype Machine<S> = { [k: string]: { [k: string]: S } };\ntype MachineState<T> = keyof T;\ntype MachineEvent<T> = keyof UnionToIntersection<T[keyof T]>;\n\n// 🤯 https://fettblog.eu/typescript-union-to-intersection/\ntype UnionToIntersection<T> = (T extends any ? (x: T) => any : never) extends (x: infer R) => any\n  ? R\n  : never;\n\nexport function useStateMachine<M>(\n  initialState: MachineState<M>,\n  machine: M & Machine<MachineState<M>>\n) {\n  return React.useReducer((state: MachineState<M>, event: MachineEvent<M>): MachineState<M> => {\n    const nextState = (machine[state] as any)[event];\n    return nextState ?? state;\n  }, initialState);\n}\n",null],"names":["useStateMachine","initialState","machine","React","state","event","nextState","Presence","props","present","children","presence","usePresence","child","isPresent","only","ref","useComposedRefs","forceMount","displayName","node","setNode","stylesRef","prevPresentRef","prevAnimationNameRef","send","mounted","UNMOUNT","ANIMATION_OUT","unmountSuspended","MOUNT","ANIMATION_END","unmounted","currentAnimationName","getAnimationName","current","useLayoutEffect","styles","wasPresent","hasPresentChanged","prevAnimationName","display","isAnimating","handleAnimationEnd","isCurrentAnimation","includes","animationName","target","ReactDOM","handleAnimationStart","addEventListener","removeEventListener","getComputedStyle"],"mappings":"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"}},
    {"offset": {"line": 1360, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1365, "column": 0}, "map": {"version":3,"sources":["packages/react/use-controllable-state/src/index.ts","packages/react/use-controllable-state/src/useControllableState.tsx","/turbopack/[project]/node_modules/@radix-ui/react-use-controllable-state/dist/index.mjs"],"sourcesContent":["export { useControllableState } from './useControllableState';\n","import * as React from 'react';\nimport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\n\ntype UseControllableStateParams<T> = {\n  prop?: T | undefined;\n  defaultProp?: T | undefined;\n  onChange?: (state: T) => void;\n};\n\ntype SetStateFn<T> = (prevState?: T) => T;\n\nfunction useControllableState<T>({\n  prop,\n  defaultProp,\n  onChange = () => {},\n}: UseControllableStateParams<T>) {\n  const [uncontrolledProp, setUncontrolledProp] = useUncontrolledState({ defaultProp, onChange });\n  const isControlled = prop !== undefined;\n  const value = isControlled ? prop : uncontrolledProp;\n  const handleChange = useCallbackRef(onChange);\n\n  const setValue: React.Dispatch<React.SetStateAction<T | undefined>> = React.useCallback(\n    (nextValue) => {\n      if (isControlled) {\n        const setter = nextValue as SetStateFn<T>;\n        const value = typeof nextValue === 'function' ? setter(prop) : nextValue;\n        if (value !== prop) handleChange(value as T);\n      } else {\n        setUncontrolledProp(nextValue);\n      }\n    },\n    [isControlled, prop, setUncontrolledProp, handleChange]\n  );\n\n  return [value, setValue] as const;\n}\n\nfunction useUncontrolledState<T>({\n  defaultProp,\n  onChange,\n}: Omit<UseControllableStateParams<T>, 'prop'>) {\n  const uncontrolledState = React.useState<T | undefined>(defaultProp);\n  const [value] = uncontrolledState;\n  const prevValueRef = React.useRef(value);\n  const handleChange = useCallbackRef(onChange);\n\n  React.useEffect(() => {\n    if (prevValueRef.current !== value) {\n      handleChange(value as T);\n      prevValueRef.current = value;\n    }\n  }, [value, prevValueRef, handleChange]);\n\n  return uncontrolledState;\n}\n\nexport { useControllableState };\n",null],"names":["useControllableState","prop","defaultProp","onChange","uncontrolledProp","setUncontrolledProp","useUncontrolledState","isControlled","undefined","value","handleChange","useCallbackRef","setValue","React","nextValue","setter","uncontrolledState","prevValueRef","current"],"mappings":";;;;;;;;ACWA,SAASA,yCAAwB,EAXjC,MAYEC,IAD+B,EAXjC,aAaEC,WAF+B,EAAA,UAG/BC,WAAW,KAAM,CAAjBA,EAHF;IAKE,MAAM,CAACC,kBAAkBC,oBAAnB,GAA0CC,2CAAqB;QAhBvE,aAgByEJ;QAhBzE,UAgBsFC;;IACpF,MAAMI,eAAeN,SAASO;IAC9B,MAAMC,SAAQF,eAAeN,OAAOG;IACpC,MAAMM,eAAeC,wMAAeR;IAEpC,MAAMS,WAAgEC,6KACnEC,CAAAA;QACC,IAAIP,cAAc;YAChB,MAAMQ,SAASD;YACf,MAAML,QAAQ,OAAOK,cAAc,aAAaC,OAAOd,QAAQa;YAC/D,IAAIL,UAAUR,MAAMS,aAAaD;eAEjCJ,oBAAoBS;OAGxB;QAACP;QAAcN;QAAMI;QAAqBK;KAV0B;IAatE,OAAO;QAACD;QAAOG;KAAf;;AAGF,SAASN,2CAAwB,EArCjC,aAsCEJ,WAD+B,EArCjC,UAuCEC,QAAAA,EAFF;IAIE,MAAMa,oBAAoBH,0KAA8BX;IACxD,MAAM,CAACO,MAAD,GAAUO;IAChB,MAAMC,eAAeJ,wKAAaJ;IAClC,MAAMC,eAAeC,wMAAeR;IAEpCU,2KAAgB;QACd,IAAII,aAAaC,OAAb,KAAyBT,OAAO;YAClCC,aAAaD;YACbQ,aAAaC,OAAb,GAAuBT;;OAExB;QAACA;QAAOQ;QAAcP;KALzB;IAOA,OAAOM"}},
    {"offset": {"line": 1417, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1422, "column": 0}, "map": {"version":3,"sources":["packages/react/visually-hidden/src/index.ts","packages/react/visually-hidden/src/VisuallyHidden.tsx","/turbopack/[project]/node_modules/@radix-ui/react-visually-hidden/dist/index.mjs"],"sourcesContent":["export {\n  VisuallyHidden,\n  //\n  Root,\n} from './VisuallyHidden';\nexport type { VisuallyHiddenProps } from './VisuallyHidden';\n","import * as React from 'react';\nimport { Primitive } from '@radix-ui/react-primitive';\n\nimport type * as Radix from '@radix-ui/react-primitive';\n\n/* -------------------------------------------------------------------------------------------------\n * VisuallyHidden\n * -----------------------------------------------------------------------------------------------*/\n\nconst NAME = 'VisuallyHidden';\n\ntype VisuallyHiddenElement = React.ElementRef<typeof Primitive.span>;\ntype PrimitiveSpanProps = Radix.ComponentPropsWithoutRef<typeof Primitive.span>;\ninterface VisuallyHiddenProps extends PrimitiveSpanProps {}\n\nconst VisuallyHidden = React.forwardRef<VisuallyHiddenElement, VisuallyHiddenProps>(\n  (props, forwardedRef) => {\n    return (\n      <Primitive.span\n        {...props}\n        ref={forwardedRef}\n        style={{\n          // See: https://github.com/twbs/bootstrap/blob/master/scss/mixins/_screen-reader.scss\n          position: 'absolute',\n          border: 0,\n          width: 1,\n          height: 1,\n          padding: 0,\n          margin: -1,\n          overflow: 'hidden',\n          clip: 'rect(0, 0, 0, 0)',\n          whiteSpace: 'nowrap',\n          wordWrap: 'normal',\n          ...props.style,\n        }}\n      />\n    );\n  }\n);\n\nVisuallyHidden.displayName = NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst Root = VisuallyHidden;\n\nexport {\n  VisuallyHidden,\n  //\n  Root,\n};\nexport type { VisuallyHiddenProps };\n",null],"names":["NAME","VisuallyHidden","React","props","forwardedRef","position","border","width","height","padding","margin","overflow","clip","whiteSpace","wordWrap","style","Root"],"mappings":";;;;;;;;;;;ACKA;;qGAIA,MAAMA,6BAAO;AAMb,MAAMC,4CAAc,WAAA,GAAGC,4KACrB,CAACC,OAAOC;IACN,OAAA,WAAA,GACE,+KAAC,sLAAU,IAAX,EAAA,8KAAA,CAAA,GACMD,OAFR;QAGI,KAAKC;QACL,OAAO;YACL,qFAAA;YACAC,UAAU;YACVC,QAAQ;YACRC,OAAO;YACPC,QAAQ;YACRC,SAAS;YACTC,QAAQ,CAAA;YACRC,UAAU;YACVC,MAAM;YACNC,YAAY;YACZC,UAAU;YACV,GAAGX,MAAMY,KAAT;;;;AAOV,WAAA,GAAA,OAAA,MAAA,CAAA,2CAAA;IAAA,aAAA;;AAEA,kGAAA,GAEA,MAAMC,4CAAOf"}},
    {"offset": {"line": 1461, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1466, "column": 0}, "map": {"version":3,"sources":["packages/react/tooltip/src/index.ts","packages/react/tooltip/src/Tooltip.tsx","/turbopack/[project]/node_modules/@radix-ui/react-tooltip/dist/index.mjs"],"sourcesContent":["export {\n  createTooltipScope,\n  //\n  TooltipProvider,\n  Tooltip,\n  TooltipTrigger,\n  TooltipPortal,\n  TooltipContent,\n  TooltipArrow,\n  //\n  Provider,\n  Root,\n  Trigger,\n  Portal,\n  Content,\n  Arrow,\n} from './Tooltip';\nexport type {\n  TooltipProps,\n  TooltipTriggerProps,\n  TooltipPortalProps,\n  TooltipContentProps,\n  TooltipArrowProps,\n} from './Tooltip';\n","import * as React from 'react';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { DismissableLayer } from '@radix-ui/react-dismissable-layer';\nimport { useId } from '@radix-ui/react-id';\nimport * as PopperPrimitive from '@radix-ui/react-popper';\nimport { createPopperScope } from '@radix-ui/react-popper';\nimport { Portal as PortalPrimitive } from '@radix-ui/react-portal';\nimport { Presence } from '@radix-ui/react-presence';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport { Slottable } from '@radix-ui/react-slot';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\nimport * as VisuallyHiddenPrimitive from '@radix-ui/react-visually-hidden';\n\nimport type * as Radix from '@radix-ui/react-primitive';\nimport type { Scope } from '@radix-ui/react-context';\n\ntype ScopedProps<P = {}> = P & { __scopeTooltip?: Scope };\nconst [createTooltipContext, createTooltipScope] = createContextScope('Tooltip', [\n  createPopperScope,\n]);\nconst usePopperScope = createPopperScope();\n\n/* -------------------------------------------------------------------------------------------------\n * TooltipProvider\n * -----------------------------------------------------------------------------------------------*/\n\nconst PROVIDER_NAME = 'TooltipProvider';\nconst DEFAULT_DELAY_DURATION = 700;\nconst TOOLTIP_OPEN = 'tooltip.open';\n\ntype TooltipProviderContextValue = {\n  isOpenDelayed: boolean;\n  delayDuration: number;\n  onOpen(): void;\n  onClose(): void;\n  onPointerInTransitChange(inTransit: boolean): void;\n  isPointerInTransitRef: React.MutableRefObject<boolean>;\n  disableHoverableContent: boolean;\n};\n\nconst [TooltipProviderContextProvider, useTooltipProviderContext] =\n  createTooltipContext<TooltipProviderContextValue>(PROVIDER_NAME);\n\ninterface TooltipProviderProps {\n  children: React.ReactNode;\n  /**\n   * The duration from when the pointer enters the trigger until the tooltip gets opened.\n   * @defaultValue 700\n   */\n  delayDuration?: number;\n  /**\n   * How much time a user has to enter another trigger without incurring a delay again.\n   * @defaultValue 300\n   */\n  skipDelayDuration?: number;\n  /**\n   * When `true`, trying to hover the content will result in the tooltip closing as the pointer leaves the trigger.\n   * @defaultValue false\n   */\n  disableHoverableContent?: boolean;\n}\n\nconst TooltipProvider: React.FC<TooltipProviderProps> = (\n  props: ScopedProps<TooltipProviderProps>\n) => {\n  const {\n    __scopeTooltip,\n    delayDuration = DEFAULT_DELAY_DURATION,\n    skipDelayDuration = 300,\n    disableHoverableContent = false,\n    children,\n  } = props;\n  const [isOpenDelayed, setIsOpenDelayed] = React.useState(true);\n  const isPointerInTransitRef = React.useRef(false);\n  const skipDelayTimerRef = React.useRef(0);\n\n  React.useEffect(() => {\n    const skipDelayTimer = skipDelayTimerRef.current;\n    return () => window.clearTimeout(skipDelayTimer);\n  }, []);\n\n  return (\n    <TooltipProviderContextProvider\n      scope={__scopeTooltip}\n      isOpenDelayed={isOpenDelayed}\n      delayDuration={delayDuration}\n      onOpen={React.useCallback(() => {\n        window.clearTimeout(skipDelayTimerRef.current);\n        setIsOpenDelayed(false);\n      }, [])}\n      onClose={React.useCallback(() => {\n        window.clearTimeout(skipDelayTimerRef.current);\n        skipDelayTimerRef.current = window.setTimeout(\n          () => setIsOpenDelayed(true),\n          skipDelayDuration\n        );\n      }, [skipDelayDuration])}\n      isPointerInTransitRef={isPointerInTransitRef}\n      onPointerInTransitChange={React.useCallback((inTransit: boolean) => {\n        isPointerInTransitRef.current = inTransit;\n      }, [])}\n      disableHoverableContent={disableHoverableContent}\n    >\n      {children}\n    </TooltipProviderContextProvider>\n  );\n};\n\nTooltipProvider.displayName = PROVIDER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * Tooltip\n * -----------------------------------------------------------------------------------------------*/\n\nconst TOOLTIP_NAME = 'Tooltip';\n\ntype TooltipContextValue = {\n  contentId: string;\n  open: boolean;\n  stateAttribute: 'closed' | 'delayed-open' | 'instant-open';\n  trigger: TooltipTriggerElement | null;\n  onTriggerChange(trigger: TooltipTriggerElement | null): void;\n  onTriggerEnter(): void;\n  onTriggerLeave(): void;\n  onOpen(): void;\n  onClose(): void;\n  disableHoverableContent: boolean;\n};\n\nconst [TooltipContextProvider, useTooltipContext] =\n  createTooltipContext<TooltipContextValue>(TOOLTIP_NAME);\n\ninterface TooltipProps {\n  children?: React.ReactNode;\n  open?: boolean;\n  defaultOpen?: boolean;\n  onOpenChange?: (open: boolean) => void;\n  /**\n   * The duration from when the pointer enters the trigger until the tooltip gets opened. This will\n   * override the prop with the same name passed to Provider.\n   * @defaultValue 700\n   */\n  delayDuration?: number;\n  /**\n   * When `true`, trying to hover the content will result in the tooltip closing as the pointer leaves the trigger.\n   * @defaultValue false\n   */\n  disableHoverableContent?: boolean;\n}\n\nconst Tooltip: React.FC<TooltipProps> = (props: ScopedProps<TooltipProps>) => {\n  const {\n    __scopeTooltip,\n    children,\n    open: openProp,\n    defaultOpen = false,\n    onOpenChange,\n    disableHoverableContent: disableHoverableContentProp,\n    delayDuration: delayDurationProp,\n  } = props;\n  const providerContext = useTooltipProviderContext(TOOLTIP_NAME, props.__scopeTooltip);\n  const popperScope = usePopperScope(__scopeTooltip);\n  const [trigger, setTrigger] = React.useState<HTMLButtonElement | null>(null);\n  const contentId = useId();\n  const openTimerRef = React.useRef(0);\n  const disableHoverableContent =\n    disableHoverableContentProp ?? providerContext.disableHoverableContent;\n  const delayDuration = delayDurationProp ?? providerContext.delayDuration;\n  const wasOpenDelayedRef = React.useRef(false);\n  const [open = false, setOpen] = useControllableState({\n    prop: openProp,\n    defaultProp: defaultOpen,\n    onChange: (open) => {\n      if (open) {\n        providerContext.onOpen();\n\n        // as `onChange` is called within a lifecycle method we\n        // avoid dispatching via `dispatchDiscreteCustomEvent`.\n        document.dispatchEvent(new CustomEvent(TOOLTIP_OPEN));\n      } else {\n        providerContext.onClose();\n      }\n      onOpenChange?.(open);\n    },\n  });\n  const stateAttribute = React.useMemo(() => {\n    return open ? (wasOpenDelayedRef.current ? 'delayed-open' : 'instant-open') : 'closed';\n  }, [open]);\n\n  const handleOpen = React.useCallback(() => {\n    window.clearTimeout(openTimerRef.current);\n    wasOpenDelayedRef.current = false;\n    setOpen(true);\n  }, [setOpen]);\n\n  const handleClose = React.useCallback(() => {\n    window.clearTimeout(openTimerRef.current);\n    setOpen(false);\n  }, [setOpen]);\n\n  const handleDelayedOpen = React.useCallback(() => {\n    window.clearTimeout(openTimerRef.current);\n    openTimerRef.current = window.setTimeout(() => {\n      wasOpenDelayedRef.current = true;\n      setOpen(true);\n    }, delayDuration);\n  }, [delayDuration, setOpen]);\n\n  React.useEffect(() => {\n    return () => window.clearTimeout(openTimerRef.current);\n  }, []);\n\n  return (\n    <PopperPrimitive.Root {...popperScope}>\n      <TooltipContextProvider\n        scope={__scopeTooltip}\n        contentId={contentId}\n        open={open}\n        stateAttribute={stateAttribute}\n        trigger={trigger}\n        onTriggerChange={setTrigger}\n        onTriggerEnter={React.useCallback(() => {\n          if (providerContext.isOpenDelayed) handleDelayedOpen();\n          else handleOpen();\n        }, [providerContext.isOpenDelayed, handleDelayedOpen, handleOpen])}\n        onTriggerLeave={React.useCallback(() => {\n          if (disableHoverableContent) {\n            handleClose();\n          } else {\n            // Clear the timer in case the pointer leaves the trigger before the tooltip is opened.\n            window.clearTimeout(openTimerRef.current);\n          }\n        }, [handleClose, disableHoverableContent])}\n        onOpen={handleOpen}\n        onClose={handleClose}\n        disableHoverableContent={disableHoverableContent}\n      >\n        {children}\n      </TooltipContextProvider>\n    </PopperPrimitive.Root>\n  );\n};\n\nTooltip.displayName = TOOLTIP_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * TooltipTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nconst TRIGGER_NAME = 'TooltipTrigger';\n\ntype TooltipTriggerElement = React.ElementRef<typeof Primitive.button>;\ntype PrimitiveButtonProps = Radix.ComponentPropsWithoutRef<typeof Primitive.button>;\ninterface TooltipTriggerProps extends PrimitiveButtonProps {}\n\nconst TooltipTrigger = React.forwardRef<TooltipTriggerElement, TooltipTriggerProps>(\n  (props: ScopedProps<TooltipTriggerProps>, forwardedRef) => {\n    const { __scopeTooltip, ...triggerProps } = props;\n    const context = useTooltipContext(TRIGGER_NAME, __scopeTooltip);\n    const providerContext = useTooltipProviderContext(TRIGGER_NAME, __scopeTooltip);\n    const popperScope = usePopperScope(__scopeTooltip);\n    const ref = React.useRef<TooltipTriggerElement>(null);\n    const composedRefs = useComposedRefs(forwardedRef, ref, context.onTriggerChange);\n    const isPointerDownRef = React.useRef(false);\n    const hasPointerMoveOpenedRef = React.useRef(false);\n    const handlePointerUp = React.useCallback(() => (isPointerDownRef.current = false), []);\n\n    React.useEffect(() => {\n      return () => document.removeEventListener('pointerup', handlePointerUp);\n    }, [handlePointerUp]);\n\n    return (\n      <PopperPrimitive.Anchor asChild {...popperScope}>\n        <Primitive.button\n          // We purposefully avoid adding `type=button` here because tooltip triggers are also\n          // commonly anchors and the anchor `type` attribute signifies MIME type.\n          aria-describedby={context.open ? context.contentId : undefined}\n          data-state={context.stateAttribute}\n          {...triggerProps}\n          ref={composedRefs}\n          onPointerMove={composeEventHandlers(props.onPointerMove, (event) => {\n            if (event.pointerType === 'touch') return;\n            if (\n              !hasPointerMoveOpenedRef.current &&\n              !providerContext.isPointerInTransitRef.current\n            ) {\n              context.onTriggerEnter();\n              hasPointerMoveOpenedRef.current = true;\n            }\n          })}\n          onPointerLeave={composeEventHandlers(props.onPointerLeave, () => {\n            context.onTriggerLeave();\n            hasPointerMoveOpenedRef.current = false;\n          })}\n          onPointerDown={composeEventHandlers(props.onPointerDown, () => {\n            isPointerDownRef.current = true;\n            document.addEventListener('pointerup', handlePointerUp, { once: true });\n          })}\n          onFocus={composeEventHandlers(props.onFocus, () => {\n            if (!isPointerDownRef.current) context.onOpen();\n          })}\n          onBlur={composeEventHandlers(props.onBlur, context.onClose)}\n          onClick={composeEventHandlers(props.onClick, context.onClose)}\n        />\n      </PopperPrimitive.Anchor>\n    );\n  }\n);\n\nTooltipTrigger.displayName = TRIGGER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * TooltipPortal\n * -----------------------------------------------------------------------------------------------*/\n\nconst PORTAL_NAME = 'TooltipPortal';\n\ntype PortalContextValue = { forceMount?: true };\nconst [PortalProvider, usePortalContext] = createTooltipContext<PortalContextValue>(PORTAL_NAME, {\n  forceMount: undefined,\n});\n\ntype PortalProps = React.ComponentPropsWithoutRef<typeof PortalPrimitive>;\ninterface TooltipPortalProps {\n  children?: React.ReactNode;\n  /**\n   * Specify a container element to portal the content into.\n   */\n  container?: PortalProps['container'];\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst TooltipPortal: React.FC<TooltipPortalProps> = (props: ScopedProps<TooltipPortalProps>) => {\n  const { __scopeTooltip, forceMount, children, container } = props;\n  const context = useTooltipContext(PORTAL_NAME, __scopeTooltip);\n  return (\n    <PortalProvider scope={__scopeTooltip} forceMount={forceMount}>\n      <Presence present={forceMount || context.open}>\n        <PortalPrimitive asChild container={container}>\n          {children}\n        </PortalPrimitive>\n      </Presence>\n    </PortalProvider>\n  );\n};\n\nTooltipPortal.displayName = PORTAL_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * TooltipContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'TooltipContent';\n\ntype TooltipContentElement = TooltipContentImplElement;\ninterface TooltipContentProps extends TooltipContentImplProps {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst TooltipContent = React.forwardRef<TooltipContentElement, TooltipContentProps>(\n  (props: ScopedProps<TooltipContentProps>, forwardedRef) => {\n    const portalContext = usePortalContext(CONTENT_NAME, props.__scopeTooltip);\n    const { forceMount = portalContext.forceMount, side = 'top', ...contentProps } = props;\n    const context = useTooltipContext(CONTENT_NAME, props.__scopeTooltip);\n\n    return (\n      <Presence present={forceMount || context.open}>\n        {context.disableHoverableContent ? (\n          <TooltipContentImpl side={side} {...contentProps} ref={forwardedRef} />\n        ) : (\n          <TooltipContentHoverable side={side} {...contentProps} ref={forwardedRef} />\n        )}\n      </Presence>\n    );\n  }\n);\n\ntype Point = { x: number; y: number };\ntype Polygon = Point[];\n\ntype TooltipContentHoverableElement = TooltipContentImplElement;\ninterface TooltipContentHoverableProps extends TooltipContentImplProps {}\n\nconst TooltipContentHoverable = React.forwardRef<\n  TooltipContentHoverableElement,\n  TooltipContentHoverableProps\n>((props: ScopedProps<TooltipContentHoverableProps>, forwardedRef) => {\n  const context = useTooltipContext(CONTENT_NAME, props.__scopeTooltip);\n  const providerContext = useTooltipProviderContext(CONTENT_NAME, props.__scopeTooltip);\n  const ref = React.useRef<TooltipContentHoverableElement>(null);\n  const composedRefs = useComposedRefs(forwardedRef, ref);\n  const [pointerGraceArea, setPointerGraceArea] = React.useState<Polygon | null>(null);\n\n  const { trigger, onClose } = context;\n  const content = ref.current;\n\n  const { onPointerInTransitChange } = providerContext;\n\n  const handleRemoveGraceArea = React.useCallback(() => {\n    setPointerGraceArea(null);\n    onPointerInTransitChange(false);\n  }, [onPointerInTransitChange]);\n\n  const handleCreateGraceArea = React.useCallback(\n    (event: PointerEvent, hoverTarget: HTMLElement) => {\n      const currentTarget = event.currentTarget as HTMLElement;\n      const exitPoint = { x: event.clientX, y: event.clientY };\n      const exitSide = getExitSideFromRect(exitPoint, currentTarget.getBoundingClientRect());\n      const paddedExitPoints = getPaddedExitPoints(exitPoint, exitSide);\n      const hoverTargetPoints = getPointsFromRect(hoverTarget.getBoundingClientRect());\n      const graceArea = getHull([...paddedExitPoints, ...hoverTargetPoints]);\n      setPointerGraceArea(graceArea);\n      onPointerInTransitChange(true);\n    },\n    [onPointerInTransitChange]\n  );\n\n  React.useEffect(() => {\n    return () => handleRemoveGraceArea();\n  }, [handleRemoveGraceArea]);\n\n  React.useEffect(() => {\n    if (trigger && content) {\n      const handleTriggerLeave = (event: PointerEvent) => handleCreateGraceArea(event, content);\n      const handleContentLeave = (event: PointerEvent) => handleCreateGraceArea(event, trigger);\n\n      trigger.addEventListener('pointerleave', handleTriggerLeave);\n      content.addEventListener('pointerleave', handleContentLeave);\n      return () => {\n        trigger.removeEventListener('pointerleave', handleTriggerLeave);\n        content.removeEventListener('pointerleave', handleContentLeave);\n      };\n    }\n  }, [trigger, content, handleCreateGraceArea, handleRemoveGraceArea]);\n\n  React.useEffect(() => {\n    if (pointerGraceArea) {\n      const handleTrackPointerGrace = (event: PointerEvent) => {\n        const target = event.target as HTMLElement;\n        const pointerPosition = { x: event.clientX, y: event.clientY };\n        const hasEnteredTarget = trigger?.contains(target) || content?.contains(target);\n        const isPointerOutsideGraceArea = !isPointInPolygon(pointerPosition, pointerGraceArea);\n\n        if (hasEnteredTarget) {\n          handleRemoveGraceArea();\n        } else if (isPointerOutsideGraceArea) {\n          handleRemoveGraceArea();\n          onClose();\n        }\n      };\n      document.addEventListener('pointermove', handleTrackPointerGrace);\n      return () => document.removeEventListener('pointermove', handleTrackPointerGrace);\n    }\n  }, [trigger, content, pointerGraceArea, onClose, handleRemoveGraceArea]);\n\n  return <TooltipContentImpl {...props} ref={composedRefs} />;\n});\n\nconst [VisuallyHiddenContentContextProvider, useVisuallyHiddenContentContext] =\n  createTooltipContext(TOOLTIP_NAME, { isInside: false });\n\ntype TooltipContentImplElement = React.ElementRef<typeof PopperPrimitive.Content>;\ntype DismissableLayerProps = Radix.ComponentPropsWithoutRef<typeof DismissableLayer>;\ntype PopperContentProps = Radix.ComponentPropsWithoutRef<typeof PopperPrimitive.Content>;\ninterface TooltipContentImplProps extends Omit<PopperContentProps, 'onPlaced'> {\n  /**\n   * A more descriptive label for accessibility purpose\n   */\n  'aria-label'?: string;\n\n  /**\n   * Event handler called when the escape key is down.\n   * Can be prevented.\n   */\n  onEscapeKeyDown?: DismissableLayerProps['onEscapeKeyDown'];\n  /**\n   * Event handler called when the a `pointerdown` event happens outside of the `Tooltip`.\n   * Can be prevented.\n   */\n  onPointerDownOutside?: DismissableLayerProps['onPointerDownOutside'];\n}\n\nconst TooltipContentImpl = React.forwardRef<TooltipContentImplElement, TooltipContentImplProps>(\n  (props: ScopedProps<TooltipContentImplProps>, forwardedRef) => {\n    const {\n      __scopeTooltip,\n      children,\n      'aria-label': ariaLabel,\n      onEscapeKeyDown,\n      onPointerDownOutside,\n      ...contentProps\n    } = props;\n    const context = useTooltipContext(CONTENT_NAME, __scopeTooltip);\n    const popperScope = usePopperScope(__scopeTooltip);\n    const { onClose } = context;\n\n    // Close this tooltip if another one opens\n    React.useEffect(() => {\n      document.addEventListener(TOOLTIP_OPEN, onClose);\n      return () => document.removeEventListener(TOOLTIP_OPEN, onClose);\n    }, [onClose]);\n\n    // Close the tooltip if the trigger is scrolled\n    React.useEffect(() => {\n      if (context.trigger) {\n        const handleScroll = (event: Event) => {\n          const target = event.target as HTMLElement;\n          if (target?.contains(context.trigger)) onClose();\n        };\n        window.addEventListener('scroll', handleScroll, { capture: true });\n        return () => window.removeEventListener('scroll', handleScroll, { capture: true });\n      }\n    }, [context.trigger, onClose]);\n\n    return (\n      <DismissableLayer\n        asChild\n        disableOutsidePointerEvents={false}\n        onEscapeKeyDown={onEscapeKeyDown}\n        onPointerDownOutside={onPointerDownOutside}\n        onFocusOutside={(event) => event.preventDefault()}\n        onDismiss={onClose}\n      >\n        <PopperPrimitive.Content\n          data-state={context.stateAttribute}\n          {...popperScope}\n          {...contentProps}\n          ref={forwardedRef}\n          style={{\n            ...contentProps.style,\n            // re-namespace exposed content custom properties\n            ...{\n              '--radix-tooltip-content-transform-origin': 'var(--radix-popper-transform-origin)',\n              '--radix-tooltip-content-available-width': 'var(--radix-popper-available-width)',\n              '--radix-tooltip-content-available-height': 'var(--radix-popper-available-height)',\n              '--radix-tooltip-trigger-width': 'var(--radix-popper-anchor-width)',\n              '--radix-tooltip-trigger-height': 'var(--radix-popper-anchor-height)',\n            },\n          }}\n        >\n          <Slottable>{children}</Slottable>\n          <VisuallyHiddenContentContextProvider scope={__scopeTooltip} isInside={true}>\n            <VisuallyHiddenPrimitive.Root id={context.contentId} role=\"tooltip\">\n              {ariaLabel || children}\n            </VisuallyHiddenPrimitive.Root>\n          </VisuallyHiddenContentContextProvider>\n        </PopperPrimitive.Content>\n      </DismissableLayer>\n    );\n  }\n);\n\nTooltipContent.displayName = CONTENT_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * TooltipArrow\n * -----------------------------------------------------------------------------------------------*/\n\nconst ARROW_NAME = 'TooltipArrow';\n\ntype TooltipArrowElement = React.ElementRef<typeof PopperPrimitive.Arrow>;\ntype PopperArrowProps = Radix.ComponentPropsWithoutRef<typeof PopperPrimitive.Arrow>;\ninterface TooltipArrowProps extends PopperArrowProps {}\n\nconst TooltipArrow = React.forwardRef<TooltipArrowElement, TooltipArrowProps>(\n  (props: ScopedProps<TooltipArrowProps>, forwardedRef) => {\n    const { __scopeTooltip, ...arrowProps } = props;\n    const popperScope = usePopperScope(__scopeTooltip);\n    const visuallyHiddenContentContext = useVisuallyHiddenContentContext(\n      ARROW_NAME,\n      __scopeTooltip\n    );\n    // if the arrow is inside the `VisuallyHidden`, we don't want to render it all to\n    // prevent issues in positioning the arrow due to the duplicate\n    return visuallyHiddenContentContext.isInside ? null : (\n      <PopperPrimitive.Arrow {...popperScope} {...arrowProps} ref={forwardedRef} />\n    );\n  }\n);\n\nTooltipArrow.displayName = ARROW_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype Side = NonNullable<TooltipContentProps['side']>;\n\nfunction getExitSideFromRect(point: Point, rect: DOMRect): Side {\n  const top = Math.abs(rect.top - point.y);\n  const bottom = Math.abs(rect.bottom - point.y);\n  const right = Math.abs(rect.right - point.x);\n  const left = Math.abs(rect.left - point.x);\n\n  switch (Math.min(top, bottom, right, left)) {\n    case left:\n      return 'left';\n    case right:\n      return 'right';\n    case top:\n      return 'top';\n    case bottom:\n      return 'bottom';\n    default:\n      throw new Error('unreachable');\n  }\n}\n\nfunction getPaddedExitPoints(exitPoint: Point, exitSide: Side, padding = 5) {\n  const paddedExitPoints: Point[] = [];\n  switch (exitSide) {\n    case 'top':\n      paddedExitPoints.push(\n        { x: exitPoint.x - padding, y: exitPoint.y + padding },\n        { x: exitPoint.x + padding, y: exitPoint.y + padding }\n      );\n      break;\n    case 'bottom':\n      paddedExitPoints.push(\n        { x: exitPoint.x - padding, y: exitPoint.y - padding },\n        { x: exitPoint.x + padding, y: exitPoint.y - padding }\n      );\n      break;\n    case 'left':\n      paddedExitPoints.push(\n        { x: exitPoint.x + padding, y: exitPoint.y - padding },\n        { x: exitPoint.x + padding, y: exitPoint.y + padding }\n      );\n      break;\n    case 'right':\n      paddedExitPoints.push(\n        { x: exitPoint.x - padding, y: exitPoint.y - padding },\n        { x: exitPoint.x - padding, y: exitPoint.y + padding }\n      );\n      break;\n  }\n  return paddedExitPoints;\n}\n\nfunction getPointsFromRect(rect: DOMRect) {\n  const { top, right, bottom, left } = rect;\n  return [\n    { x: left, y: top },\n    { x: right, y: top },\n    { x: right, y: bottom },\n    { x: left, y: bottom },\n  ];\n}\n\n// Determine if a point is inside of a polygon.\n// Based on https://github.com/substack/point-in-polygon\nfunction isPointInPolygon(point: Point, polygon: Polygon) {\n  const { x, y } = point;\n  let inside = false;\n  for (let i = 0, j = polygon.length - 1; i < polygon.length; j = i++) {\n    const xi = polygon[i].x;\n    const yi = polygon[i].y;\n    const xj = polygon[j].x;\n    const yj = polygon[j].y;\n\n    // prettier-ignore\n    const intersect = ((yi > y) !== (yj > y)) && (x < (xj - xi) * (y - yi) / (yj - yi) + xi);\n    if (intersect) inside = !inside;\n  }\n\n  return inside;\n}\n\n// Returns a new array of points representing the convex hull of the given set of points.\n// https://www.nayuki.io/page/convex-hull-algorithm\nfunction getHull<P extends Point>(points: Readonly<Array<P>>): Array<P> {\n  const newPoints: Array<P> = points.slice();\n  newPoints.sort((a: Point, b: Point) => {\n    if (a.x < b.x) return -1;\n    else if (a.x > b.x) return +1;\n    else if (a.y < b.y) return -1;\n    else if (a.y > b.y) return +1;\n    else return 0;\n  });\n  return getHullPresorted(newPoints);\n}\n\n// Returns the convex hull, assuming that each points[i] <= points[i + 1]. Runs in O(n) time.\nfunction getHullPresorted<P extends Point>(points: Readonly<Array<P>>): Array<P> {\n  if (points.length <= 1) return points.slice();\n\n  const upperHull: Array<P> = [];\n  for (let i = 0; i < points.length; i++) {\n    const p = points[i];\n    while (upperHull.length >= 2) {\n      const q = upperHull[upperHull.length - 1];\n      const r = upperHull[upperHull.length - 2];\n      if ((q.x - r.x) * (p.y - r.y) >= (q.y - r.y) * (p.x - r.x)) upperHull.pop();\n      else break;\n    }\n    upperHull.push(p);\n  }\n  upperHull.pop();\n\n  const lowerHull: Array<P> = [];\n  for (let i = points.length - 1; i >= 0; i--) {\n    const p = points[i];\n    while (lowerHull.length >= 2) {\n      const q = lowerHull[lowerHull.length - 1];\n      const r = lowerHull[lowerHull.length - 2];\n      if ((q.x - r.x) * (p.y - r.y) >= (q.y - r.y) * (p.x - r.x)) lowerHull.pop();\n      else break;\n    }\n    lowerHull.push(p);\n  }\n  lowerHull.pop();\n\n  if (\n    upperHull.length === 1 &&\n    lowerHull.length === 1 &&\n    upperHull[0].x === lowerHull[0].x &&\n    upperHull[0].y === lowerHull[0].y\n  ) {\n    return upperHull;\n  } else {\n    return upperHull.concat(lowerHull);\n  }\n}\n\nconst Provider = TooltipProvider;\nconst Root = Tooltip;\nconst Trigger = TooltipTrigger;\nconst Portal = TooltipPortal;\nconst Content = TooltipContent;\nconst Arrow = TooltipArrow;\n\nexport {\n  createTooltipScope,\n  //\n  TooltipProvider,\n  Tooltip,\n  TooltipTrigger,\n  TooltipPortal,\n  TooltipContent,\n  TooltipArrow,\n  //\n  Provider,\n  Root,\n  Trigger,\n  Portal,\n  Content,\n  Arrow,\n};\nexport type {\n  TooltipProps,\n  TooltipTriggerProps,\n  TooltipPortalProps,\n  TooltipContentProps,\n  TooltipArrowProps,\n};\n",null],"names":["createTooltipContext","createTooltipScope","createContextScope","usePopperScope","createPopperScope","PROVIDER_NAME","DEFAULT_DELAY_DURATION","TOOLTIP_OPEN","TooltipProviderContextProvider","useTooltipProviderContext","TooltipProvider","props","__scopeTooltip","delayDuration","skipDelayDuration","disableHoverableContent","children","isOpenDelayed","setIsOpenDelayed","React","isPointerInTransitRef","skipDelayTimerRef","skipDelayTimer","current","window","clearTimeout","setTimeout","inTransit","TOOLTIP_NAME","TooltipContextProvider","useTooltipContext","Tooltip","open","openProp","defaultOpen","onOpenChange","disableHoverableContentProp","delayDurationProp","providerContext","popperScope","trigger","setTrigger","contentId","useId","openTimerRef","wasOpenDelayedRef","setOpen","useControllableState","prop","defaultProp","onChange","onOpen","document","dispatchEvent","CustomEvent","onClose","stateAttribute","handleOpen","handleClose","handleDelayedOpen","TRIGGER_NAME","TooltipTrigger","forwardedRef","triggerProps","context","ref","composedRefs","useComposedRefs","onTriggerChange","isPointerDownRef","hasPointerMoveOpenedRef","handlePointerUp","removeEventListener","undefined","composeEventHandlers","onPointerMove","event","pointerType","onTriggerEnter","onPointerLeave","onTriggerLeave","onPointerDown","addEventListener","once","onFocus","onBlur","onClick","PORTAL_NAME","PortalProvider","usePortalContext","forceMount","TooltipPortal","container","CONTENT_NAME","TooltipContent","portalContext","side","contentProps","TooltipContentHoverable","pointerGraceArea","setPointerGraceArea","content","onPointerInTransitChange","handleRemoveGraceArea","handleCreateGraceArea","hoverTarget","currentTarget","exitPoint","x","clientX","y","clientY","exitSide","getExitSideFromRect","getBoundingClientRect","paddedExitPoints","getPaddedExitPoints","hoverTargetPoints","getPointsFromRect","graceArea","getHull","handleTriggerLeave","handleContentLeave","handleTrackPointerGrace","target","pointerPosition","hasEnteredTarget","contains","isPointerOutsideGraceArea","isPointInPolygon","VisuallyHiddenContentContextProvider","useVisuallyHiddenContentContext","isInside","TooltipContentImpl","ariaLabel","onEscapeKeyDown","onPointerDownOutside","handleScroll","capture","preventDefault","style","ARROW_NAME","TooltipArrow","arrowProps","visuallyHiddenContentContext","point","rect","top","Math","abs","bottom","right","left","min","Error","padding","push","polygon","inside","i","j","length","xi","yi","xj","yj","intersect","points","newPoints","slice","sort","a","b","getHullPresorted","upperHull","p","q","r","pop","lowerHull","concat","Provider","Root","Trigger","Portal","Content","Arrow"],"mappings":"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"}},
    {"offset": {"line": 2040, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2045, "column": 0}, "map": {"version":3,"sources":["packages/react/collection/src/index.ts","packages/react/collection/src/Collection.tsx","/turbopack/[project]/node_modules/@radix-ui/react-collection/dist/index.mjs"],"sourcesContent":["export { createCollection } from './Collection';\nexport type { CollectionProps } from './Collection';\n","import React from 'react';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { Slot } from '@radix-ui/react-slot';\n\nimport type * as Radix from '@radix-ui/react-primitive';\n\ntype SlotProps = Radix.ComponentPropsWithoutRef<typeof Slot>;\ntype CollectionElement = HTMLElement;\ninterface CollectionProps extends SlotProps {\n  scope: any;\n}\n\n// We have resorted to returning slots directly rather than exposing primitives that can then\n// be slotted like `<CollectionItem as={Slot}>…</CollectionItem>`.\n// This is because we encountered issues with generic types that cannot be statically analysed\n// due to creating them dynamically via createCollection.\n\nfunction createCollection<ItemElement extends HTMLElement, ItemData = {}>(name: string) {\n  /* -----------------------------------------------------------------------------------------------\n   * CollectionProvider\n   * ---------------------------------------------------------------------------------------------*/\n\n  const PROVIDER_NAME = name + 'CollectionProvider';\n  const [createCollectionContext, createCollectionScope] = createContextScope(PROVIDER_NAME);\n\n  type ContextValue = {\n    collectionRef: React.RefObject<CollectionElement>;\n    itemMap: Map<React.RefObject<ItemElement>, { ref: React.RefObject<ItemElement> } & ItemData>;\n  };\n\n  const [CollectionProviderImpl, useCollectionContext] = createCollectionContext<ContextValue>(\n    PROVIDER_NAME,\n    { collectionRef: { current: null }, itemMap: new Map() }\n  );\n\n  const CollectionProvider: React.FC<{ children?: React.ReactNode; scope: any }> = (props) => {\n    const { scope, children } = props;\n    const ref = React.useRef<CollectionElement>(null);\n    const itemMap = React.useRef<ContextValue['itemMap']>(new Map()).current;\n    return (\n      <CollectionProviderImpl scope={scope} itemMap={itemMap} collectionRef={ref}>\n        {children}\n      </CollectionProviderImpl>\n    );\n  };\n\n  CollectionProvider.displayName = PROVIDER_NAME;\n\n  /* -----------------------------------------------------------------------------------------------\n   * CollectionSlot\n   * ---------------------------------------------------------------------------------------------*/\n\n  const COLLECTION_SLOT_NAME = name + 'CollectionSlot';\n\n  const CollectionSlot = React.forwardRef<CollectionElement, CollectionProps>(\n    (props, forwardedRef) => {\n      const { scope, children } = props;\n      const context = useCollectionContext(COLLECTION_SLOT_NAME, scope);\n      const composedRefs = useComposedRefs(forwardedRef, context.collectionRef);\n      return <Slot ref={composedRefs}>{children}</Slot>;\n    }\n  );\n\n  CollectionSlot.displayName = COLLECTION_SLOT_NAME;\n\n  /* -----------------------------------------------------------------------------------------------\n   * CollectionItem\n   * ---------------------------------------------------------------------------------------------*/\n\n  const ITEM_SLOT_NAME = name + 'CollectionItemSlot';\n  const ITEM_DATA_ATTR = 'data-radix-collection-item';\n\n  type CollectionItemSlotProps = ItemData & {\n    children: React.ReactNode;\n    scope: any;\n  };\n\n  const CollectionItemSlot = React.forwardRef<ItemElement, CollectionItemSlotProps>(\n    (props, forwardedRef) => {\n      const { scope, children, ...itemData } = props;\n      const ref = React.useRef<ItemElement>(null);\n      const composedRefs = useComposedRefs(forwardedRef, ref);\n      const context = useCollectionContext(ITEM_SLOT_NAME, scope);\n\n      React.useEffect(() => {\n        context.itemMap.set(ref, { ref, ...(itemData as unknown as ItemData) });\n        return () => void context.itemMap.delete(ref);\n      });\n\n      return (\n        <Slot {...{ [ITEM_DATA_ATTR]: '' }} ref={composedRefs}>\n          {children}\n        </Slot>\n      );\n    }\n  );\n\n  CollectionItemSlot.displayName = ITEM_SLOT_NAME;\n\n  /* -----------------------------------------------------------------------------------------------\n   * useCollection\n   * ---------------------------------------------------------------------------------------------*/\n\n  function useCollection(scope: any) {\n    const context = useCollectionContext(name + 'CollectionConsumer', scope);\n\n    const getItems = React.useCallback(() => {\n      const collectionNode = context.collectionRef.current;\n      if (!collectionNode) return [];\n      const orderedNodes = Array.from(collectionNode.querySelectorAll(`[${ITEM_DATA_ATTR}]`));\n      const items = Array.from(context.itemMap.values());\n      const orderedItems = items.sort(\n        (a, b) => orderedNodes.indexOf(a.ref.current!) - orderedNodes.indexOf(b.ref.current!)\n      );\n      return orderedItems;\n    }, [context.collectionRef, context.itemMap]);\n\n    return getItems;\n  }\n\n  return [\n    { Provider: CollectionProvider, Slot: CollectionSlot, ItemSlot: CollectionItemSlot },\n    useCollection,\n    createCollectionScope,\n  ] as const;\n}\n\nexport { createCollection };\nexport type { CollectionProps };\n",null],"names":["createCollection","name","PROVIDER_NAME","createCollectionContext","createCollectionScope","createContextScope","CollectionProviderImpl","useCollectionContext","collectionRef","current","itemMap","Map","CollectionProvider","props","scope","children","ref","React","useRef","COLLECTION_SLOT_NAME","CollectionSlot","forwardRef","forwardedRef","context","composedRefs","useComposedRefs","ITEM_SLOT_NAME","ITEM_DATA_ATTR","CollectionItemSlot","itemData","useEffect","set","delete","useCollection","getItems","useCallback","collectionNode","orderedNodes","Array","from","querySelectorAll","items","values","orderedItems","sort","a","b","indexOf","Provider","Slot","ItemSlot"],"mappings":"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"}},
    {"offset": {"line": 2152, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2157, "column": 0}, "map": {"version":3,"sources":["packages/react/direction/src/index.ts","packages/react/direction/src/Direction.tsx","/turbopack/[project]/node_modules/@radix-ui/react-direction/dist/index.mjs"],"sourcesContent":["export {\n  useDirection,\n  //\n  Provider,\n  //\n  DirectionProvider,\n} from './Direction';\n","import * as React from 'react';\n\ntype Direction = 'ltr' | 'rtl';\nconst DirectionContext = React.createContext<Direction | undefined>(undefined);\n\n/* -------------------------------------------------------------------------------------------------\n * Direction\n * -----------------------------------------------------------------------------------------------*/\n\ninterface DirectionProviderProps {\n  children?: React.ReactNode;\n  dir: Direction;\n}\nconst DirectionProvider: React.FC<DirectionProviderProps> = (props) => {\n  const { dir, children } = props;\n  return <DirectionContext.Provider value={dir}>{children}</DirectionContext.Provider>;\n};\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction useDirection(localDir?: Direction) {\n  const globalDir = React.useContext(DirectionContext);\n  return localDir || globalDir || 'ltr';\n}\n\nconst Provider = DirectionProvider;\n\nexport {\n  useDirection,\n  //\n  Provider,\n  //\n  DirectionProvider,\n};\n",null],"names":["DirectionContext","React","undefined","DirectionProvider","props","dir","children","useDirection","localDir","globalDir","Provider"],"mappings":";;;;;;;;ACGA,MAAMA,yCAAgB,WAAA,GAAGC,+KAA2CC;AAEpE;;qGAQA,MAAMC,4CAAuDC,CAAAA;IAC3D,MAAM,EAdR,KAcUC,GAAF,EAdR,UAceC,QAAAA,EAAP,GAAoBF;IAC1B,OAAA,WAAA,GAAO,+KAAC,uCAAiB,QAAlB,EAAP;QAAkC,OAAOC;OAAMC;;AAGjD,kGAAA,GAEA,SAASC,0CAAaC,QAAtB;IACE,MAAMC,YAAYR,4KAAiBD;IACnC,OAAOQ,YAAYC,aAAa;;AAGlC,MAAMC,4CAAWP"}},
    {"offset": {"line": 2181, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2186, "column": 0}, "map": {"version":3,"sources":["packages/react/focus-guards/src/index.ts","packages/react/focus-guards/src/FocusGuards.tsx","/turbopack/[project]/node_modules/@radix-ui/react-focus-guards/dist/index.mjs"],"sourcesContent":["export {\n  FocusGuards,\n  //\n  Root,\n  //\n  useFocusGuards,\n} from './FocusGuards';\n","import * as React from 'react';\n\n/** Number of components which have requested interest to have focus guards */\nlet count = 0;\n\nfunction FocusGuards(props: any) {\n  useFocusGuards();\n  return props.children;\n}\n\n/**\n * Injects a pair of focus guards at the edges of the whole DOM tree\n * to ensure `focusin` & `focusout` events can be caught consistently.\n */\nfunction useFocusGuards() {\n  React.useEffect(() => {\n    const edgeGuards = document.querySelectorAll('[data-radix-focus-guard]');\n    document.body.insertAdjacentElement('afterbegin', edgeGuards[0] ?? createFocusGuard());\n    document.body.insertAdjacentElement('beforeend', edgeGuards[1] ?? createFocusGuard());\n    count++;\n\n    return () => {\n      if (count === 1) {\n        document.querySelectorAll('[data-radix-focus-guard]').forEach((node) => node.remove());\n      }\n      count--;\n    };\n  }, []);\n}\n\nfunction createFocusGuard() {\n  const element = document.createElement('span');\n  element.setAttribute('data-radix-focus-guard', '');\n  element.tabIndex = 0;\n  element.style.cssText = 'outline: none; opacity: 0; position: fixed; pointer-events: none';\n  return element;\n}\n\nconst Root = FocusGuards;\n\nexport {\n  FocusGuards,\n  //\n  Root,\n  //\n  useFocusGuards,\n};\n",null],"names":["count","FocusGuards","props","useFocusGuards","children","React","edgeGuards","document","querySelectorAll","body","insertAdjacentElement","createFocusGuard","forEach","node","remove","element","createElement","setAttribute","tabIndex","style","cssText","Root"],"mappings":";;;;;;;;ACEA,4EAAA,GACA,IAAIA,8BAAQ;AAEZ,SAASC,0CAAYC,KAArB;IACEC;IACA,OAAOD,MAAME,QAAb;;AAGF;;;IAIA,SAASD;IACPE,2KAAgB;QAAM,IAAA,cAAA;QACpB,MAAMC,aAAaC,SAASC,gBAAT,CAA0B;QAC7CD,SAASE,IAAT,CAAcC,qBAAd,CAAoC,cAApC,CAAA,eAAkDJ,UAAU,CAAC,EAA7D,MAAA,QAAA,iBAAA,KAAA,IAAA,eAAmEK;QACnEJ,SAASE,IAAT,CAAcC,qBAAd,CAAoC,aAApC,CAAA,gBAAiDJ,UAAU,CAAC,EAA5D,MAAA,QAAA,kBAAA,KAAA,IAAA,gBAAkEK;QAClEX;QAEA,OAAO;YACL,IAAIA,gCAAU,GACZO,SAASC,gBAAT,CAA0B,4BAA4BI,OAAtD,CAA+DC,CAAAA,OAASA,KAAKC,MAAL;YAE1Ed;;OAED,EAZH;;AAeF,SAASW;IACP,MAAMI,UAAUR,SAASS,aAAT,CAAuB;IACvCD,QAAQE,YAAR,CAAqB,0BAA0B;IAC/CF,QAAQG,QAAR,GAAmB;IACnBH,QAAQI,KAAR,CAAcC,OAAd,GAAwB;IACxB,OAAOL;;AAGT,MAAMM,4CAAOpB"}},
    {"offset": {"line": 2225, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2230, "column": 0}, "map": {"version":3,"sources":["packages/react/focus-scope/src/index.ts","packages/react/focus-scope/src/FocusScope.tsx","/turbopack/[project]/node_modules/@radix-ui/react-focus-scope/dist/index.mjs"],"sourcesContent":["export {\n  FocusScope,\n  //\n  Root,\n} from './FocusScope';\nexport type { FocusScopeProps } from './FocusScope';\n","import * as React from 'react';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\n\nimport type * as Radix from '@radix-ui/react-primitive';\n\nconst AUTOFOCUS_ON_MOUNT = 'focusScope.autoFocusOnMount';\nconst AUTOFOCUS_ON_UNMOUNT = 'focusScope.autoFocusOnUnmount';\nconst EVENT_OPTIONS = { bubbles: false, cancelable: true };\n\ntype FocusableTarget = HTMLElement | { focus(): void };\n\n/* -------------------------------------------------------------------------------------------------\n * FocusScope\n * -----------------------------------------------------------------------------------------------*/\n\nconst FOCUS_SCOPE_NAME = 'FocusScope';\n\ntype FocusScopeElement = React.ElementRef<typeof Primitive.div>;\ntype PrimitiveDivProps = Radix.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface FocusScopeProps extends PrimitiveDivProps {\n  /**\n   * When `true`, tabbing from last item will focus first tabbable\n   * and shift+tab from first item will focus last tababble.\n   * @defaultValue false\n   */\n  loop?: boolean;\n\n  /**\n   * When `true`, focus cannot escape the focus scope via keyboard,\n   * pointer, or a programmatic focus.\n   * @defaultValue false\n   */\n  trapped?: boolean;\n\n  /**\n   * Event handler called when auto-focusing on mount.\n   * Can be prevented.\n   */\n  onMountAutoFocus?: (event: Event) => void;\n\n  /**\n   * Event handler called when auto-focusing on unmount.\n   * Can be prevented.\n   */\n  onUnmountAutoFocus?: (event: Event) => void;\n}\n\nconst FocusScope = React.forwardRef<FocusScopeElement, FocusScopeProps>((props, forwardedRef) => {\n  const {\n    loop = false,\n    trapped = false,\n    onMountAutoFocus: onMountAutoFocusProp,\n    onUnmountAutoFocus: onUnmountAutoFocusProp,\n    ...scopeProps\n  } = props;\n  const [container, setContainer] = React.useState<HTMLElement | null>(null);\n  const onMountAutoFocus = useCallbackRef(onMountAutoFocusProp);\n  const onUnmountAutoFocus = useCallbackRef(onUnmountAutoFocusProp);\n  const lastFocusedElementRef = React.useRef<HTMLElement | null>(null);\n  const composedRefs = useComposedRefs(forwardedRef, (node) => setContainer(node));\n\n  const focusScope = React.useRef({\n    paused: false,\n    pause() {\n      this.paused = true;\n    },\n    resume() {\n      this.paused = false;\n    },\n  }).current;\n\n  // Takes care of trapping focus if focus is moved outside programmatically for example\n  React.useEffect(() => {\n    if (trapped) {\n      function handleFocusIn(event: FocusEvent) {\n        if (focusScope.paused || !container) return;\n        const target = event.target as HTMLElement | null;\n        if (container.contains(target)) {\n          lastFocusedElementRef.current = target;\n        } else {\n          focus(lastFocusedElementRef.current, { select: true });\n        }\n      }\n\n      function handleFocusOut(event: FocusEvent) {\n        if (focusScope.paused || !container) return;\n        const relatedTarget = event.relatedTarget as HTMLElement | null;\n\n        // A `focusout` event with a `null` `relatedTarget` will happen in at least two cases:\n        //\n        // 1. When the user switches app/tabs/windows/the browser itself loses focus.\n        // 2. In Google Chrome, when the focused element is removed from the DOM.\n        //\n        // We let the browser do its thing here because:\n        //\n        // 1. The browser already keeps a memory of what's focused for when the page gets refocused.\n        // 2. In Google Chrome, if we try to focus the deleted focused element (as per below), it\n        //    throws the CPU to 100%, so we avoid doing anything for this reason here too.\n        if (relatedTarget === null) return;\n\n        // If the focus has moved to an actual legitimate element (`relatedTarget !== null`)\n        // that is outside the container, we move focus to the last valid focused element inside.\n        if (!container.contains(relatedTarget)) {\n          focus(lastFocusedElementRef.current, { select: true });\n        }\n      }\n\n      // When the focused element gets removed from the DOM, browsers move focus\n      // back to the document.body. In this case, we move focus to the container\n      // to keep focus trapped correctly.\n      function handleMutations(mutations: MutationRecord[]) {\n        const focusedElement = document.activeElement as HTMLElement | null;\n        if (focusedElement !== document.body) return;\n        for (const mutation of mutations) {\n          if (mutation.removedNodes.length > 0) focus(container);\n        }\n      }\n\n      document.addEventListener('focusin', handleFocusIn);\n      document.addEventListener('focusout', handleFocusOut);\n      const mutationObserver = new MutationObserver(handleMutations);\n      if (container) mutationObserver.observe(container, { childList: true, subtree: true });\n\n      return () => {\n        document.removeEventListener('focusin', handleFocusIn);\n        document.removeEventListener('focusout', handleFocusOut);\n        mutationObserver.disconnect();\n      };\n    }\n  }, [trapped, container, focusScope.paused]);\n\n  React.useEffect(() => {\n    if (container) {\n      focusScopesStack.add(focusScope);\n      const previouslyFocusedElement = document.activeElement as HTMLElement | null;\n      const hasFocusedCandidate = container.contains(previouslyFocusedElement);\n\n      if (!hasFocusedCandidate) {\n        const mountEvent = new CustomEvent(AUTOFOCUS_ON_MOUNT, EVENT_OPTIONS);\n        container.addEventListener(AUTOFOCUS_ON_MOUNT, onMountAutoFocus);\n        container.dispatchEvent(mountEvent);\n        if (!mountEvent.defaultPrevented) {\n          focusFirst(removeLinks(getTabbableCandidates(container)), { select: true });\n          if (document.activeElement === previouslyFocusedElement) {\n            focus(container);\n          }\n        }\n      }\n\n      return () => {\n        container.removeEventListener(AUTOFOCUS_ON_MOUNT, onMountAutoFocus);\n\n        // We hit a react bug (fixed in v17) with focusing in unmount.\n        // We need to delay the focus a little to get around it for now.\n        // See: https://github.com/facebook/react/issues/17894\n        setTimeout(() => {\n          const unmountEvent = new CustomEvent(AUTOFOCUS_ON_UNMOUNT, EVENT_OPTIONS);\n          container.addEventListener(AUTOFOCUS_ON_UNMOUNT, onUnmountAutoFocus);\n          container.dispatchEvent(unmountEvent);\n          if (!unmountEvent.defaultPrevented) {\n            focus(previouslyFocusedElement ?? document.body, { select: true });\n          }\n          // we need to remove the listener after we `dispatchEvent`\n          container.removeEventListener(AUTOFOCUS_ON_UNMOUNT, onUnmountAutoFocus);\n\n          focusScopesStack.remove(focusScope);\n        }, 0);\n      };\n    }\n  }, [container, onMountAutoFocus, onUnmountAutoFocus, focusScope]);\n\n  // Takes care of looping focus (when tabbing whilst at the edges)\n  const handleKeyDown = React.useCallback(\n    (event: React.KeyboardEvent) => {\n      if (!loop && !trapped) return;\n      if (focusScope.paused) return;\n\n      const isTabKey = event.key === 'Tab' && !event.altKey && !event.ctrlKey && !event.metaKey;\n      const focusedElement = document.activeElement as HTMLElement | null;\n\n      if (isTabKey && focusedElement) {\n        const container = event.currentTarget as HTMLElement;\n        const [first, last] = getTabbableEdges(container);\n        const hasTabbableElementsInside = first && last;\n\n        // we can only wrap focus if we have tabbable edges\n        if (!hasTabbableElementsInside) {\n          if (focusedElement === container) event.preventDefault();\n        } else {\n          if (!event.shiftKey && focusedElement === last) {\n            event.preventDefault();\n            if (loop) focus(first, { select: true });\n          } else if (event.shiftKey && focusedElement === first) {\n            event.preventDefault();\n            if (loop) focus(last, { select: true });\n          }\n        }\n      }\n    },\n    [loop, trapped, focusScope.paused]\n  );\n\n  return (\n    <Primitive.div tabIndex={-1} {...scopeProps} ref={composedRefs} onKeyDown={handleKeyDown} />\n  );\n});\n\nFocusScope.displayName = FOCUS_SCOPE_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * Utils\n * -----------------------------------------------------------------------------------------------*/\n\n/**\n * Attempts focusing the first element in a list of candidates.\n * Stops when focus has actually moved.\n */\nfunction focusFirst(candidates: HTMLElement[], { select = false } = {}) {\n  const previouslyFocusedElement = document.activeElement;\n  for (const candidate of candidates) {\n    focus(candidate, { select });\n    if (document.activeElement !== previouslyFocusedElement) return;\n  }\n}\n\n/**\n * Returns the first and last tabbable elements inside a container.\n */\nfunction getTabbableEdges(container: HTMLElement) {\n  const candidates = getTabbableCandidates(container);\n  const first = findVisible(candidates, container);\n  const last = findVisible(candidates.reverse(), container);\n  return [first, last] as const;\n}\n\n/**\n * Returns a list of potential tabbable candidates.\n *\n * NOTE: This is only a close approximation. For example it doesn't take into account cases like when\n * elements are not visible. This cannot be worked out easily by just reading a property, but rather\n * necessitate runtime knowledge (computed styles, etc). We deal with these cases separately.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/TreeWalker\n * Credit: https://github.com/discord/focus-layers/blob/master/src/util/wrapFocus.tsx#L1\n */\nfunction getTabbableCandidates(container: HTMLElement) {\n  const nodes: HTMLElement[] = [];\n  const walker = document.createTreeWalker(container, NodeFilter.SHOW_ELEMENT, {\n    acceptNode: (node: any) => {\n      const isHiddenInput = node.tagName === 'INPUT' && node.type === 'hidden';\n      if (node.disabled || node.hidden || isHiddenInput) return NodeFilter.FILTER_SKIP;\n      // `.tabIndex` is not the same as the `tabindex` attribute. It works on the\n      // runtime's understanding of tabbability, so this automatically accounts\n      // for any kind of element that could be tabbed to.\n      return node.tabIndex >= 0 ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_SKIP;\n    },\n  });\n  while (walker.nextNode()) nodes.push(walker.currentNode as HTMLElement);\n  // we do not take into account the order of nodes with positive `tabIndex` as it\n  // hinders accessibility to have tab order different from visual order.\n  return nodes;\n}\n\n/**\n * Returns the first visible element in a list.\n * NOTE: Only checks visibility up to the `container`.\n */\nfunction findVisible(elements: HTMLElement[], container: HTMLElement) {\n  for (const element of elements) {\n    // we stop checking if it's hidden at the `container` level (excluding)\n    if (!isHidden(element, { upTo: container })) return element;\n  }\n}\n\nfunction isHidden(node: HTMLElement, { upTo }: { upTo?: HTMLElement }) {\n  if (getComputedStyle(node).visibility === 'hidden') return true;\n  while (node) {\n    // we stop at `upTo` (excluding it)\n    if (upTo !== undefined && node === upTo) return false;\n    if (getComputedStyle(node).display === 'none') return true;\n    node = node.parentElement as HTMLElement;\n  }\n  return false;\n}\n\nfunction isSelectableInput(element: any): element is FocusableTarget & { select: () => void } {\n  return element instanceof HTMLInputElement && 'select' in element;\n}\n\nfunction focus(element?: FocusableTarget | null, { select = false } = {}) {\n  // only focus if that element is focusable\n  if (element && element.focus) {\n    const previouslyFocusedElement = document.activeElement;\n    // NOTE: we prevent scrolling on focus, to minimize jarring transitions for users\n    element.focus({ preventScroll: true });\n    // only select if its not the same element, it supports selection and we need to select\n    if (element !== previouslyFocusedElement && isSelectableInput(element) && select)\n      element.select();\n  }\n}\n\n/* -------------------------------------------------------------------------------------------------\n * FocusScope stack\n * -----------------------------------------------------------------------------------------------*/\n\ntype FocusScopeAPI = { paused: boolean; pause(): void; resume(): void };\nconst focusScopesStack = createFocusScopesStack();\n\nfunction createFocusScopesStack() {\n  /** A stack of focus scopes, with the active one at the top */\n  let stack: FocusScopeAPI[] = [];\n\n  return {\n    add(focusScope: FocusScopeAPI) {\n      // pause the currently active focus scope (at the top of the stack)\n      const activeFocusScope = stack[0];\n      if (focusScope !== activeFocusScope) {\n        activeFocusScope?.pause();\n      }\n      // remove in case it already exists (because we'll re-add it at the top of the stack)\n      stack = arrayRemove(stack, focusScope);\n      stack.unshift(focusScope);\n    },\n\n    remove(focusScope: FocusScopeAPI) {\n      stack = arrayRemove(stack, focusScope);\n      stack[0]?.resume();\n    },\n  };\n}\n\nfunction arrayRemove<T>(array: T[], item: T) {\n  const updatedArray = [...array];\n  const index = updatedArray.indexOf(item);\n  if (index !== -1) {\n    updatedArray.splice(index, 1);\n  }\n  return updatedArray;\n}\n\nfunction removeLinks(items: HTMLElement[]) {\n  return items.filter((item) => item.tagName !== 'A');\n}\n\nconst Root = FocusScope;\n\nexport {\n  FocusScope,\n  //\n  Root,\n};\nexport type { FocusScopeProps };\n",null],"names":["AUTOFOCUS_ON_MOUNT","AUTOFOCUS_ON_UNMOUNT","EVENT_OPTIONS","bubbles","cancelable","FOCUS_SCOPE_NAME","FocusScope","React","props","forwardedRef","loop","trapped","onMountAutoFocus","onMountAutoFocusProp","onUnmountAutoFocus","onUnmountAutoFocusProp","scopeProps","container","setContainer","useCallbackRef","lastFocusedElementRef","composedRefs","useComposedRefs","node","focusScope","paused","pause","resume","current","handleFocusIn","event","target","contains","focus","select","handleFocusOut","relatedTarget","handleMutations","mutations","focusedElement","document","activeElement","body","mutation","removedNodes","length","addEventListener","mutationObserver","MutationObserver","observe","childList","subtree","removeEventListener","disconnect","focusScopesStack","add","previouslyFocusedElement","hasFocusedCandidate","mountEvent","CustomEvent","dispatchEvent","defaultPrevented","focusFirst","removeLinks","getTabbableCandidates","setTimeout","unmountEvent","remove","handleKeyDown","isTabKey","key","altKey","ctrlKey","metaKey","currentTarget","first","last","getTabbableEdges","hasTabbableElementsInside","preventDefault","shiftKey","candidates","candidate","findVisible","reverse","nodes","walker","createTreeWalker","NodeFilter","SHOW_ELEMENT","acceptNode","isHiddenInput","tagName","type","disabled","hidden","FILTER_SKIP","tabIndex","FILTER_ACCEPT","nextNode","push","currentNode","elements","element","isHidden","upTo","getComputedStyle","visibility","undefined","display","parentElement","isSelectableInput","HTMLInputElement","preventScroll","createFocusScopesStack","stack","activeFocusScope","arrayRemove","unshift","array","item","updatedArray","index","indexOf","splice","items","filter","Root"],"mappings":"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"}},
    {"offset": {"line": 2520, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2525, "column": 0}, "map": {"version":3,"sources":["packages/react/roving-focus/src/index.ts","packages/react/roving-focus/src/RovingFocusGroup.tsx","/turbopack/[project]/node_modules/@radix-ui/react-roving-focus/dist/index.mjs"],"sourcesContent":["export {\n  createRovingFocusGroupScope,\n  //\n  RovingFocusGroup,\n  RovingFocusGroupItem,\n  //\n  Root,\n  Item,\n} from './RovingFocusGroup';\nexport type { RovingFocusGroupProps, RovingFocusItemProps } from './RovingFocusGroup';\n","import * as React from 'react';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { createCollection } from '@radix-ui/react-collection';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { useId } from '@radix-ui/react-id';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\nimport { useDirection } from '@radix-ui/react-direction';\n\nimport type * as Radix from '@radix-ui/react-primitive';\nimport type { Scope } from '@radix-ui/react-context';\n\nconst ENTRY_FOCUS = 'rovingFocusGroup.onEntryFocus';\nconst EVENT_OPTIONS = { bubbles: false, cancelable: true };\n\n/* -------------------------------------------------------------------------------------------------\n * RovingFocusGroup\n * -----------------------------------------------------------------------------------------------*/\n\nconst GROUP_NAME = 'RovingFocusGroup';\n\ntype ItemData = { id: string; focusable: boolean; active: boolean };\nconst [Collection, useCollection, createCollectionScope] = createCollection<\n  HTMLSpanElement,\n  ItemData\n>(GROUP_NAME);\n\ntype ScopedProps<P> = P & { __scopeRovingFocusGroup?: Scope };\nconst [createRovingFocusGroupContext, createRovingFocusGroupScope] = createContextScope(\n  GROUP_NAME,\n  [createCollectionScope]\n);\n\ntype Orientation = React.AriaAttributes['aria-orientation'];\ntype Direction = 'ltr' | 'rtl';\n\ninterface RovingFocusGroupOptions {\n  /**\n   * The orientation of the group.\n   * Mainly so arrow navigation is done accordingly (left & right vs. up & down)\n   */\n  orientation?: Orientation;\n  /**\n   * The direction of navigation between items.\n   */\n  dir?: Direction;\n  /**\n   * Whether keyboard navigation should loop around\n   * @defaultValue false\n   */\n  loop?: boolean;\n}\n\ntype RovingContextValue = RovingFocusGroupOptions & {\n  currentTabStopId: string | null;\n  onItemFocus(tabStopId: string): void;\n  onItemShiftTab(): void;\n  onFocusableItemAdd(): void;\n  onFocusableItemRemove(): void;\n};\n\nconst [RovingFocusProvider, useRovingFocusContext] =\n  createRovingFocusGroupContext<RovingContextValue>(GROUP_NAME);\n\ntype RovingFocusGroupElement = RovingFocusGroupImplElement;\ninterface RovingFocusGroupProps extends RovingFocusGroupImplProps {}\n\nconst RovingFocusGroup = React.forwardRef<RovingFocusGroupElement, RovingFocusGroupProps>(\n  (props: ScopedProps<RovingFocusGroupProps>, forwardedRef) => {\n    return (\n      <Collection.Provider scope={props.__scopeRovingFocusGroup}>\n        <Collection.Slot scope={props.__scopeRovingFocusGroup}>\n          <RovingFocusGroupImpl {...props} ref={forwardedRef} />\n        </Collection.Slot>\n      </Collection.Provider>\n    );\n  }\n);\n\nRovingFocusGroup.displayName = GROUP_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype RovingFocusGroupImplElement = React.ElementRef<typeof Primitive.div>;\ntype PrimitiveDivProps = Radix.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface RovingFocusGroupImplProps\n  extends Omit<PrimitiveDivProps, 'dir'>,\n    RovingFocusGroupOptions {\n  currentTabStopId?: string | null;\n  defaultCurrentTabStopId?: string;\n  onCurrentTabStopIdChange?: (tabStopId: string | null) => void;\n  onEntryFocus?: (event: Event) => void;\n}\n\nconst RovingFocusGroupImpl = React.forwardRef<\n  RovingFocusGroupImplElement,\n  RovingFocusGroupImplProps\n>((props: ScopedProps<RovingFocusGroupImplProps>, forwardedRef) => {\n  const {\n    __scopeRovingFocusGroup,\n    orientation,\n    loop = false,\n    dir,\n    currentTabStopId: currentTabStopIdProp,\n    defaultCurrentTabStopId,\n    onCurrentTabStopIdChange,\n    onEntryFocus,\n    ...groupProps\n  } = props;\n  const ref = React.useRef<RovingFocusGroupImplElement>(null);\n  const composedRefs = useComposedRefs(forwardedRef, ref);\n  const direction = useDirection(dir);\n  const [currentTabStopId = null, setCurrentTabStopId] = useControllableState({\n    prop: currentTabStopIdProp,\n    defaultProp: defaultCurrentTabStopId,\n    onChange: onCurrentTabStopIdChange,\n  });\n  const [isTabbingBackOut, setIsTabbingBackOut] = React.useState(false);\n  const handleEntryFocus = useCallbackRef(onEntryFocus);\n  const getItems = useCollection(__scopeRovingFocusGroup);\n  const isClickFocusRef = React.useRef(false);\n  const [focusableItemsCount, setFocusableItemsCount] = React.useState(0);\n\n  React.useEffect(() => {\n    const node = ref.current;\n    if (node) {\n      node.addEventListener(ENTRY_FOCUS, handleEntryFocus);\n      return () => node.removeEventListener(ENTRY_FOCUS, handleEntryFocus);\n    }\n  }, [handleEntryFocus]);\n\n  return (\n    <RovingFocusProvider\n      scope={__scopeRovingFocusGroup}\n      orientation={orientation}\n      dir={direction}\n      loop={loop}\n      currentTabStopId={currentTabStopId}\n      onItemFocus={React.useCallback(\n        (tabStopId) => setCurrentTabStopId(tabStopId),\n        [setCurrentTabStopId]\n      )}\n      onItemShiftTab={React.useCallback(() => setIsTabbingBackOut(true), [])}\n      onFocusableItemAdd={React.useCallback(\n        () => setFocusableItemsCount((prevCount) => prevCount + 1),\n        []\n      )}\n      onFocusableItemRemove={React.useCallback(\n        () => setFocusableItemsCount((prevCount) => prevCount - 1),\n        []\n      )}\n    >\n      <Primitive.div\n        tabIndex={isTabbingBackOut || focusableItemsCount === 0 ? -1 : 0}\n        data-orientation={orientation}\n        {...groupProps}\n        ref={composedRefs}\n        style={{ outline: 'none', ...props.style }}\n        onMouseDown={composeEventHandlers(props.onMouseDown, () => {\n          isClickFocusRef.current = true;\n        })}\n        onFocus={composeEventHandlers(props.onFocus, (event) => {\n          // We normally wouldn't need this check, because we already check\n          // that the focus is on the current target and not bubbling to it.\n          // We do this because Safari doesn't focus buttons when clicked, and\n          // instead, the wrapper will get focused and not through a bubbling event.\n          const isKeyboardFocus = !isClickFocusRef.current;\n\n          if (event.target === event.currentTarget && isKeyboardFocus && !isTabbingBackOut) {\n            const entryFocusEvent = new CustomEvent(ENTRY_FOCUS, EVENT_OPTIONS);\n            event.currentTarget.dispatchEvent(entryFocusEvent);\n\n            if (!entryFocusEvent.defaultPrevented) {\n              const items = getItems().filter((item) => item.focusable);\n              const activeItem = items.find((item) => item.active);\n              const currentItem = items.find((item) => item.id === currentTabStopId);\n              const candidateItems = [activeItem, currentItem, ...items].filter(\n                Boolean\n              ) as typeof items;\n              const candidateNodes = candidateItems.map((item) => item.ref.current!);\n              focusFirst(candidateNodes);\n            }\n          }\n\n          isClickFocusRef.current = false;\n        })}\n        onBlur={composeEventHandlers(props.onBlur, () => setIsTabbingBackOut(false))}\n      />\n    </RovingFocusProvider>\n  );\n});\n\n/* -------------------------------------------------------------------------------------------------\n * RovingFocusGroupItem\n * -----------------------------------------------------------------------------------------------*/\n\nconst ITEM_NAME = 'RovingFocusGroupItem';\n\ntype RovingFocusItemElement = React.ElementRef<typeof Primitive.span>;\ntype PrimitiveSpanProps = Radix.ComponentPropsWithoutRef<typeof Primitive.span>;\ninterface RovingFocusItemProps extends PrimitiveSpanProps {\n  tabStopId?: string;\n  focusable?: boolean;\n  active?: boolean;\n}\n\nconst RovingFocusGroupItem = React.forwardRef<RovingFocusItemElement, RovingFocusItemProps>(\n  (props: ScopedProps<RovingFocusItemProps>, forwardedRef) => {\n    const {\n      __scopeRovingFocusGroup,\n      focusable = true,\n      active = false,\n      tabStopId,\n      ...itemProps\n    } = props;\n    const autoId = useId();\n    const id = tabStopId || autoId;\n    const context = useRovingFocusContext(ITEM_NAME, __scopeRovingFocusGroup);\n    const isCurrentTabStop = context.currentTabStopId === id;\n    const getItems = useCollection(__scopeRovingFocusGroup);\n\n    const { onFocusableItemAdd, onFocusableItemRemove } = context;\n\n    React.useEffect(() => {\n      if (focusable) {\n        onFocusableItemAdd();\n        return () => onFocusableItemRemove();\n      }\n    }, [focusable, onFocusableItemAdd, onFocusableItemRemove]);\n\n    return (\n      <Collection.ItemSlot\n        scope={__scopeRovingFocusGroup}\n        id={id}\n        focusable={focusable}\n        active={active}\n      >\n        <Primitive.span\n          tabIndex={isCurrentTabStop ? 0 : -1}\n          data-orientation={context.orientation}\n          {...itemProps}\n          ref={forwardedRef}\n          onMouseDown={composeEventHandlers(props.onMouseDown, (event) => {\n            // We prevent focusing non-focusable items on `mousedown`.\n            // Even though the item has tabIndex={-1}, that only means take it out of the tab order.\n            if (!focusable) event.preventDefault();\n            // Safari doesn't focus a button when clicked so we run our logic on mousedown also\n            else context.onItemFocus(id);\n          })}\n          onFocus={composeEventHandlers(props.onFocus, () => context.onItemFocus(id))}\n          onKeyDown={composeEventHandlers(props.onKeyDown, (event) => {\n            if (event.key === 'Tab' && event.shiftKey) {\n              context.onItemShiftTab();\n              return;\n            }\n\n            if (event.target !== event.currentTarget) return;\n\n            const focusIntent = getFocusIntent(event, context.orientation, context.dir);\n\n            if (focusIntent !== undefined) {\n              event.preventDefault();\n              const items = getItems().filter((item) => item.focusable);\n              let candidateNodes = items.map((item) => item.ref.current!);\n\n              if (focusIntent === 'last') candidateNodes.reverse();\n              else if (focusIntent === 'prev' || focusIntent === 'next') {\n                if (focusIntent === 'prev') candidateNodes.reverse();\n                const currentIndex = candidateNodes.indexOf(event.currentTarget);\n                candidateNodes = context.loop\n                  ? wrapArray(candidateNodes, currentIndex + 1)\n                  : candidateNodes.slice(currentIndex + 1);\n              }\n\n              /**\n               * Imperative focus during keydown is risky so we prevent React's batching updates\n               * to avoid potential bugs. See: https://github.com/facebook/react/issues/20332\n               */\n              setTimeout(() => focusFirst(candidateNodes));\n            }\n          })}\n        />\n      </Collection.ItemSlot>\n    );\n  }\n);\n\nRovingFocusGroupItem.displayName = ITEM_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\n// prettier-ignore\nconst MAP_KEY_TO_FOCUS_INTENT: Record<string, FocusIntent> = {\n  ArrowLeft: 'prev', ArrowUp: 'prev',\n  ArrowRight: 'next', ArrowDown: 'next',\n  PageUp: 'first', Home: 'first',\n  PageDown: 'last', End: 'last',\n};\n\nfunction getDirectionAwareKey(key: string, dir?: Direction) {\n  if (dir !== 'rtl') return key;\n  return key === 'ArrowLeft' ? 'ArrowRight' : key === 'ArrowRight' ? 'ArrowLeft' : key;\n}\n\ntype FocusIntent = 'first' | 'last' | 'prev' | 'next';\n\nfunction getFocusIntent(event: React.KeyboardEvent, orientation?: Orientation, dir?: Direction) {\n  const key = getDirectionAwareKey(event.key, dir);\n  if (orientation === 'vertical' && ['ArrowLeft', 'ArrowRight'].includes(key)) return undefined;\n  if (orientation === 'horizontal' && ['ArrowUp', 'ArrowDown'].includes(key)) return undefined;\n  return MAP_KEY_TO_FOCUS_INTENT[key];\n}\n\nfunction focusFirst(candidates: HTMLElement[]) {\n  const PREVIOUSLY_FOCUSED_ELEMENT = document.activeElement;\n  for (const candidate of candidates) {\n    // if focus is already where we want to go, we don't want to keep going through the candidates\n    if (candidate === PREVIOUSLY_FOCUSED_ELEMENT) return;\n    candidate.focus();\n    if (document.activeElement !== PREVIOUSLY_FOCUSED_ELEMENT) return;\n  }\n}\n\n/**\n * Wraps an array around itself at a given start index\n * Example: `wrapArray(['a', 'b', 'c', 'd'], 2) === ['c', 'd', 'a', 'b']`\n */\nfunction wrapArray<T>(array: T[], startIndex: number) {\n  return array.map((_, index) => array[(startIndex + index) % array.length]);\n}\n\nconst Root = RovingFocusGroup;\nconst Item = RovingFocusGroupItem;\n\nexport {\n  createRovingFocusGroupScope,\n  //\n  RovingFocusGroup,\n  RovingFocusGroupItem,\n  //\n  Root,\n  Item,\n};\nexport type { RovingFocusGroupProps, RovingFocusItemProps };\n",null],"names":["ENTRY_FOCUS","EVENT_OPTIONS","bubbles","cancelable","GROUP_NAME","Collection","useCollection","createCollectionScope","createCollection","createRovingFocusGroupContext","createRovingFocusGroupScope","createContextScope","RovingFocusProvider","useRovingFocusContext","RovingFocusGroup","React","props","forwardedRef","__scopeRovingFocusGroup","RovingFocusGroupImpl","orientation","loop","dir","currentTabStopId","currentTabStopIdProp","defaultCurrentTabStopId","onCurrentTabStopIdChange","onEntryFocus","groupProps","ref","composedRefs","useComposedRefs","direction","useDirection","setCurrentTabStopId","useControllableState","prop","defaultProp","onChange","isTabbingBackOut","setIsTabbingBackOut","handleEntryFocus","useCallbackRef","getItems","isClickFocusRef","focusableItemsCount","setFocusableItemsCount","node","current","addEventListener","removeEventListener","tabStopId","prevCount","outline","style","composeEventHandlers","onMouseDown","onFocus","event","isKeyboardFocus","target","currentTarget","entryFocusEvent","CustomEvent","dispatchEvent","defaultPrevented","items","filter","item","focusable","activeItem","find","active","currentItem","id","candidateItems","Boolean","candidateNodes","map","focusFirst","onBlur","ITEM_NAME","RovingFocusGroupItem","itemProps","autoId","useId","context","isCurrentTabStop","onFocusableItemAdd","onFocusableItemRemove","preventDefault","onItemFocus","onKeyDown","key","shiftKey","onItemShiftTab","focusIntent","getFocusIntent","undefined","reverse","currentIndex","indexOf","wrapArray","slice","setTimeout","MAP_KEY_TO_FOCUS_INTENT","ArrowLeft","ArrowUp","ArrowRight","ArrowDown","PageUp","Home","PageDown","End","getDirectionAwareKey","includes","candidates","PREVIOUSLY_FOCUSED_ELEMENT","document","activeElement","candidate","focus","array","startIndex","_","index","length","Root","Item"],"mappings":"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"}},
    {"offset": {"line": 2767, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2772, "column": 0}, "map": {"version":3,"sources":["packages/react/menu/src/index.ts","packages/react/menu/src/Menu.tsx","/turbopack/[project]/node_modules/@radix-ui/react-menu/dist/index.mjs"],"sourcesContent":["export {\n  createMenuScope,\n  //\n  Menu,\n  MenuAnchor,\n  MenuPortal,\n  MenuContent,\n  MenuGroup,\n  MenuLabel,\n  MenuItem,\n  MenuCheckboxItem,\n  MenuRadioGroup,\n  MenuRadioItem,\n  MenuItemIndicator,\n  MenuSeparator,\n  MenuArrow,\n  MenuSub,\n  MenuSubTrigger,\n  MenuSubContent,\n  //\n  Root,\n  Anchor,\n  Portal,\n  Content,\n  Group,\n  Label,\n  Item,\n  CheckboxItem,\n  RadioGroup,\n  RadioItem,\n  ItemIndicator,\n  Separator,\n  Arrow,\n  Sub,\n  SubTrigger,\n  SubContent,\n} from './Menu';\nexport type {\n  MenuProps,\n  MenuAnchorProps,\n  MenuPortalProps,\n  MenuContentProps,\n  MenuGroupProps,\n  MenuLabelProps,\n  MenuItemProps,\n  MenuCheckboxItemProps,\n  MenuRadioGroupProps,\n  MenuRadioItemProps,\n  MenuItemIndicatorProps,\n  MenuSeparatorProps,\n  MenuArrowProps,\n  MenuSubProps,\n  MenuSubTriggerProps,\n  MenuSubContentProps,\n} from './Menu';\n","import * as React from 'react';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { createCollection } from '@radix-ui/react-collection';\nimport { useComposedRefs, composeRefs } from '@radix-ui/react-compose-refs';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { useDirection } from '@radix-ui/react-direction';\nimport { DismissableLayer } from '@radix-ui/react-dismissable-layer';\nimport { useFocusGuards } from '@radix-ui/react-focus-guards';\nimport { FocusScope } from '@radix-ui/react-focus-scope';\nimport { useId } from '@radix-ui/react-id';\nimport * as PopperPrimitive from '@radix-ui/react-popper';\nimport { createPopperScope } from '@radix-ui/react-popper';\nimport { Portal as PortalPrimitive } from '@radix-ui/react-portal';\nimport { Presence } from '@radix-ui/react-presence';\nimport { Primitive, dispatchDiscreteCustomEvent } from '@radix-ui/react-primitive';\nimport * as RovingFocusGroup from '@radix-ui/react-roving-focus';\nimport { createRovingFocusGroupScope } from '@radix-ui/react-roving-focus';\nimport { Slot } from '@radix-ui/react-slot';\nimport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\nimport { hideOthers } from 'aria-hidden';\nimport { RemoveScroll } from 'react-remove-scroll';\n\nimport type * as Radix from '@radix-ui/react-primitive';\nimport type { Scope } from '@radix-ui/react-context';\n\ntype Direction = 'ltr' | 'rtl';\n\nconst SELECTION_KEYS = ['Enter', ' '];\nconst FIRST_KEYS = ['ArrowDown', 'PageUp', 'Home'];\nconst LAST_KEYS = ['ArrowUp', 'PageDown', 'End'];\nconst FIRST_LAST_KEYS = [...FIRST_KEYS, ...LAST_KEYS];\nconst SUB_OPEN_KEYS: Record<Direction, string[]> = {\n  ltr: [...SELECTION_KEYS, 'ArrowRight'],\n  rtl: [...SELECTION_KEYS, 'ArrowLeft'],\n};\nconst SUB_CLOSE_KEYS: Record<Direction, string[]> = {\n  ltr: ['ArrowLeft'],\n  rtl: ['ArrowRight'],\n};\n\n/* -------------------------------------------------------------------------------------------------\n * Menu\n * -----------------------------------------------------------------------------------------------*/\n\nconst MENU_NAME = 'Menu';\n\ntype ItemData = { disabled: boolean; textValue: string };\nconst [Collection, useCollection, createCollectionScope] = createCollection<\n  MenuItemElement,\n  ItemData\n>(MENU_NAME);\n\ntype ScopedProps<P> = P & { __scopeMenu?: Scope };\nconst [createMenuContext, createMenuScope] = createContextScope(MENU_NAME, [\n  createCollectionScope,\n  createPopperScope,\n  createRovingFocusGroupScope,\n]);\nconst usePopperScope = createPopperScope();\nconst useRovingFocusGroupScope = createRovingFocusGroupScope();\n\ntype MenuContextValue = {\n  open: boolean;\n  onOpenChange(open: boolean): void;\n  content: MenuContentElement | null;\n  onContentChange(content: MenuContentElement | null): void;\n};\n\nconst [MenuProvider, useMenuContext] = createMenuContext<MenuContextValue>(MENU_NAME);\n\ntype MenuRootContextValue = {\n  onClose(): void;\n  isUsingKeyboardRef: React.RefObject<boolean>;\n  dir: Direction;\n  modal: boolean;\n};\n\nconst [MenuRootProvider, useMenuRootContext] = createMenuContext<MenuRootContextValue>(MENU_NAME);\n\ninterface MenuProps {\n  children?: React.ReactNode;\n  open?: boolean;\n  onOpenChange?(open: boolean): void;\n  dir?: Direction;\n  modal?: boolean;\n}\n\nconst Menu: React.FC<MenuProps> = (props: ScopedProps<MenuProps>) => {\n  const { __scopeMenu, open = false, children, dir, onOpenChange, modal = true } = props;\n  const popperScope = usePopperScope(__scopeMenu);\n  const [content, setContent] = React.useState<MenuContentElement | null>(null);\n  const isUsingKeyboardRef = React.useRef(false);\n  const handleOpenChange = useCallbackRef(onOpenChange);\n  const direction = useDirection(dir);\n\n  React.useEffect(() => {\n    // Capture phase ensures we set the boolean before any side effects execute\n    // in response to the key or pointer event as they might depend on this value.\n    const handleKeyDown = () => {\n      isUsingKeyboardRef.current = true;\n      document.addEventListener('pointerdown', handlePointer, { capture: true, once: true });\n      document.addEventListener('pointermove', handlePointer, { capture: true, once: true });\n    };\n    const handlePointer = () => (isUsingKeyboardRef.current = false);\n    document.addEventListener('keydown', handleKeyDown, { capture: true });\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown, { capture: true });\n      document.removeEventListener('pointerdown', handlePointer, { capture: true });\n      document.removeEventListener('pointermove', handlePointer, { capture: true });\n    };\n  }, []);\n\n  return (\n    <PopperPrimitive.Root {...popperScope}>\n      <MenuProvider\n        scope={__scopeMenu}\n        open={open}\n        onOpenChange={handleOpenChange}\n        content={content}\n        onContentChange={setContent}\n      >\n        <MenuRootProvider\n          scope={__scopeMenu}\n          onClose={React.useCallback(() => handleOpenChange(false), [handleOpenChange])}\n          isUsingKeyboardRef={isUsingKeyboardRef}\n          dir={direction}\n          modal={modal}\n        >\n          {children}\n        </MenuRootProvider>\n      </MenuProvider>\n    </PopperPrimitive.Root>\n  );\n};\n\nMenu.displayName = MENU_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuAnchor\n * -----------------------------------------------------------------------------------------------*/\n\nconst ANCHOR_NAME = 'MenuAnchor';\n\ntype MenuAnchorElement = React.ElementRef<typeof PopperPrimitive.Anchor>;\ntype PopperAnchorProps = Radix.ComponentPropsWithoutRef<typeof PopperPrimitive.Anchor>;\ninterface MenuAnchorProps extends PopperAnchorProps {}\n\nconst MenuAnchor = React.forwardRef<MenuAnchorElement, MenuAnchorProps>(\n  (props: ScopedProps<MenuAnchorProps>, forwardedRef) => {\n    const { __scopeMenu, ...anchorProps } = props;\n    const popperScope = usePopperScope(__scopeMenu);\n    return <PopperPrimitive.Anchor {...popperScope} {...anchorProps} ref={forwardedRef} />;\n  }\n);\n\nMenuAnchor.displayName = ANCHOR_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuPortal\n * -----------------------------------------------------------------------------------------------*/\n\nconst PORTAL_NAME = 'MenuPortal';\n\ntype PortalContextValue = { forceMount?: true };\nconst [PortalProvider, usePortalContext] = createMenuContext<PortalContextValue>(PORTAL_NAME, {\n  forceMount: undefined,\n});\n\ntype PortalProps = React.ComponentPropsWithoutRef<typeof PortalPrimitive>;\ninterface MenuPortalProps {\n  children?: React.ReactNode;\n  /**\n   * Specify a container element to portal the content into.\n   */\n  container?: PortalProps['container'];\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst MenuPortal: React.FC<MenuPortalProps> = (props: ScopedProps<MenuPortalProps>) => {\n  const { __scopeMenu, forceMount, children, container } = props;\n  const context = useMenuContext(PORTAL_NAME, __scopeMenu);\n  return (\n    <PortalProvider scope={__scopeMenu} forceMount={forceMount}>\n      <Presence present={forceMount || context.open}>\n        <PortalPrimitive asChild container={container}>\n          {children}\n        </PortalPrimitive>\n      </Presence>\n    </PortalProvider>\n  );\n};\n\nMenuPortal.displayName = PORTAL_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'MenuContent';\n\ntype MenuContentContextValue = {\n  onItemEnter(event: React.PointerEvent): void;\n  onItemLeave(event: React.PointerEvent): void;\n  onTriggerLeave(event: React.PointerEvent): void;\n  searchRef: React.RefObject<string>;\n  pointerGraceTimerRef: React.MutableRefObject<number>;\n  onPointerGraceIntentChange(intent: GraceIntent | null): void;\n};\nconst [MenuContentProvider, useMenuContentContext] =\n  createMenuContext<MenuContentContextValue>(CONTENT_NAME);\n\ntype MenuContentElement = MenuRootContentTypeElement;\n/**\n * We purposefully don't union MenuRootContent and MenuSubContent props here because\n * they have conflicting prop types. We agreed that we would allow MenuSubContent to\n * accept props that it would just ignore.\n */\ninterface MenuContentProps extends MenuRootContentTypeProps {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst MenuContent = React.forwardRef<MenuContentElement, MenuContentProps>(\n  (props: ScopedProps<MenuContentProps>, forwardedRef) => {\n    const portalContext = usePortalContext(CONTENT_NAME, props.__scopeMenu);\n    const { forceMount = portalContext.forceMount, ...contentProps } = props;\n    const context = useMenuContext(CONTENT_NAME, props.__scopeMenu);\n    const rootContext = useMenuRootContext(CONTENT_NAME, props.__scopeMenu);\n\n    return (\n      <Collection.Provider scope={props.__scopeMenu}>\n        <Presence present={forceMount || context.open}>\n          <Collection.Slot scope={props.__scopeMenu}>\n            {rootContext.modal ? (\n              <MenuRootContentModal {...contentProps} ref={forwardedRef} />\n            ) : (\n              <MenuRootContentNonModal {...contentProps} ref={forwardedRef} />\n            )}\n          </Collection.Slot>\n        </Presence>\n      </Collection.Provider>\n    );\n  }\n);\n\n/* ---------------------------------------------------------------------------------------------- */\n\ntype MenuRootContentTypeElement = MenuContentImplElement;\ninterface MenuRootContentTypeProps\n  extends Omit<MenuContentImplProps, keyof MenuContentImplPrivateProps> {}\n\nconst MenuRootContentModal = React.forwardRef<MenuRootContentTypeElement, MenuRootContentTypeProps>(\n  (props: ScopedProps<MenuRootContentTypeProps>, forwardedRef) => {\n    const context = useMenuContext(CONTENT_NAME, props.__scopeMenu);\n    const ref = React.useRef<MenuRootContentTypeElement>(null);\n    const composedRefs = useComposedRefs(forwardedRef, ref);\n\n    // Hide everything from ARIA except the `MenuContent`\n    React.useEffect(() => {\n      const content = ref.current;\n      if (content) return hideOthers(content);\n    }, []);\n\n    return (\n      <MenuContentImpl\n        {...props}\n        ref={composedRefs}\n        // we make sure we're not trapping once it's been closed\n        // (closed !== unmounted when animating out)\n        trapFocus={context.open}\n        // make sure to only disable pointer events when open\n        // this avoids blocking interactions while animating out\n        disableOutsidePointerEvents={context.open}\n        disableOutsideScroll\n        // When focus is trapped, a `focusout` event may still happen.\n        // We make sure we don't trigger our `onDismiss` in such case.\n        onFocusOutside={composeEventHandlers(\n          props.onFocusOutside,\n          (event) => event.preventDefault(),\n          { checkForDefaultPrevented: false }\n        )}\n        onDismiss={() => context.onOpenChange(false)}\n      />\n    );\n  }\n);\n\nconst MenuRootContentNonModal = React.forwardRef<\n  MenuRootContentTypeElement,\n  MenuRootContentTypeProps\n>((props: ScopedProps<MenuRootContentTypeProps>, forwardedRef) => {\n  const context = useMenuContext(CONTENT_NAME, props.__scopeMenu);\n  return (\n    <MenuContentImpl\n      {...props}\n      ref={forwardedRef}\n      trapFocus={false}\n      disableOutsidePointerEvents={false}\n      disableOutsideScroll={false}\n      onDismiss={() => context.onOpenChange(false)}\n    />\n  );\n});\n\n/* ---------------------------------------------------------------------------------------------- */\n\ntype MenuContentImplElement = React.ElementRef<typeof PopperPrimitive.Content>;\ntype FocusScopeProps = Radix.ComponentPropsWithoutRef<typeof FocusScope>;\ntype DismissableLayerProps = Radix.ComponentPropsWithoutRef<typeof DismissableLayer>;\ntype RovingFocusGroupProps = Radix.ComponentPropsWithoutRef<typeof RovingFocusGroup.Root>;\ntype PopperContentProps = Radix.ComponentPropsWithoutRef<typeof PopperPrimitive.Content>;\ntype MenuContentImplPrivateProps = {\n  onOpenAutoFocus?: FocusScopeProps['onMountAutoFocus'];\n  onDismiss?: DismissableLayerProps['onDismiss'];\n  disableOutsidePointerEvents?: DismissableLayerProps['disableOutsidePointerEvents'];\n\n  /**\n   * Whether scrolling outside the `MenuContent` should be prevented\n   * (default: `false`)\n   */\n  disableOutsideScroll?: boolean;\n\n  /**\n   * Whether focus should be trapped within the `MenuContent`\n   * (default: false)\n   */\n  trapFocus?: FocusScopeProps['trapped'];\n};\ninterface MenuContentImplProps\n  extends MenuContentImplPrivateProps,\n    Omit<PopperContentProps, 'dir' | 'onPlaced'> {\n  /**\n   * Event handler called when auto-focusing on close.\n   * Can be prevented.\n   */\n  onCloseAutoFocus?: FocusScopeProps['onUnmountAutoFocus'];\n\n  /**\n   * Whether keyboard navigation should loop around\n   * @defaultValue false\n   */\n  loop?: RovingFocusGroupProps['loop'];\n\n  onEntryFocus?: RovingFocusGroupProps['onEntryFocus'];\n  onEscapeKeyDown?: DismissableLayerProps['onEscapeKeyDown'];\n  onPointerDownOutside?: DismissableLayerProps['onPointerDownOutside'];\n  onFocusOutside?: DismissableLayerProps['onFocusOutside'];\n  onInteractOutside?: DismissableLayerProps['onInteractOutside'];\n}\n\nconst MenuContentImpl = React.forwardRef<MenuContentImplElement, MenuContentImplProps>(\n  (props: ScopedProps<MenuContentImplProps>, forwardedRef) => {\n    const {\n      __scopeMenu,\n      loop = false,\n      trapFocus,\n      onOpenAutoFocus,\n      onCloseAutoFocus,\n      disableOutsidePointerEvents,\n      onEntryFocus,\n      onEscapeKeyDown,\n      onPointerDownOutside,\n      onFocusOutside,\n      onInteractOutside,\n      onDismiss,\n      disableOutsideScroll,\n      ...contentProps\n    } = props;\n    const context = useMenuContext(CONTENT_NAME, __scopeMenu);\n    const rootContext = useMenuRootContext(CONTENT_NAME, __scopeMenu);\n    const popperScope = usePopperScope(__scopeMenu);\n    const rovingFocusGroupScope = useRovingFocusGroupScope(__scopeMenu);\n    const getItems = useCollection(__scopeMenu);\n    const [currentItemId, setCurrentItemId] = React.useState<string | null>(null);\n    const contentRef = React.useRef<HTMLDivElement>(null);\n    const composedRefs = useComposedRefs(forwardedRef, contentRef, context.onContentChange);\n    const timerRef = React.useRef(0);\n    const searchRef = React.useRef('');\n    const pointerGraceTimerRef = React.useRef(0);\n    const pointerGraceIntentRef = React.useRef<GraceIntent | null>(null);\n    const pointerDirRef = React.useRef<Side>('right');\n    const lastPointerXRef = React.useRef(0);\n\n    const ScrollLockWrapper = disableOutsideScroll ? RemoveScroll : React.Fragment;\n    const scrollLockWrapperProps = disableOutsideScroll\n      ? { as: Slot, allowPinchZoom: true }\n      : undefined;\n\n    const handleTypeaheadSearch = (key: string) => {\n      const search = searchRef.current + key;\n      const items = getItems().filter((item) => !item.disabled);\n      const currentItem = document.activeElement;\n      const currentMatch = items.find((item) => item.ref.current === currentItem)?.textValue;\n      const values = items.map((item) => item.textValue);\n      const nextMatch = getNextMatch(values, search, currentMatch);\n      const newItem = items.find((item) => item.textValue === nextMatch)?.ref.current;\n\n      // Reset `searchRef` 1 second after it was last updated\n      (function updateSearch(value: string) {\n        searchRef.current = value;\n        window.clearTimeout(timerRef.current);\n        if (value !== '') timerRef.current = window.setTimeout(() => updateSearch(''), 1000);\n      })(search);\n\n      if (newItem) {\n        /**\n         * Imperative focus during keydown is risky so we prevent React's batching updates\n         * to avoid potential bugs. See: https://github.com/facebook/react/issues/20332\n         */\n        setTimeout(() => (newItem as HTMLElement).focus());\n      }\n    };\n\n    React.useEffect(() => {\n      return () => window.clearTimeout(timerRef.current);\n    }, []);\n\n    // Make sure the whole tree has focus guards as our `MenuContent` may be\n    // the last element in the DOM (beacuse of the `Portal`)\n    useFocusGuards();\n\n    const isPointerMovingToSubmenu = React.useCallback((event: React.PointerEvent) => {\n      const isMovingTowards = pointerDirRef.current === pointerGraceIntentRef.current?.side;\n      return isMovingTowards && isPointerInGraceArea(event, pointerGraceIntentRef.current?.area);\n    }, []);\n\n    return (\n      <MenuContentProvider\n        scope={__scopeMenu}\n        searchRef={searchRef}\n        onItemEnter={React.useCallback(\n          (event) => {\n            if (isPointerMovingToSubmenu(event)) event.preventDefault();\n          },\n          [isPointerMovingToSubmenu]\n        )}\n        onItemLeave={React.useCallback(\n          (event) => {\n            if (isPointerMovingToSubmenu(event)) return;\n            contentRef.current?.focus();\n            setCurrentItemId(null);\n          },\n          [isPointerMovingToSubmenu]\n        )}\n        onTriggerLeave={React.useCallback(\n          (event) => {\n            if (isPointerMovingToSubmenu(event)) event.preventDefault();\n          },\n          [isPointerMovingToSubmenu]\n        )}\n        pointerGraceTimerRef={pointerGraceTimerRef}\n        onPointerGraceIntentChange={React.useCallback((intent) => {\n          pointerGraceIntentRef.current = intent;\n        }, [])}\n      >\n        <ScrollLockWrapper {...scrollLockWrapperProps}>\n          <FocusScope\n            asChild\n            trapped={trapFocus}\n            onMountAutoFocus={composeEventHandlers(onOpenAutoFocus, (event) => {\n              // when opening, explicitly focus the content area only and leave\n              // `onEntryFocus` in  control of focusing first item\n              event.preventDefault();\n              contentRef.current?.focus();\n            })}\n            onUnmountAutoFocus={onCloseAutoFocus}\n          >\n            <DismissableLayer\n              asChild\n              disableOutsidePointerEvents={disableOutsidePointerEvents}\n              onEscapeKeyDown={onEscapeKeyDown}\n              onPointerDownOutside={onPointerDownOutside}\n              onFocusOutside={onFocusOutside}\n              onInteractOutside={onInteractOutside}\n              onDismiss={onDismiss}\n            >\n              <RovingFocusGroup.Root\n                asChild\n                {...rovingFocusGroupScope}\n                dir={rootContext.dir}\n                orientation=\"vertical\"\n                loop={loop}\n                currentTabStopId={currentItemId}\n                onCurrentTabStopIdChange={setCurrentItemId}\n                onEntryFocus={composeEventHandlers(onEntryFocus, (event) => {\n                  // only focus first item when using keyboard\n                  if (!rootContext.isUsingKeyboardRef.current) event.preventDefault();\n                })}\n              >\n                <PopperPrimitive.Content\n                  role=\"menu\"\n                  aria-orientation=\"vertical\"\n                  data-state={getOpenState(context.open)}\n                  data-radix-menu-content=\"\"\n                  dir={rootContext.dir}\n                  {...popperScope}\n                  {...contentProps}\n                  ref={composedRefs}\n                  style={{ outline: 'none', ...contentProps.style }}\n                  onKeyDown={composeEventHandlers(contentProps.onKeyDown, (event) => {\n                    // submenu key events bubble through portals. We only care about keys in this menu.\n                    const target = event.target as HTMLElement;\n                    const isKeyDownInside =\n                      target.closest('[data-radix-menu-content]') === event.currentTarget;\n                    const isModifierKey = event.ctrlKey || event.altKey || event.metaKey;\n                    const isCharacterKey = event.key.length === 1;\n                    if (isKeyDownInside) {\n                      // menus should not be navigated using tab key so we prevent it\n                      if (event.key === 'Tab') event.preventDefault();\n                      if (!isModifierKey && isCharacterKey) handleTypeaheadSearch(event.key);\n                    }\n                    // focus first/last item based on key pressed\n                    const content = contentRef.current;\n                    if (event.target !== content) return;\n                    if (!FIRST_LAST_KEYS.includes(event.key)) return;\n                    event.preventDefault();\n                    const items = getItems().filter((item) => !item.disabled);\n                    const candidateNodes = items.map((item) => item.ref.current!);\n                    if (LAST_KEYS.includes(event.key)) candidateNodes.reverse();\n                    focusFirst(candidateNodes);\n                  })}\n                  onBlur={composeEventHandlers(props.onBlur, (event) => {\n                    // clear search buffer when leaving the menu\n                    if (!event.currentTarget.contains(event.target)) {\n                      window.clearTimeout(timerRef.current);\n                      searchRef.current = '';\n                    }\n                  })}\n                  onPointerMove={composeEventHandlers(\n                    props.onPointerMove,\n                    whenMouse((event) => {\n                      const target = event.target as HTMLElement;\n                      const pointerXHasChanged = lastPointerXRef.current !== event.clientX;\n\n                      // We don't use `event.movementX` for this check because Safari will\n                      // always return `0` on a pointer event.\n                      if (event.currentTarget.contains(target) && pointerXHasChanged) {\n                        const newDir = event.clientX > lastPointerXRef.current ? 'right' : 'left';\n                        pointerDirRef.current = newDir;\n                        lastPointerXRef.current = event.clientX;\n                      }\n                    })\n                  )}\n                />\n              </RovingFocusGroup.Root>\n            </DismissableLayer>\n          </FocusScope>\n        </ScrollLockWrapper>\n      </MenuContentProvider>\n    );\n  }\n);\n\nMenuContent.displayName = CONTENT_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuGroup\n * -----------------------------------------------------------------------------------------------*/\n\nconst GROUP_NAME = 'MenuGroup';\n\ntype MenuGroupElement = React.ElementRef<typeof Primitive.div>;\ntype PrimitiveDivProps = Radix.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface MenuGroupProps extends PrimitiveDivProps {}\n\nconst MenuGroup = React.forwardRef<MenuGroupElement, MenuGroupProps>(\n  (props: ScopedProps<MenuGroupProps>, forwardedRef) => {\n    const { __scopeMenu, ...groupProps } = props;\n    return <Primitive.div role=\"group\" {...groupProps} ref={forwardedRef} />;\n  }\n);\n\nMenuGroup.displayName = GROUP_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuLabel\n * -----------------------------------------------------------------------------------------------*/\n\nconst LABEL_NAME = 'MenuLabel';\n\ntype MenuLabelElement = React.ElementRef<typeof Primitive.div>;\ninterface MenuLabelProps extends PrimitiveDivProps {}\n\nconst MenuLabel = React.forwardRef<MenuLabelElement, MenuLabelProps>(\n  (props: ScopedProps<MenuLabelProps>, forwardedRef) => {\n    const { __scopeMenu, ...labelProps } = props;\n    return <Primitive.div {...labelProps} ref={forwardedRef} />;\n  }\n);\n\nMenuLabel.displayName = LABEL_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuItem\n * -----------------------------------------------------------------------------------------------*/\n\nconst ITEM_NAME = 'MenuItem';\nconst ITEM_SELECT = 'menu.itemSelect';\n\ntype MenuItemElement = MenuItemImplElement;\ninterface MenuItemProps extends Omit<MenuItemImplProps, 'onSelect'> {\n  onSelect?: (event: Event) => void;\n}\n\nconst MenuItem = React.forwardRef<MenuItemElement, MenuItemProps>(\n  (props: ScopedProps<MenuItemProps>, forwardedRef) => {\n    const { disabled = false, onSelect, ...itemProps } = props;\n    const ref = React.useRef<HTMLDivElement>(null);\n    const rootContext = useMenuRootContext(ITEM_NAME, props.__scopeMenu);\n    const contentContext = useMenuContentContext(ITEM_NAME, props.__scopeMenu);\n    const composedRefs = useComposedRefs(forwardedRef, ref);\n    const isPointerDownRef = React.useRef(false);\n\n    const handleSelect = () => {\n      const menuItem = ref.current;\n      if (!disabled && menuItem) {\n        const itemSelectEvent = new CustomEvent(ITEM_SELECT, { bubbles: true, cancelable: true });\n        menuItem.addEventListener(ITEM_SELECT, (event) => onSelect?.(event), { once: true });\n        dispatchDiscreteCustomEvent(menuItem, itemSelectEvent);\n        if (itemSelectEvent.defaultPrevented) {\n          isPointerDownRef.current = false;\n        } else {\n          rootContext.onClose();\n        }\n      }\n    };\n\n    return (\n      <MenuItemImpl\n        {...itemProps}\n        ref={composedRefs}\n        disabled={disabled}\n        onClick={composeEventHandlers(props.onClick, handleSelect)}\n        onPointerDown={(event) => {\n          props.onPointerDown?.(event);\n          isPointerDownRef.current = true;\n        }}\n        onPointerUp={composeEventHandlers(props.onPointerUp, (event) => {\n          // Pointer down can move to a different menu item which should activate it on pointer up.\n          // We dispatch a click for selection to allow composition with click based triggers and to\n          // prevent Firefox from getting stuck in text selection mode when the menu closes.\n          if (!isPointerDownRef.current) event.currentTarget?.click();\n        })}\n        onKeyDown={composeEventHandlers(props.onKeyDown, (event) => {\n          const isTypingAhead = contentContext.searchRef.current !== '';\n          if (disabled || (isTypingAhead && event.key === ' ')) return;\n          if (SELECTION_KEYS.includes(event.key)) {\n            event.currentTarget.click();\n            /**\n             * We prevent default browser behaviour for selection keys as they should trigger\n             * a selection only:\n             * - prevents space from scrolling the page.\n             * - if keydown causes focus to move, prevents keydown from firing on the new target.\n             */\n            event.preventDefault();\n          }\n        })}\n      />\n    );\n  }\n);\n\nMenuItem.displayName = ITEM_NAME;\n\n/* ---------------------------------------------------------------------------------------------- */\n\ntype MenuItemImplElement = React.ElementRef<typeof Primitive.div>;\ninterface MenuItemImplProps extends PrimitiveDivProps {\n  disabled?: boolean;\n  textValue?: string;\n}\n\nconst MenuItemImpl = React.forwardRef<MenuItemImplElement, MenuItemImplProps>(\n  (props: ScopedProps<MenuItemImplProps>, forwardedRef) => {\n    const { __scopeMenu, disabled = false, textValue, ...itemProps } = props;\n    const contentContext = useMenuContentContext(ITEM_NAME, __scopeMenu);\n    const rovingFocusGroupScope = useRovingFocusGroupScope(__scopeMenu);\n    const ref = React.useRef<HTMLDivElement>(null);\n    const composedRefs = useComposedRefs(forwardedRef, ref);\n    const [isFocused, setIsFocused] = React.useState(false);\n\n    // get the item's `.textContent` as default strategy for typeahead `textValue`\n    const [textContent, setTextContent] = React.useState('');\n    React.useEffect(() => {\n      const menuItem = ref.current;\n      if (menuItem) {\n        setTextContent((menuItem.textContent ?? '').trim());\n      }\n    }, [itemProps.children]);\n\n    return (\n      <Collection.ItemSlot\n        scope={__scopeMenu}\n        disabled={disabled}\n        textValue={textValue ?? textContent}\n      >\n        <RovingFocusGroup.Item asChild {...rovingFocusGroupScope} focusable={!disabled}>\n          <Primitive.div\n            role=\"menuitem\"\n            data-highlighted={isFocused ? '' : undefined}\n            aria-disabled={disabled || undefined}\n            data-disabled={disabled ? '' : undefined}\n            {...itemProps}\n            ref={composedRefs}\n            /**\n             * We focus items on `pointerMove` to achieve the following:\n             *\n             * - Mouse over an item (it focuses)\n             * - Leave mouse where it is and use keyboard to focus a different item\n             * - Wiggle mouse without it leaving previously focused item\n             * - Previously focused item should re-focus\n             *\n             * If we used `mouseOver`/`mouseEnter` it would not re-focus when the mouse\n             * wiggles. This is to match native menu implementation.\n             */\n            onPointerMove={composeEventHandlers(\n              props.onPointerMove,\n              whenMouse((event) => {\n                if (disabled) {\n                  contentContext.onItemLeave(event);\n                } else {\n                  contentContext.onItemEnter(event);\n                  if (!event.defaultPrevented) {\n                    const item = event.currentTarget;\n                    item.focus();\n                  }\n                }\n              })\n            )}\n            onPointerLeave={composeEventHandlers(\n              props.onPointerLeave,\n              whenMouse((event) => contentContext.onItemLeave(event))\n            )}\n            onFocus={composeEventHandlers(props.onFocus, () => setIsFocused(true))}\n            onBlur={composeEventHandlers(props.onBlur, () => setIsFocused(false))}\n          />\n        </RovingFocusGroup.Item>\n      </Collection.ItemSlot>\n    );\n  }\n);\n\n/* -------------------------------------------------------------------------------------------------\n * MenuCheckboxItem\n * -----------------------------------------------------------------------------------------------*/\n\nconst CHECKBOX_ITEM_NAME = 'MenuCheckboxItem';\n\ntype MenuCheckboxItemElement = MenuItemElement;\n\ntype CheckedState = boolean | 'indeterminate';\n\ninterface MenuCheckboxItemProps extends MenuItemProps {\n  checked?: CheckedState;\n  // `onCheckedChange` can never be called with `\"indeterminate\"` from the inside\n  onCheckedChange?: (checked: boolean) => void;\n}\n\nconst MenuCheckboxItem = React.forwardRef<MenuCheckboxItemElement, MenuCheckboxItemProps>(\n  (props: ScopedProps<MenuCheckboxItemProps>, forwardedRef) => {\n    const { checked = false, onCheckedChange, ...checkboxItemProps } = props;\n    return (\n      <ItemIndicatorProvider scope={props.__scopeMenu} checked={checked}>\n        <MenuItem\n          role=\"menuitemcheckbox\"\n          aria-checked={isIndeterminate(checked) ? 'mixed' : checked}\n          {...checkboxItemProps}\n          ref={forwardedRef}\n          data-state={getCheckedState(checked)}\n          onSelect={composeEventHandlers(\n            checkboxItemProps.onSelect,\n            () => onCheckedChange?.(isIndeterminate(checked) ? true : !checked),\n            { checkForDefaultPrevented: false }\n          )}\n        />\n      </ItemIndicatorProvider>\n    );\n  }\n);\n\nMenuCheckboxItem.displayName = CHECKBOX_ITEM_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuRadioGroup\n * -----------------------------------------------------------------------------------------------*/\n\nconst RADIO_GROUP_NAME = 'MenuRadioGroup';\n\nconst [RadioGroupProvider, useRadioGroupContext] = createMenuContext<MenuRadioGroupProps>(\n  RADIO_GROUP_NAME,\n  { value: undefined, onValueChange: () => {} }\n);\n\ntype MenuRadioGroupElement = React.ElementRef<typeof MenuGroup>;\ninterface MenuRadioGroupProps extends MenuGroupProps {\n  value?: string;\n  onValueChange?: (value: string) => void;\n}\n\nconst MenuRadioGroup = React.forwardRef<MenuRadioGroupElement, MenuRadioGroupProps>(\n  (props: ScopedProps<MenuRadioGroupProps>, forwardedRef) => {\n    const { value, onValueChange, ...groupProps } = props;\n    const handleValueChange = useCallbackRef(onValueChange);\n    return (\n      <RadioGroupProvider scope={props.__scopeMenu} value={value} onValueChange={handleValueChange}>\n        <MenuGroup {...groupProps} ref={forwardedRef} />\n      </RadioGroupProvider>\n    );\n  }\n);\n\nMenuRadioGroup.displayName = RADIO_GROUP_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuRadioItem\n * -----------------------------------------------------------------------------------------------*/\n\nconst RADIO_ITEM_NAME = 'MenuRadioItem';\n\ntype MenuRadioItemElement = React.ElementRef<typeof MenuItem>;\ninterface MenuRadioItemProps extends MenuItemProps {\n  value: string;\n}\n\nconst MenuRadioItem = React.forwardRef<MenuRadioItemElement, MenuRadioItemProps>(\n  (props: ScopedProps<MenuRadioItemProps>, forwardedRef) => {\n    const { value, ...radioItemProps } = props;\n    const context = useRadioGroupContext(RADIO_ITEM_NAME, props.__scopeMenu);\n    const checked = value === context.value;\n    return (\n      <ItemIndicatorProvider scope={props.__scopeMenu} checked={checked}>\n        <MenuItem\n          role=\"menuitemradio\"\n          aria-checked={checked}\n          {...radioItemProps}\n          ref={forwardedRef}\n          data-state={getCheckedState(checked)}\n          onSelect={composeEventHandlers(\n            radioItemProps.onSelect,\n            () => context.onValueChange?.(value),\n            { checkForDefaultPrevented: false }\n          )}\n        />\n      </ItemIndicatorProvider>\n    );\n  }\n);\n\nMenuRadioItem.displayName = RADIO_ITEM_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuItemIndicator\n * -----------------------------------------------------------------------------------------------*/\n\nconst ITEM_INDICATOR_NAME = 'MenuItemIndicator';\n\ntype CheckboxContextValue = { checked: CheckedState };\n\nconst [ItemIndicatorProvider, useItemIndicatorContext] = createMenuContext<CheckboxContextValue>(\n  ITEM_INDICATOR_NAME,\n  { checked: false }\n);\n\ntype MenuItemIndicatorElement = React.ElementRef<typeof Primitive.span>;\ntype PrimitiveSpanProps = Radix.ComponentPropsWithoutRef<typeof Primitive.span>;\ninterface MenuItemIndicatorProps extends PrimitiveSpanProps {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst MenuItemIndicator = React.forwardRef<MenuItemIndicatorElement, MenuItemIndicatorProps>(\n  (props: ScopedProps<MenuItemIndicatorProps>, forwardedRef) => {\n    const { __scopeMenu, forceMount, ...itemIndicatorProps } = props;\n    const indicatorContext = useItemIndicatorContext(ITEM_INDICATOR_NAME, __scopeMenu);\n    return (\n      <Presence\n        present={\n          forceMount ||\n          isIndeterminate(indicatorContext.checked) ||\n          indicatorContext.checked === true\n        }\n      >\n        <Primitive.span\n          {...itemIndicatorProps}\n          ref={forwardedRef}\n          data-state={getCheckedState(indicatorContext.checked)}\n        />\n      </Presence>\n    );\n  }\n);\n\nMenuItemIndicator.displayName = ITEM_INDICATOR_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuSeparator\n * -----------------------------------------------------------------------------------------------*/\n\nconst SEPARATOR_NAME = 'MenuSeparator';\n\ntype MenuSeparatorElement = React.ElementRef<typeof Primitive.div>;\ninterface MenuSeparatorProps extends PrimitiveDivProps {}\n\nconst MenuSeparator = React.forwardRef<MenuSeparatorElement, MenuSeparatorProps>(\n  (props: ScopedProps<MenuSeparatorProps>, forwardedRef) => {\n    const { __scopeMenu, ...separatorProps } = props;\n    return (\n      <Primitive.div\n        role=\"separator\"\n        aria-orientation=\"horizontal\"\n        {...separatorProps}\n        ref={forwardedRef}\n      />\n    );\n  }\n);\n\nMenuSeparator.displayName = SEPARATOR_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuArrow\n * -----------------------------------------------------------------------------------------------*/\n\nconst ARROW_NAME = 'MenuArrow';\n\ntype MenuArrowElement = React.ElementRef<typeof PopperPrimitive.Arrow>;\ntype PopperArrowProps = Radix.ComponentPropsWithoutRef<typeof PopperPrimitive.Arrow>;\ninterface MenuArrowProps extends PopperArrowProps {}\n\nconst MenuArrow = React.forwardRef<MenuArrowElement, MenuArrowProps>(\n  (props: ScopedProps<MenuArrowProps>, forwardedRef) => {\n    const { __scopeMenu, ...arrowProps } = props;\n    const popperScope = usePopperScope(__scopeMenu);\n    return <PopperPrimitive.Arrow {...popperScope} {...arrowProps} ref={forwardedRef} />;\n  }\n);\n\nMenuArrow.displayName = ARROW_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuSub\n * -----------------------------------------------------------------------------------------------*/\n\nconst SUB_NAME = 'MenuSub';\n\ntype MenuSubContextValue = {\n  contentId: string;\n  triggerId: string;\n  trigger: MenuSubTriggerElement | null;\n  onTriggerChange(trigger: MenuSubTriggerElement | null): void;\n};\n\nconst [MenuSubProvider, useMenuSubContext] = createMenuContext<MenuSubContextValue>(SUB_NAME);\n\ninterface MenuSubProps {\n  children?: React.ReactNode;\n  open?: boolean;\n  onOpenChange?(open: boolean): void;\n}\n\nconst MenuSub: React.FC<MenuSubProps> = (props: ScopedProps<MenuSubProps>) => {\n  const { __scopeMenu, children, open = false, onOpenChange } = props;\n  const parentMenuContext = useMenuContext(SUB_NAME, __scopeMenu);\n  const popperScope = usePopperScope(__scopeMenu);\n  const [trigger, setTrigger] = React.useState<MenuSubTriggerElement | null>(null);\n  const [content, setContent] = React.useState<MenuContentElement | null>(null);\n  const handleOpenChange = useCallbackRef(onOpenChange);\n\n  // Prevent the parent menu from reopening with open submenus.\n  React.useEffect(() => {\n    if (parentMenuContext.open === false) handleOpenChange(false);\n    return () => handleOpenChange(false);\n  }, [parentMenuContext.open, handleOpenChange]);\n\n  return (\n    <PopperPrimitive.Root {...popperScope}>\n      <MenuProvider\n        scope={__scopeMenu}\n        open={open}\n        onOpenChange={handleOpenChange}\n        content={content}\n        onContentChange={setContent}\n      >\n        <MenuSubProvider\n          scope={__scopeMenu}\n          contentId={useId()}\n          triggerId={useId()}\n          trigger={trigger}\n          onTriggerChange={setTrigger}\n        >\n          {children}\n        </MenuSubProvider>\n      </MenuProvider>\n    </PopperPrimitive.Root>\n  );\n};\n\nMenuSub.displayName = SUB_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuSubTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nconst SUB_TRIGGER_NAME = 'MenuSubTrigger';\n\ntype MenuSubTriggerElement = MenuItemImplElement;\ninterface MenuSubTriggerProps extends MenuItemImplProps {}\n\nconst MenuSubTrigger = React.forwardRef<MenuSubTriggerElement, MenuSubTriggerProps>(\n  (props: ScopedProps<MenuSubTriggerProps>, forwardedRef) => {\n    const context = useMenuContext(SUB_TRIGGER_NAME, props.__scopeMenu);\n    const rootContext = useMenuRootContext(SUB_TRIGGER_NAME, props.__scopeMenu);\n    const subContext = useMenuSubContext(SUB_TRIGGER_NAME, props.__scopeMenu);\n    const contentContext = useMenuContentContext(SUB_TRIGGER_NAME, props.__scopeMenu);\n    const openTimerRef = React.useRef<number | null>(null);\n    const { pointerGraceTimerRef, onPointerGraceIntentChange } = contentContext;\n    const scope = { __scopeMenu: props.__scopeMenu };\n\n    const clearOpenTimer = React.useCallback(() => {\n      if (openTimerRef.current) window.clearTimeout(openTimerRef.current);\n      openTimerRef.current = null;\n    }, []);\n\n    React.useEffect(() => clearOpenTimer, [clearOpenTimer]);\n\n    React.useEffect(() => {\n      const pointerGraceTimer = pointerGraceTimerRef.current;\n      return () => {\n        window.clearTimeout(pointerGraceTimer);\n        onPointerGraceIntentChange(null);\n      };\n    }, [pointerGraceTimerRef, onPointerGraceIntentChange]);\n\n    return (\n      <MenuAnchor asChild {...scope}>\n        <MenuItemImpl\n          id={subContext.triggerId}\n          aria-haspopup=\"menu\"\n          aria-expanded={context.open}\n          aria-controls={subContext.contentId}\n          data-state={getOpenState(context.open)}\n          {...props}\n          ref={composeRefs(forwardedRef, subContext.onTriggerChange)}\n          // This is redundant for mouse users but we cannot determine pointer type from\n          // click event and we cannot use pointerup event (see git history for reasons why)\n          onClick={(event) => {\n            props.onClick?.(event);\n            if (props.disabled || event.defaultPrevented) return;\n            /**\n             * We manually focus because iOS Safari doesn't always focus on click (e.g. buttons)\n             * and we rely heavily on `onFocusOutside` for submenus to close when switching\n             * between separate submenus.\n             */\n            event.currentTarget.focus();\n            if (!context.open) context.onOpenChange(true);\n          }}\n          onPointerMove={composeEventHandlers(\n            props.onPointerMove,\n            whenMouse((event) => {\n              contentContext.onItemEnter(event);\n              if (event.defaultPrevented) return;\n              if (!props.disabled && !context.open && !openTimerRef.current) {\n                contentContext.onPointerGraceIntentChange(null);\n                openTimerRef.current = window.setTimeout(() => {\n                  context.onOpenChange(true);\n                  clearOpenTimer();\n                }, 100);\n              }\n            })\n          )}\n          onPointerLeave={composeEventHandlers(\n            props.onPointerLeave,\n            whenMouse((event) => {\n              clearOpenTimer();\n\n              const contentRect = context.content?.getBoundingClientRect();\n              if (contentRect) {\n                // TODO: make sure to update this when we change positioning logic\n                const side = context.content?.dataset.side as Side;\n                const rightSide = side === 'right';\n                const bleed = rightSide ? -5 : +5;\n                const contentNearEdge = contentRect[rightSide ? 'left' : 'right'];\n                const contentFarEdge = contentRect[rightSide ? 'right' : 'left'];\n\n                contentContext.onPointerGraceIntentChange({\n                  area: [\n                    // Apply a bleed on clientX to ensure that our exit point is\n                    // consistently within polygon bounds\n                    { x: event.clientX + bleed, y: event.clientY },\n                    { x: contentNearEdge, y: contentRect.top },\n                    { x: contentFarEdge, y: contentRect.top },\n                    { x: contentFarEdge, y: contentRect.bottom },\n                    { x: contentNearEdge, y: contentRect.bottom },\n                  ],\n                  side,\n                });\n\n                window.clearTimeout(pointerGraceTimerRef.current);\n                pointerGraceTimerRef.current = window.setTimeout(\n                  () => contentContext.onPointerGraceIntentChange(null),\n                  300\n                );\n              } else {\n                contentContext.onTriggerLeave(event);\n                if (event.defaultPrevented) return;\n\n                // There's 100ms where the user may leave an item before the submenu was opened.\n                contentContext.onPointerGraceIntentChange(null);\n              }\n            })\n          )}\n          onKeyDown={composeEventHandlers(props.onKeyDown, (event) => {\n            const isTypingAhead = contentContext.searchRef.current !== '';\n            if (props.disabled || (isTypingAhead && event.key === ' ')) return;\n            if (SUB_OPEN_KEYS[rootContext.dir].includes(event.key)) {\n              context.onOpenChange(true);\n              // The trigger may hold focus if opened via pointer interaction\n              // so we ensure content is given focus again when switching to keyboard.\n              context.content?.focus();\n              // prevent window from scrolling\n              event.preventDefault();\n            }\n          })}\n        />\n      </MenuAnchor>\n    );\n  }\n);\n\nMenuSubTrigger.displayName = SUB_TRIGGER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuSubContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst SUB_CONTENT_NAME = 'MenuSubContent';\n\ntype MenuSubContentElement = MenuContentImplElement;\ninterface MenuSubContentProps\n  extends Omit<\n    MenuContentImplProps,\n    keyof MenuContentImplPrivateProps | 'onCloseAutoFocus' | 'onEntryFocus' | 'side' | 'align'\n  > {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst MenuSubContent = React.forwardRef<MenuSubContentElement, MenuSubContentProps>(\n  (props: ScopedProps<MenuSubContentProps>, forwardedRef) => {\n    const portalContext = usePortalContext(CONTENT_NAME, props.__scopeMenu);\n    const { forceMount = portalContext.forceMount, ...subContentProps } = props;\n    const context = useMenuContext(CONTENT_NAME, props.__scopeMenu);\n    const rootContext = useMenuRootContext(CONTENT_NAME, props.__scopeMenu);\n    const subContext = useMenuSubContext(SUB_CONTENT_NAME, props.__scopeMenu);\n    const ref = React.useRef<MenuSubContentElement>(null);\n    const composedRefs = useComposedRefs(forwardedRef, ref);\n    return (\n      <Collection.Provider scope={props.__scopeMenu}>\n        <Presence present={forceMount || context.open}>\n          <Collection.Slot scope={props.__scopeMenu}>\n            <MenuContentImpl\n              id={subContext.contentId}\n              aria-labelledby={subContext.triggerId}\n              {...subContentProps}\n              ref={composedRefs}\n              align=\"start\"\n              side={rootContext.dir === 'rtl' ? 'left' : 'right'}\n              disableOutsidePointerEvents={false}\n              disableOutsideScroll={false}\n              trapFocus={false}\n              onOpenAutoFocus={(event) => {\n                // when opening a submenu, focus content for keyboard users only\n                if (rootContext.isUsingKeyboardRef.current) ref.current?.focus();\n                event.preventDefault();\n              }}\n              // The menu might close because of focusing another menu item in the parent menu. We\n              // don't want it to refocus the trigger in that case so we handle trigger focus ourselves.\n              onCloseAutoFocus={(event) => event.preventDefault()}\n              onFocusOutside={composeEventHandlers(props.onFocusOutside, (event) => {\n                // We prevent closing when the trigger is focused to avoid triggering a re-open animation\n                // on pointer interaction.\n                if (event.target !== subContext.trigger) context.onOpenChange(false);\n              })}\n              onEscapeKeyDown={composeEventHandlers(props.onEscapeKeyDown, (event) => {\n                rootContext.onClose();\n                // ensure pressing escape in submenu doesn't escape full screen mode\n                event.preventDefault();\n              })}\n              onKeyDown={composeEventHandlers(props.onKeyDown, (event) => {\n                // Submenu key events bubble through portals. We only care about keys in this menu.\n                const isKeyDownInside = event.currentTarget.contains(event.target as HTMLElement);\n                const isCloseKey = SUB_CLOSE_KEYS[rootContext.dir].includes(event.key);\n                if (isKeyDownInside && isCloseKey) {\n                  context.onOpenChange(false);\n                  // We focus manually because we prevented it in `onCloseAutoFocus`\n                  subContext.trigger?.focus();\n                  // prevent window from scrolling\n                  event.preventDefault();\n                }\n              })}\n            />\n          </Collection.Slot>\n        </Presence>\n      </Collection.Provider>\n    );\n  }\n);\n\nMenuSubContent.displayName = SUB_CONTENT_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction getOpenState(open: boolean) {\n  return open ? 'open' : 'closed';\n}\n\nfunction isIndeterminate(checked?: CheckedState): checked is 'indeterminate' {\n  return checked === 'indeterminate';\n}\n\nfunction getCheckedState(checked: CheckedState) {\n  return isIndeterminate(checked) ? 'indeterminate' : checked ? 'checked' : 'unchecked';\n}\n\nfunction focusFirst(candidates: HTMLElement[]) {\n  const PREVIOUSLY_FOCUSED_ELEMENT = document.activeElement;\n  for (const candidate of candidates) {\n    // if focus is already where we want to go, we don't want to keep going through the candidates\n    if (candidate === PREVIOUSLY_FOCUSED_ELEMENT) return;\n    candidate.focus();\n    if (document.activeElement !== PREVIOUSLY_FOCUSED_ELEMENT) return;\n  }\n}\n\n/**\n * Wraps an array around itself at a given start index\n * Example: `wrapArray(['a', 'b', 'c', 'd'], 2) === ['c', 'd', 'a', 'b']`\n */\nfunction wrapArray<T>(array: T[], startIndex: number) {\n  return array.map((_, index) => array[(startIndex + index) % array.length]);\n}\n\n/**\n * This is the \"meat\" of the typeahead matching logic. It takes in all the values,\n * the search and the current match, and returns the next match (or `undefined`).\n *\n * We normalize the search because if a user has repeatedly pressed a character,\n * we want the exact same behavior as if we only had that one character\n * (ie. cycle through options starting with that character)\n *\n * We also reorder the values by wrapping the array around the current match.\n * This is so we always look forward from the current match, and picking the first\n * match will always be the correct one.\n *\n * Finally, if the normalized search is exactly one character, we exclude the\n * current match from the values because otherwise it would be the first to match always\n * and focus would never move. This is as opposed to the regular case, where we\n * don't want focus to move if the current match still matches.\n */\nfunction getNextMatch(values: string[], search: string, currentMatch?: string) {\n  const isRepeated = search.length > 1 && Array.from(search).every((char) => char === search[0]);\n  const normalizedSearch = isRepeated ? search[0] : search;\n  const currentMatchIndex = currentMatch ? values.indexOf(currentMatch) : -1;\n  let wrappedValues = wrapArray(values, Math.max(currentMatchIndex, 0));\n  const excludeCurrentMatch = normalizedSearch.length === 1;\n  if (excludeCurrentMatch) wrappedValues = wrappedValues.filter((v) => v !== currentMatch);\n  const nextMatch = wrappedValues.find((value) =>\n    value.toLowerCase().startsWith(normalizedSearch.toLowerCase())\n  );\n  return nextMatch !== currentMatch ? nextMatch : undefined;\n}\n\ntype Point = { x: number; y: number };\ntype Polygon = Point[];\ntype Side = 'left' | 'right';\ntype GraceIntent = { area: Polygon; side: Side };\n\n// Determine if a point is inside of a polygon.\n// Based on https://github.com/substack/point-in-polygon\nfunction isPointInPolygon(point: Point, polygon: Polygon) {\n  const { x, y } = point;\n  let inside = false;\n  for (let i = 0, j = polygon.length - 1; i < polygon.length; j = i++) {\n    const xi = polygon[i].x;\n    const yi = polygon[i].y;\n    const xj = polygon[j].x;\n    const yj = polygon[j].y;\n\n    // prettier-ignore\n    const intersect = ((yi > y) !== (yj > y)) && (x < (xj - xi) * (y - yi) / (yj - yi) + xi);\n    if (intersect) inside = !inside;\n  }\n\n  return inside;\n}\n\nfunction isPointerInGraceArea(event: React.PointerEvent, area?: Polygon) {\n  if (!area) return false;\n  const cursorPos = { x: event.clientX, y: event.clientY };\n  return isPointInPolygon(cursorPos, area);\n}\n\nfunction whenMouse<E>(handler: React.PointerEventHandler<E>): React.PointerEventHandler<E> {\n  return (event) => (event.pointerType === 'mouse' ? handler(event) : undefined);\n}\n\nconst Root = Menu;\nconst Anchor = MenuAnchor;\nconst Portal = MenuPortal;\nconst Content = MenuContent;\nconst Group = MenuGroup;\nconst Label = MenuLabel;\nconst Item = MenuItem;\nconst CheckboxItem = MenuCheckboxItem;\nconst RadioGroup = MenuRadioGroup;\nconst RadioItem = MenuRadioItem;\nconst ItemIndicator = MenuItemIndicator;\nconst Separator = MenuSeparator;\nconst Arrow = MenuArrow;\nconst Sub = MenuSub;\nconst SubTrigger = MenuSubTrigger;\nconst SubContent = MenuSubContent;\n\nexport {\n  createMenuScope,\n  //\n  Menu,\n  MenuAnchor,\n  MenuPortal,\n  MenuContent,\n  MenuGroup,\n  MenuLabel,\n  MenuItem,\n  MenuCheckboxItem,\n  MenuRadioGroup,\n  MenuRadioItem,\n  MenuItemIndicator,\n  MenuSeparator,\n  MenuArrow,\n  MenuSub,\n  MenuSubTrigger,\n  MenuSubContent,\n  //\n  Root,\n  Anchor,\n  Portal,\n  Content,\n  Group,\n  Label,\n  Item,\n  CheckboxItem,\n  RadioGroup,\n  RadioItem,\n  ItemIndicator,\n  Separator,\n  Arrow,\n  Sub,\n  SubTrigger,\n  SubContent,\n};\nexport type {\n  MenuProps,\n  MenuAnchorProps,\n  MenuPortalProps,\n  MenuContentProps,\n  MenuGroupProps,\n  MenuLabelProps,\n  MenuItemProps,\n  MenuCheckboxItemProps,\n  MenuRadioGroupProps,\n  MenuRadioItemProps,\n  MenuItemIndicatorProps,\n  MenuSeparatorProps,\n  MenuArrowProps,\n  MenuSubProps,\n  MenuSubTriggerProps,\n  MenuSubContentProps,\n};\n",null],"names":["SELECTION_KEYS","FIRST_KEYS","LAST_KEYS","FIRST_LAST_KEYS","SUB_OPEN_KEYS","ltr","rtl","SUB_CLOSE_KEYS","MENU_NAME","Collection","useCollection","createCollectionScope","createCollection","createMenuContext","createMenuScope","createContextScope","usePopperScope","createPopperScope","useRovingFocusGroupScope","createRovingFocusGroupScope","MenuProvider","useMenuContext","MenuRootProvider","useMenuRootContext","Menu","props","__scopeMenu","open","children","dir","onOpenChange","modal","popperScope","content","setContent","React","isUsingKeyboardRef","handleOpenChange","useCallbackRef","direction","useDirection","handleKeyDown","current","document","addEventListener","handlePointer","capture","once","removeEventListener","ANCHOR_NAME","MenuAnchor","forwardedRef","anchorProps","PORTAL_NAME","PortalProvider","usePortalContext","forceMount","undefined","MenuPortal","container","context","CONTENT_NAME","MenuContentProvider","useMenuContentContext","MenuContent","portalContext","contentProps","rootContext","MenuRootContentModal","ref","composedRefs","useComposedRefs","hideOthers","composeEventHandlers","onFocusOutside","event","preventDefault","checkForDefaultPrevented","MenuRootContentNonModal","MenuContentImpl","loop","trapFocus","onOpenAutoFocus","onCloseAutoFocus","disableOutsidePointerEvents","onEntryFocus","onEscapeKeyDown","onPointerDownOutside","onInteractOutside","onDismiss","disableOutsideScroll","rovingFocusGroupScope","getItems","currentItemId","setCurrentItemId","contentRef","onContentChange","timerRef","searchRef","pointerGraceTimerRef","pointerGraceIntentRef","pointerDirRef","lastPointerXRef","ScrollLockWrapper","scrollLockWrapperProps","as","allowPinchZoom","handleTypeaheadSearch","key","search","items","filter","item","disabled","currentItem","activeElement","currentMatch","find","textValue","values","map","nextMatch","getNextMatch","newItem","updateSearch","value","window","clearTimeout","setTimeout","focus","useFocusGuards","isPointerMovingToSubmenu","isMovingTowards","side","isPointerInGraceArea","area","intent","getOpenState","outline","style","onKeyDown","target","isKeyDownInside","closest","currentTarget","isModifierKey","ctrlKey","altKey","metaKey","isCharacterKey","length","includes","candidateNodes","reverse","focusFirst","onBlur","contains","onPointerMove","whenMouse","pointerXHasChanged","clientX","newDir","GROUP_NAME","MenuGroup","groupProps","LABEL_NAME","MenuLabel","labelProps","ITEM_NAME","ITEM_SELECT","MenuItem","onSelect","itemProps","contentContext","isPointerDownRef","handleSelect","menuItem","itemSelectEvent","CustomEvent","bubbles","cancelable","dispatchDiscreteCustomEvent","defaultPrevented","onClose","onClick","onPointerDown","onPointerUp","click","isTypingAhead","MenuItemImpl","isFocused","setIsFocused","textContent","setTextContent","trim","onItemLeave","onItemEnter","onPointerLeave","onFocus","CHECKBOX_ITEM_NAME","MenuCheckboxItem","checked","onCheckedChange","checkboxItemProps","isIndeterminate","getCheckedState","RADIO_GROUP_NAME","RadioGroupProvider","useRadioGroupContext","onValueChange","MenuRadioGroup","handleValueChange","RADIO_ITEM_NAME","MenuRadioItem","radioItemProps","ITEM_INDICATOR_NAME","ItemIndicatorProvider","useItemIndicatorContext","MenuItemIndicator","itemIndicatorProps","indicatorContext","SEPARATOR_NAME","MenuSeparator","separatorProps","ARROW_NAME","MenuArrow","arrowProps","SUB_NAME","MenuSubProvider","useMenuSubContext","MenuSub","parentMenuContext","trigger","setTrigger","useId","SUB_TRIGGER_NAME","MenuSubTrigger","subContext","openTimerRef","onPointerGraceIntentChange","scope","clearOpenTimer","pointerGraceTimer","triggerId","contentId","composeRefs","onTriggerChange","contentRect","getBoundingClientRect","dataset","rightSide","bleed","contentNearEdge","contentFarEdge","x","y","clientY","top","bottom","onTriggerLeave","SUB_CONTENT_NAME","MenuSubContent","subContentProps","isCloseKey","candidates","PREVIOUSLY_FOCUSED_ELEMENT","candidate","wrapArray","array","startIndex","_","index","isRepeated","Array","from","every","char","normalizedSearch","currentMatchIndex","indexOf","wrappedValues","Math","max","excludeCurrentMatch","v","toLowerCase","startsWith","isPointInPolygon","point","polygon","inside","i","j","xi","yi","xj","yj","intersect","cursorPos","handler","pointerType","Root","Anchor","Portal","Content","Group","Label","Item","CheckboxItem","RadioGroup","RadioItem","ItemIndicator","Separator","Arrow","Sub","SubTrigger","SubContent"],"mappings":"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"}},
    {"offset": {"line": 3766, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3771, "column": 0}, "map": {"version":3,"sources":["packages/react/dropdown-menu/src/index.ts","packages/react/dropdown-menu/src/DropdownMenu.tsx","/turbopack/[project]/node_modules/@radix-ui/react-dropdown-menu/dist/index.mjs"],"sourcesContent":["export {\n  createDropdownMenuScope,\n  //\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuPortal,\n  DropdownMenuContent,\n  DropdownMenuGroup,\n  DropdownMenuLabel,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioGroup,\n  DropdownMenuRadioItem,\n  DropdownMenuItemIndicator,\n  DropdownMenuSeparator,\n  DropdownMenuArrow,\n  DropdownMenuSub,\n  DropdownMenuSubTrigger,\n  DropdownMenuSubContent,\n  //\n  Root,\n  Trigger,\n  Portal,\n  Content,\n  Group,\n  Label,\n  Item,\n  CheckboxItem,\n  RadioGroup,\n  RadioItem,\n  ItemIndicator,\n  Separator,\n  Arrow,\n  Sub,\n  SubTrigger,\n  SubContent,\n} from './DropdownMenu';\nexport type {\n  DropdownMenuProps,\n  DropdownMenuTriggerProps,\n  DropdownMenuPortalProps,\n  DropdownMenuContentProps,\n  DropdownMenuGroupProps,\n  DropdownMenuLabelProps,\n  DropdownMenuItemProps,\n  DropdownMenuCheckboxItemProps,\n  DropdownMenuRadioGroupProps,\n  DropdownMenuRadioItemProps,\n  DropdownMenuItemIndicatorProps,\n  DropdownMenuSeparatorProps,\n  DropdownMenuArrowProps,\n  DropdownMenuSubProps,\n  DropdownMenuSubTriggerProps,\n  DropdownMenuSubContentProps,\n} from './DropdownMenu';\n","import * as React from 'react';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { composeRefs } from '@radix-ui/react-compose-refs';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport * as MenuPrimitive from '@radix-ui/react-menu';\nimport { createMenuScope } from '@radix-ui/react-menu';\nimport { useId } from '@radix-ui/react-id';\n\nimport type * as Radix from '@radix-ui/react-primitive';\nimport type { Scope } from '@radix-ui/react-context';\n\ntype Direction = 'ltr' | 'rtl';\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenu\n * -----------------------------------------------------------------------------------------------*/\n\nconst DROPDOWN_MENU_NAME = 'DropdownMenu';\n\ntype ScopedProps<P> = P & { __scopeDropdownMenu?: Scope };\nconst [createDropdownMenuContext, createDropdownMenuScope] = createContextScope(\n  DROPDOWN_MENU_NAME,\n  [createMenuScope]\n);\nconst useMenuScope = createMenuScope();\n\ntype DropdownMenuContextValue = {\n  triggerId: string;\n  triggerRef: React.RefObject<HTMLButtonElement>;\n  contentId: string;\n  open: boolean;\n  onOpenChange(open: boolean): void;\n  onOpenToggle(): void;\n  modal: boolean;\n};\n\nconst [DropdownMenuProvider, useDropdownMenuContext] =\n  createDropdownMenuContext<DropdownMenuContextValue>(DROPDOWN_MENU_NAME);\n\ninterface DropdownMenuProps {\n  children?: React.ReactNode;\n  dir?: Direction;\n  open?: boolean;\n  defaultOpen?: boolean;\n  onOpenChange?(open: boolean): void;\n  modal?: boolean;\n}\n\nconst DropdownMenu: React.FC<DropdownMenuProps> = (props: ScopedProps<DropdownMenuProps>) => {\n  const {\n    __scopeDropdownMenu,\n    children,\n    dir,\n    open: openProp,\n    defaultOpen,\n    onOpenChange,\n    modal = true,\n  } = props;\n  const menuScope = useMenuScope(__scopeDropdownMenu);\n  const triggerRef = React.useRef<HTMLButtonElement>(null);\n  const [open = false, setOpen] = useControllableState({\n    prop: openProp,\n    defaultProp: defaultOpen,\n    onChange: onOpenChange,\n  });\n\n  return (\n    <DropdownMenuProvider\n      scope={__scopeDropdownMenu}\n      triggerId={useId()}\n      triggerRef={triggerRef}\n      contentId={useId()}\n      open={open}\n      onOpenChange={setOpen}\n      onOpenToggle={React.useCallback(() => setOpen((prevOpen) => !prevOpen), [setOpen])}\n      modal={modal}\n    >\n      <MenuPrimitive.Root {...menuScope} open={open} onOpenChange={setOpen} dir={dir} modal={modal}>\n        {children}\n      </MenuPrimitive.Root>\n    </DropdownMenuProvider>\n  );\n};\n\nDropdownMenu.displayName = DROPDOWN_MENU_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nconst TRIGGER_NAME = 'DropdownMenuTrigger';\n\ntype DropdownMenuTriggerElement = React.ElementRef<typeof Primitive.button>;\ntype PrimitiveButtonProps = Radix.ComponentPropsWithoutRef<typeof Primitive.button>;\ninterface DropdownMenuTriggerProps extends PrimitiveButtonProps {}\n\nconst DropdownMenuTrigger = React.forwardRef<DropdownMenuTriggerElement, DropdownMenuTriggerProps>(\n  (props: ScopedProps<DropdownMenuTriggerProps>, forwardedRef) => {\n    const { __scopeDropdownMenu, disabled = false, ...triggerProps } = props;\n    const context = useDropdownMenuContext(TRIGGER_NAME, __scopeDropdownMenu);\n    const menuScope = useMenuScope(__scopeDropdownMenu);\n    return (\n      <MenuPrimitive.Anchor asChild {...menuScope}>\n        <Primitive.button\n          type=\"button\"\n          id={context.triggerId}\n          aria-haspopup=\"menu\"\n          aria-expanded={context.open}\n          aria-controls={context.open ? context.contentId : undefined}\n          data-state={context.open ? 'open' : 'closed'}\n          data-disabled={disabled ? '' : undefined}\n          disabled={disabled}\n          {...triggerProps}\n          ref={composeRefs(forwardedRef, context.triggerRef)}\n          onPointerDown={composeEventHandlers(props.onPointerDown, (event) => {\n            // only call handler if it's the left button (mousedown gets triggered by all mouse buttons)\n            // but not when the control key is pressed (avoiding MacOS right click)\n            if (!disabled && event.button === 0 && event.ctrlKey === false) {\n              context.onOpenToggle();\n              // prevent trigger focusing when opening\n              // this allows the content to be given focus without competition\n              if (!context.open) event.preventDefault();\n            }\n          })}\n          onKeyDown={composeEventHandlers(props.onKeyDown, (event) => {\n            if (disabled) return;\n            if (['Enter', ' '].includes(event.key)) context.onOpenToggle();\n            if (event.key === 'ArrowDown') context.onOpenChange(true);\n            // prevent keydown from scrolling window / first focused item to execute\n            // that keydown (inadvertently closing the menu)\n            if (['Enter', ' ', 'ArrowDown'].includes(event.key)) event.preventDefault();\n          })}\n        />\n      </MenuPrimitive.Anchor>\n    );\n  }\n);\n\nDropdownMenuTrigger.displayName = TRIGGER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuPortal\n * -----------------------------------------------------------------------------------------------*/\n\nconst PORTAL_NAME = 'DropdownMenuPortal';\n\ntype MenuPortalProps = React.ComponentPropsWithoutRef<typeof MenuPrimitive.Portal>;\ninterface DropdownMenuPortalProps extends MenuPortalProps {}\n\nconst DropdownMenuPortal: React.FC<DropdownMenuPortalProps> = (\n  props: ScopedProps<DropdownMenuPortalProps>\n) => {\n  const { __scopeDropdownMenu, ...portalProps } = props;\n  const menuScope = useMenuScope(__scopeDropdownMenu);\n  return <MenuPrimitive.Portal {...menuScope} {...portalProps} />;\n};\n\nDropdownMenuPortal.displayName = PORTAL_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'DropdownMenuContent';\n\ntype DropdownMenuContentElement = React.ElementRef<typeof MenuPrimitive.Content>;\ntype MenuContentProps = Radix.ComponentPropsWithoutRef<typeof MenuPrimitive.Content>;\ninterface DropdownMenuContentProps extends Omit<MenuContentProps, 'onEntryFocus'> {}\n\nconst DropdownMenuContent = React.forwardRef<DropdownMenuContentElement, DropdownMenuContentProps>(\n  (props: ScopedProps<DropdownMenuContentProps>, forwardedRef) => {\n    const { __scopeDropdownMenu, ...contentProps } = props;\n    const context = useDropdownMenuContext(CONTENT_NAME, __scopeDropdownMenu);\n    const menuScope = useMenuScope(__scopeDropdownMenu);\n    const hasInteractedOutsideRef = React.useRef(false);\n\n    return (\n      <MenuPrimitive.Content\n        id={context.contentId}\n        aria-labelledby={context.triggerId}\n        {...menuScope}\n        {...contentProps}\n        ref={forwardedRef}\n        onCloseAutoFocus={composeEventHandlers(props.onCloseAutoFocus, (event) => {\n          if (!hasInteractedOutsideRef.current) context.triggerRef.current?.focus();\n          hasInteractedOutsideRef.current = false;\n          // Always prevent auto focus because we either focus manually or want user agent focus\n          event.preventDefault();\n        })}\n        onInteractOutside={composeEventHandlers(props.onInteractOutside, (event) => {\n          const originalEvent = event.detail.originalEvent as PointerEvent;\n          const ctrlLeftClick = originalEvent.button === 0 && originalEvent.ctrlKey === true;\n          const isRightClick = originalEvent.button === 2 || ctrlLeftClick;\n          if (!context.modal || isRightClick) hasInteractedOutsideRef.current = true;\n        })}\n        style={{\n          ...props.style,\n          // re-namespace exposed content custom properties\n          ...{\n            '--radix-dropdown-menu-content-transform-origin':\n              'var(--radix-popper-transform-origin)',\n            '--radix-dropdown-menu-content-available-width': 'var(--radix-popper-available-width)',\n            '--radix-dropdown-menu-content-available-height':\n              'var(--radix-popper-available-height)',\n            '--radix-dropdown-menu-trigger-width': 'var(--radix-popper-anchor-width)',\n            '--radix-dropdown-menu-trigger-height': 'var(--radix-popper-anchor-height)',\n          },\n        }}\n      />\n    );\n  }\n);\n\nDropdownMenuContent.displayName = CONTENT_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuGroup\n * -----------------------------------------------------------------------------------------------*/\n\nconst GROUP_NAME = 'DropdownMenuGroup';\n\ntype DropdownMenuGroupElement = React.ElementRef<typeof MenuPrimitive.Group>;\ntype MenuGroupProps = Radix.ComponentPropsWithoutRef<typeof MenuPrimitive.Group>;\ninterface DropdownMenuGroupProps extends MenuGroupProps {}\n\nconst DropdownMenuGroup = React.forwardRef<DropdownMenuGroupElement, DropdownMenuGroupProps>(\n  (props: ScopedProps<DropdownMenuGroupProps>, forwardedRef) => {\n    const { __scopeDropdownMenu, ...groupProps } = props;\n    const menuScope = useMenuScope(__scopeDropdownMenu);\n    return <MenuPrimitive.Group {...menuScope} {...groupProps} ref={forwardedRef} />;\n  }\n);\n\nDropdownMenuGroup.displayName = GROUP_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuLabel\n * -----------------------------------------------------------------------------------------------*/\n\nconst LABEL_NAME = 'DropdownMenuLabel';\n\ntype DropdownMenuLabelElement = React.ElementRef<typeof MenuPrimitive.Label>;\ntype MenuLabelProps = Radix.ComponentPropsWithoutRef<typeof MenuPrimitive.Label>;\ninterface DropdownMenuLabelProps extends MenuLabelProps {}\n\nconst DropdownMenuLabel = React.forwardRef<DropdownMenuLabelElement, DropdownMenuLabelProps>(\n  (props: ScopedProps<DropdownMenuLabelProps>, forwardedRef) => {\n    const { __scopeDropdownMenu, ...labelProps } = props;\n    const menuScope = useMenuScope(__scopeDropdownMenu);\n    return <MenuPrimitive.Label {...menuScope} {...labelProps} ref={forwardedRef} />;\n  }\n);\n\nDropdownMenuLabel.displayName = LABEL_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuItem\n * -----------------------------------------------------------------------------------------------*/\n\nconst ITEM_NAME = 'DropdownMenuItem';\n\ntype DropdownMenuItemElement = React.ElementRef<typeof MenuPrimitive.Item>;\ntype MenuItemProps = Radix.ComponentPropsWithoutRef<typeof MenuPrimitive.Item>;\ninterface DropdownMenuItemProps extends MenuItemProps {}\n\nconst DropdownMenuItem = React.forwardRef<DropdownMenuItemElement, DropdownMenuItemProps>(\n  (props: ScopedProps<DropdownMenuItemProps>, forwardedRef) => {\n    const { __scopeDropdownMenu, ...itemProps } = props;\n    const menuScope = useMenuScope(__scopeDropdownMenu);\n    return <MenuPrimitive.Item {...menuScope} {...itemProps} ref={forwardedRef} />;\n  }\n);\n\nDropdownMenuItem.displayName = ITEM_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuCheckboxItem\n * -----------------------------------------------------------------------------------------------*/\n\nconst CHECKBOX_ITEM_NAME = 'DropdownMenuCheckboxItem';\n\ntype DropdownMenuCheckboxItemElement = React.ElementRef<typeof MenuPrimitive.CheckboxItem>;\ntype MenuCheckboxItemProps = Radix.ComponentPropsWithoutRef<typeof MenuPrimitive.CheckboxItem>;\ninterface DropdownMenuCheckboxItemProps extends MenuCheckboxItemProps {}\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  DropdownMenuCheckboxItemElement,\n  DropdownMenuCheckboxItemProps\n>((props: ScopedProps<DropdownMenuCheckboxItemProps>, forwardedRef) => {\n  const { __scopeDropdownMenu, ...checkboxItemProps } = props;\n  const menuScope = useMenuScope(__scopeDropdownMenu);\n  return <MenuPrimitive.CheckboxItem {...menuScope} {...checkboxItemProps} ref={forwardedRef} />;\n});\n\nDropdownMenuCheckboxItem.displayName = CHECKBOX_ITEM_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuRadioGroup\n * -----------------------------------------------------------------------------------------------*/\n\nconst RADIO_GROUP_NAME = 'DropdownMenuRadioGroup';\n\ntype DropdownMenuRadioGroupElement = React.ElementRef<typeof MenuPrimitive.RadioGroup>;\ntype MenuRadioGroupProps = Radix.ComponentPropsWithoutRef<typeof MenuPrimitive.RadioGroup>;\ninterface DropdownMenuRadioGroupProps extends MenuRadioGroupProps {}\n\nconst DropdownMenuRadioGroup = React.forwardRef<\n  DropdownMenuRadioGroupElement,\n  DropdownMenuRadioGroupProps\n>((props: ScopedProps<DropdownMenuRadioGroupProps>, forwardedRef) => {\n  const { __scopeDropdownMenu, ...radioGroupProps } = props;\n  const menuScope = useMenuScope(__scopeDropdownMenu);\n  return <MenuPrimitive.RadioGroup {...menuScope} {...radioGroupProps} ref={forwardedRef} />;\n});\n\nDropdownMenuRadioGroup.displayName = RADIO_GROUP_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuRadioItem\n * -----------------------------------------------------------------------------------------------*/\n\nconst RADIO_ITEM_NAME = 'DropdownMenuRadioItem';\n\ntype DropdownMenuRadioItemElement = React.ElementRef<typeof MenuPrimitive.RadioItem>;\ntype MenuRadioItemProps = Radix.ComponentPropsWithoutRef<typeof MenuPrimitive.RadioItem>;\ninterface DropdownMenuRadioItemProps extends MenuRadioItemProps {}\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  DropdownMenuRadioItemElement,\n  DropdownMenuRadioItemProps\n>((props: ScopedProps<DropdownMenuRadioItemProps>, forwardedRef) => {\n  const { __scopeDropdownMenu, ...radioItemProps } = props;\n  const menuScope = useMenuScope(__scopeDropdownMenu);\n  return <MenuPrimitive.RadioItem {...menuScope} {...radioItemProps} ref={forwardedRef} />;\n});\n\nDropdownMenuRadioItem.displayName = RADIO_ITEM_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuItemIndicator\n * -----------------------------------------------------------------------------------------------*/\n\nconst INDICATOR_NAME = 'DropdownMenuItemIndicator';\n\ntype DropdownMenuItemIndicatorElement = React.ElementRef<typeof MenuPrimitive.ItemIndicator>;\ntype MenuItemIndicatorProps = Radix.ComponentPropsWithoutRef<typeof MenuPrimitive.ItemIndicator>;\ninterface DropdownMenuItemIndicatorProps extends MenuItemIndicatorProps {}\n\nconst DropdownMenuItemIndicator = React.forwardRef<\n  DropdownMenuItemIndicatorElement,\n  DropdownMenuItemIndicatorProps\n>((props: ScopedProps<DropdownMenuItemIndicatorProps>, forwardedRef) => {\n  const { __scopeDropdownMenu, ...itemIndicatorProps } = props;\n  const menuScope = useMenuScope(__scopeDropdownMenu);\n  return <MenuPrimitive.ItemIndicator {...menuScope} {...itemIndicatorProps} ref={forwardedRef} />;\n});\n\nDropdownMenuItemIndicator.displayName = INDICATOR_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuSeparator\n * -----------------------------------------------------------------------------------------------*/\n\nconst SEPARATOR_NAME = 'DropdownMenuSeparator';\n\ntype DropdownMenuSeparatorElement = React.ElementRef<typeof MenuPrimitive.Separator>;\ntype MenuSeparatorProps = Radix.ComponentPropsWithoutRef<typeof MenuPrimitive.Separator>;\ninterface DropdownMenuSeparatorProps extends MenuSeparatorProps {}\n\nconst DropdownMenuSeparator = React.forwardRef<\n  DropdownMenuSeparatorElement,\n  DropdownMenuSeparatorProps\n>((props: ScopedProps<DropdownMenuSeparatorProps>, forwardedRef) => {\n  const { __scopeDropdownMenu, ...separatorProps } = props;\n  const menuScope = useMenuScope(__scopeDropdownMenu);\n  return <MenuPrimitive.Separator {...menuScope} {...separatorProps} ref={forwardedRef} />;\n});\n\nDropdownMenuSeparator.displayName = SEPARATOR_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuArrow\n * -----------------------------------------------------------------------------------------------*/\n\nconst ARROW_NAME = 'DropdownMenuArrow';\n\ntype DropdownMenuArrowElement = React.ElementRef<typeof MenuPrimitive.Arrow>;\ntype MenuArrowProps = Radix.ComponentPropsWithoutRef<typeof MenuPrimitive.Arrow>;\ninterface DropdownMenuArrowProps extends MenuArrowProps {}\n\nconst DropdownMenuArrow = React.forwardRef<DropdownMenuArrowElement, DropdownMenuArrowProps>(\n  (props: ScopedProps<DropdownMenuArrowProps>, forwardedRef) => {\n    const { __scopeDropdownMenu, ...arrowProps } = props;\n    const menuScope = useMenuScope(__scopeDropdownMenu);\n    return <MenuPrimitive.Arrow {...menuScope} {...arrowProps} ref={forwardedRef} />;\n  }\n);\n\nDropdownMenuArrow.displayName = ARROW_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuSub\n * -----------------------------------------------------------------------------------------------*/\n\ninterface DropdownMenuSubProps {\n  children?: React.ReactNode;\n  open?: boolean;\n  defaultOpen?: boolean;\n  onOpenChange?(open: boolean): void;\n}\n\nconst DropdownMenuSub: React.FC<DropdownMenuSubProps> = (\n  props: ScopedProps<DropdownMenuSubProps>\n) => {\n  const { __scopeDropdownMenu, children, open: openProp, onOpenChange, defaultOpen } = props;\n  const menuScope = useMenuScope(__scopeDropdownMenu);\n  const [open = false, setOpen] = useControllableState({\n    prop: openProp,\n    defaultProp: defaultOpen,\n    onChange: onOpenChange,\n  });\n\n  return (\n    <MenuPrimitive.Sub {...menuScope} open={open} onOpenChange={setOpen}>\n      {children}\n    </MenuPrimitive.Sub>\n  );\n};\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuSubTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nconst SUB_TRIGGER_NAME = 'DropdownMenuSubTrigger';\n\ntype DropdownMenuSubTriggerElement = React.ElementRef<typeof MenuPrimitive.SubTrigger>;\ntype MenuSubTriggerProps = Radix.ComponentPropsWithoutRef<typeof MenuPrimitive.SubTrigger>;\ninterface DropdownMenuSubTriggerProps extends MenuSubTriggerProps {}\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  DropdownMenuSubTriggerElement,\n  DropdownMenuSubTriggerProps\n>((props: ScopedProps<DropdownMenuSubTriggerProps>, forwardedRef) => {\n  const { __scopeDropdownMenu, ...subTriggerProps } = props;\n  const menuScope = useMenuScope(__scopeDropdownMenu);\n  return <MenuPrimitive.SubTrigger {...menuScope} {...subTriggerProps} ref={forwardedRef} />;\n});\n\nDropdownMenuSubTrigger.displayName = SUB_TRIGGER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuSubContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst SUB_CONTENT_NAME = 'DropdownMenuSubContent';\n\ntype DropdownMenuSubContentElement = React.ElementRef<typeof MenuPrimitive.Content>;\ntype MenuSubContentProps = Radix.ComponentPropsWithoutRef<typeof MenuPrimitive.SubContent>;\ninterface DropdownMenuSubContentProps extends MenuSubContentProps {}\n\nconst DropdownMenuSubContent = React.forwardRef<\n  DropdownMenuSubContentElement,\n  DropdownMenuSubContentProps\n>((props: ScopedProps<DropdownMenuSubContentProps>, forwardedRef) => {\n  const { __scopeDropdownMenu, ...subContentProps } = props;\n  const menuScope = useMenuScope(__scopeDropdownMenu);\n\n  return (\n    <MenuPrimitive.SubContent\n      {...menuScope}\n      {...subContentProps}\n      ref={forwardedRef}\n      style={{\n        ...props.style,\n        // re-namespace exposed content custom properties\n        ...{\n          '--radix-dropdown-menu-content-transform-origin': 'var(--radix-popper-transform-origin)',\n          '--radix-dropdown-menu-content-available-width': 'var(--radix-popper-available-width)',\n          '--radix-dropdown-menu-content-available-height': 'var(--radix-popper-available-height)',\n          '--radix-dropdown-menu-trigger-width': 'var(--radix-popper-anchor-width)',\n          '--radix-dropdown-menu-trigger-height': 'var(--radix-popper-anchor-height)',\n        },\n      }}\n    />\n  );\n});\n\nDropdownMenuSubContent.displayName = SUB_CONTENT_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst Root = DropdownMenu;\nconst Trigger = DropdownMenuTrigger;\nconst Portal = DropdownMenuPortal;\nconst Content = DropdownMenuContent;\nconst Group = DropdownMenuGroup;\nconst Label = DropdownMenuLabel;\nconst Item = DropdownMenuItem;\nconst CheckboxItem = DropdownMenuCheckboxItem;\nconst RadioGroup = DropdownMenuRadioGroup;\nconst RadioItem = DropdownMenuRadioItem;\nconst ItemIndicator = DropdownMenuItemIndicator;\nconst Separator = DropdownMenuSeparator;\nconst Arrow = DropdownMenuArrow;\nconst Sub = DropdownMenuSub;\nconst SubTrigger = DropdownMenuSubTrigger;\nconst SubContent = DropdownMenuSubContent;\n\nexport {\n  createDropdownMenuScope,\n  //\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuPortal,\n  DropdownMenuContent,\n  DropdownMenuGroup,\n  DropdownMenuLabel,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioGroup,\n  DropdownMenuRadioItem,\n  DropdownMenuItemIndicator,\n  DropdownMenuSeparator,\n  DropdownMenuArrow,\n  DropdownMenuSub,\n  DropdownMenuSubTrigger,\n  DropdownMenuSubContent,\n  //\n  Root,\n  Trigger,\n  Portal,\n  Content,\n  Group,\n  Label,\n  Item,\n  CheckboxItem,\n  RadioGroup,\n  RadioItem,\n  ItemIndicator,\n  Separator,\n  Arrow,\n  Sub,\n  SubTrigger,\n  SubContent,\n};\nexport type {\n  DropdownMenuProps,\n  DropdownMenuTriggerProps,\n  DropdownMenuPortalProps,\n  DropdownMenuContentProps,\n  DropdownMenuGroupProps,\n  DropdownMenuLabelProps,\n  DropdownMenuItemProps,\n  DropdownMenuCheckboxItemProps,\n  DropdownMenuRadioGroupProps,\n  DropdownMenuRadioItemProps,\n  DropdownMenuItemIndicatorProps,\n  DropdownMenuSeparatorProps,\n  DropdownMenuArrowProps,\n  DropdownMenuSubProps,\n  DropdownMenuSubTriggerProps,\n  DropdownMenuSubContentProps,\n};\n",null],"names":["DROPDOWN_MENU_NAME","createDropdownMenuContext","createDropdownMenuScope","createContextScope","useMenuScope","createMenuScope","DropdownMenuProvider","useDropdownMenuContext","DropdownMenu","props","__scopeDropdownMenu","children","dir","open","openProp","defaultOpen","onOpenChange","modal","menuScope","triggerRef","React","setOpen","useControllableState","prop","defaultProp","onChange","useId","prevOpen","TRIGGER_NAME","DropdownMenuTrigger","forwardedRef","disabled","triggerProps","context","triggerId","contentId","undefined","composeRefs","composeEventHandlers","onPointerDown","event","button","ctrlKey","onOpenToggle","preventDefault","onKeyDown","includes","key","PORTAL_NAME","DropdownMenuPortal","portalProps","CONTENT_NAME","DropdownMenuContent","contentProps","hasInteractedOutsideRef","onCloseAutoFocus","current","focus","onInteractOutside","originalEvent","detail","ctrlLeftClick","isRightClick","style","GROUP_NAME","DropdownMenuGroup","groupProps","LABEL_NAME","DropdownMenuLabel","labelProps","ITEM_NAME","DropdownMenuItem","itemProps","CHECKBOX_ITEM_NAME","DropdownMenuCheckboxItem","checkboxItemProps","RADIO_GROUP_NAME","DropdownMenuRadioGroup","radioGroupProps","RADIO_ITEM_NAME","DropdownMenuRadioItem","radioItemProps","INDICATOR_NAME","DropdownMenuItemIndicator","itemIndicatorProps","SEPARATOR_NAME","DropdownMenuSeparator","separatorProps","ARROW_NAME","DropdownMenuArrow","arrowProps","DropdownMenuSub","SUB_TRIGGER_NAME","DropdownMenuSubTrigger","subTriggerProps","SUB_CONTENT_NAME","DropdownMenuSubContent","subContentProps","Root","Trigger","Portal","Content","Group","Label","Item","CheckboxItem","RadioGroup","RadioItem","ItemIndicator","Separator","Arrow","Sub","SubTrigger","SubContent"],"mappings":"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"}},
    {"offset": {"line": 4144, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4149, "column": 0}, "map": {"version":3,"sources":["packages/react/dialog/src/index.ts","packages/react/dialog/src/Dialog.tsx","/turbopack/[project]/node_modules/@radix-ui/react-dialog/dist/index.mjs"],"sourcesContent":["export {\n  createDialogScope,\n  //\n  Dialog,\n  DialogTrigger,\n  DialogPortal,\n  DialogOverlay,\n  DialogContent,\n  DialogTitle,\n  DialogDescription,\n  DialogClose,\n  //\n  Root,\n  Trigger,\n  Portal,\n  Overlay,\n  Content,\n  Title,\n  Description,\n  Close,\n  //\n  WarningProvider,\n} from './Dialog';\nexport type {\n  DialogProps,\n  DialogTriggerProps,\n  DialogPortalProps,\n  DialogOverlayProps,\n  DialogContentProps,\n  DialogTitleProps,\n  DialogDescriptionProps,\n  DialogCloseProps,\n} from './Dialog';\n","import * as React from 'react';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { createContext, createContextScope } from '@radix-ui/react-context';\nimport { useId } from '@radix-ui/react-id';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\nimport { DismissableLayer } from '@radix-ui/react-dismissable-layer';\nimport { FocusScope } from '@radix-ui/react-focus-scope';\nimport { Portal as PortalPrimitive } from '@radix-ui/react-portal';\nimport { Presence } from '@radix-ui/react-presence';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport { useFocusGuards } from '@radix-ui/react-focus-guards';\nimport { RemoveScroll } from 'react-remove-scroll';\nimport { hideOthers } from 'aria-hidden';\nimport { Slot } from '@radix-ui/react-slot';\n\nimport type * as Radix from '@radix-ui/react-primitive';\nimport type { Scope } from '@radix-ui/react-context';\n\n/* -------------------------------------------------------------------------------------------------\n * Dialog\n * -----------------------------------------------------------------------------------------------*/\n\nconst DIALOG_NAME = 'Dialog';\n\ntype ScopedProps<P> = P & { __scopeDialog?: Scope };\nconst [createDialogContext, createDialogScope] = createContextScope(DIALOG_NAME);\n\ntype DialogContextValue = {\n  triggerRef: React.RefObject<HTMLButtonElement>;\n  contentRef: React.RefObject<DialogContentElement>;\n  contentId: string;\n  titleId: string;\n  descriptionId: string;\n  open: boolean;\n  onOpenChange(open: boolean): void;\n  onOpenToggle(): void;\n  modal: boolean;\n};\n\nconst [DialogProvider, useDialogContext] = createDialogContext<DialogContextValue>(DIALOG_NAME);\n\ninterface DialogProps {\n  children?: React.ReactNode;\n  open?: boolean;\n  defaultOpen?: boolean;\n  onOpenChange?(open: boolean): void;\n  modal?: boolean;\n}\n\nconst Dialog: React.FC<DialogProps> = (props: ScopedProps<DialogProps>) => {\n  const {\n    __scopeDialog,\n    children,\n    open: openProp,\n    defaultOpen,\n    onOpenChange,\n    modal = true,\n  } = props;\n  const triggerRef = React.useRef<HTMLButtonElement>(null);\n  const contentRef = React.useRef<DialogContentElement>(null);\n  const [open = false, setOpen] = useControllableState({\n    prop: openProp,\n    defaultProp: defaultOpen,\n    onChange: onOpenChange,\n  });\n\n  return (\n    <DialogProvider\n      scope={__scopeDialog}\n      triggerRef={triggerRef}\n      contentRef={contentRef}\n      contentId={useId()}\n      titleId={useId()}\n      descriptionId={useId()}\n      open={open}\n      onOpenChange={setOpen}\n      onOpenToggle={React.useCallback(() => setOpen((prevOpen) => !prevOpen), [setOpen])}\n      modal={modal}\n    >\n      {children}\n    </DialogProvider>\n  );\n};\n\nDialog.displayName = DIALOG_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DialogTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nconst TRIGGER_NAME = 'DialogTrigger';\n\ntype DialogTriggerElement = React.ElementRef<typeof Primitive.button>;\ntype PrimitiveButtonProps = Radix.ComponentPropsWithoutRef<typeof Primitive.button>;\ninterface DialogTriggerProps extends PrimitiveButtonProps {}\n\nconst DialogTrigger = React.forwardRef<DialogTriggerElement, DialogTriggerProps>(\n  (props: ScopedProps<DialogTriggerProps>, forwardedRef) => {\n    const { __scopeDialog, ...triggerProps } = props;\n    const context = useDialogContext(TRIGGER_NAME, __scopeDialog);\n    const composedTriggerRef = useComposedRefs(forwardedRef, context.triggerRef);\n    return (\n      <Primitive.button\n        type=\"button\"\n        aria-haspopup=\"dialog\"\n        aria-expanded={context.open}\n        aria-controls={context.contentId}\n        data-state={getState(context.open)}\n        {...triggerProps}\n        ref={composedTriggerRef}\n        onClick={composeEventHandlers(props.onClick, context.onOpenToggle)}\n      />\n    );\n  }\n);\n\nDialogTrigger.displayName = TRIGGER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DialogPortal\n * -----------------------------------------------------------------------------------------------*/\n\nconst PORTAL_NAME = 'DialogPortal';\n\ntype PortalContextValue = { forceMount?: true };\nconst [PortalProvider, usePortalContext] = createDialogContext<PortalContextValue>(PORTAL_NAME, {\n  forceMount: undefined,\n});\n\ntype PortalProps = React.ComponentPropsWithoutRef<typeof PortalPrimitive>;\ninterface DialogPortalProps {\n  children?: React.ReactNode;\n  /**\n   * Specify a container element to portal the content into.\n   */\n  container?: PortalProps['container'];\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst DialogPortal: React.FC<DialogPortalProps> = (props: ScopedProps<DialogPortalProps>) => {\n  const { __scopeDialog, forceMount, children, container } = props;\n  const context = useDialogContext(PORTAL_NAME, __scopeDialog);\n  return (\n    <PortalProvider scope={__scopeDialog} forceMount={forceMount}>\n      {React.Children.map(children, (child) => (\n        <Presence present={forceMount || context.open}>\n          <PortalPrimitive asChild container={container}>\n            {child}\n          </PortalPrimitive>\n        </Presence>\n      ))}\n    </PortalProvider>\n  );\n};\n\nDialogPortal.displayName = PORTAL_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DialogOverlay\n * -----------------------------------------------------------------------------------------------*/\n\nconst OVERLAY_NAME = 'DialogOverlay';\n\ntype DialogOverlayElement = DialogOverlayImplElement;\ninterface DialogOverlayProps extends DialogOverlayImplProps {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst DialogOverlay = React.forwardRef<DialogOverlayElement, DialogOverlayProps>(\n  (props: ScopedProps<DialogOverlayProps>, forwardedRef) => {\n    const portalContext = usePortalContext(OVERLAY_NAME, props.__scopeDialog);\n    const { forceMount = portalContext.forceMount, ...overlayProps } = props;\n    const context = useDialogContext(OVERLAY_NAME, props.__scopeDialog);\n    return context.modal ? (\n      <Presence present={forceMount || context.open}>\n        <DialogOverlayImpl {...overlayProps} ref={forwardedRef} />\n      </Presence>\n    ) : null;\n  }\n);\n\nDialogOverlay.displayName = OVERLAY_NAME;\n\ntype DialogOverlayImplElement = React.ElementRef<typeof Primitive.div>;\ntype PrimitiveDivProps = Radix.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface DialogOverlayImplProps extends PrimitiveDivProps {}\n\nconst DialogOverlayImpl = React.forwardRef<DialogOverlayImplElement, DialogOverlayImplProps>(\n  (props: ScopedProps<DialogOverlayImplProps>, forwardedRef) => {\n    const { __scopeDialog, ...overlayProps } = props;\n    const context = useDialogContext(OVERLAY_NAME, __scopeDialog);\n    return (\n      // Make sure `Content` is scrollable even when it doesn't live inside `RemoveScroll`\n      // ie. when `Overlay` and `Content` are siblings\n      <RemoveScroll as={Slot} allowPinchZoom shards={[context.contentRef]}>\n        <Primitive.div\n          data-state={getState(context.open)}\n          {...overlayProps}\n          ref={forwardedRef}\n          // We re-enable pointer-events prevented by `Dialog.Content` to allow scrolling the overlay.\n          style={{ pointerEvents: 'auto', ...overlayProps.style }}\n        />\n      </RemoveScroll>\n    );\n  }\n);\n\n/* -------------------------------------------------------------------------------------------------\n * DialogContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'DialogContent';\n\ntype DialogContentElement = DialogContentTypeElement;\ninterface DialogContentProps extends DialogContentTypeProps {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst DialogContent = React.forwardRef<DialogContentElement, DialogContentProps>(\n  (props: ScopedProps<DialogContentProps>, forwardedRef) => {\n    const portalContext = usePortalContext(CONTENT_NAME, props.__scopeDialog);\n    const { forceMount = portalContext.forceMount, ...contentProps } = props;\n    const context = useDialogContext(CONTENT_NAME, props.__scopeDialog);\n    return (\n      <Presence present={forceMount || context.open}>\n        {context.modal ? (\n          <DialogContentModal {...contentProps} ref={forwardedRef} />\n        ) : (\n          <DialogContentNonModal {...contentProps} ref={forwardedRef} />\n        )}\n      </Presence>\n    );\n  }\n);\n\nDialogContent.displayName = CONTENT_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype DialogContentTypeElement = DialogContentImplElement;\ninterface DialogContentTypeProps\n  extends Omit<DialogContentImplProps, 'trapFocus' | 'disableOutsidePointerEvents'> {}\n\nconst DialogContentModal = React.forwardRef<DialogContentTypeElement, DialogContentTypeProps>(\n  (props: ScopedProps<DialogContentTypeProps>, forwardedRef) => {\n    const context = useDialogContext(CONTENT_NAME, props.__scopeDialog);\n    const contentRef = React.useRef<HTMLDivElement>(null);\n    const composedRefs = useComposedRefs(forwardedRef, context.contentRef, contentRef);\n\n    // aria-hide everything except the content (better supported equivalent to setting aria-modal)\n    React.useEffect(() => {\n      const content = contentRef.current;\n      if (content) return hideOthers(content);\n    }, []);\n\n    return (\n      <DialogContentImpl\n        {...props}\n        ref={composedRefs}\n        // we make sure focus isn't trapped once `DialogContent` has been closed\n        // (closed !== unmounted when animating out)\n        trapFocus={context.open}\n        disableOutsidePointerEvents\n        onCloseAutoFocus={composeEventHandlers(props.onCloseAutoFocus, (event) => {\n          event.preventDefault();\n          context.triggerRef.current?.focus();\n        })}\n        onPointerDownOutside={composeEventHandlers(props.onPointerDownOutside, (event) => {\n          const originalEvent = event.detail.originalEvent;\n          const ctrlLeftClick = originalEvent.button === 0 && originalEvent.ctrlKey === true;\n          const isRightClick = originalEvent.button === 2 || ctrlLeftClick;\n\n          // If the event is a right-click, we shouldn't close because\n          // it is effectively as if we right-clicked the `Overlay`.\n          if (isRightClick) event.preventDefault();\n        })}\n        // When focus is trapped, a `focusout` event may still happen.\n        // We make sure we don't trigger our `onDismiss` in such case.\n        onFocusOutside={composeEventHandlers(props.onFocusOutside, (event) =>\n          event.preventDefault()\n        )}\n      />\n    );\n  }\n);\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst DialogContentNonModal = React.forwardRef<DialogContentTypeElement, DialogContentTypeProps>(\n  (props: ScopedProps<DialogContentTypeProps>, forwardedRef) => {\n    const context = useDialogContext(CONTENT_NAME, props.__scopeDialog);\n    const hasInteractedOutsideRef = React.useRef(false);\n    const hasPointerDownOutsideRef = React.useRef(false);\n\n    return (\n      <DialogContentImpl\n        {...props}\n        ref={forwardedRef}\n        trapFocus={false}\n        disableOutsidePointerEvents={false}\n        onCloseAutoFocus={(event) => {\n          props.onCloseAutoFocus?.(event);\n\n          if (!event.defaultPrevented) {\n            if (!hasInteractedOutsideRef.current) context.triggerRef.current?.focus();\n            // Always prevent auto focus because we either focus manually or want user agent focus\n            event.preventDefault();\n          }\n\n          hasInteractedOutsideRef.current = false;\n          hasPointerDownOutsideRef.current = false;\n        }}\n        onInteractOutside={(event) => {\n          props.onInteractOutside?.(event);\n\n          if (!event.defaultPrevented) {\n            hasInteractedOutsideRef.current = true;\n            if (event.detail.originalEvent.type === 'pointerdown') {\n              hasPointerDownOutsideRef.current = true;\n            }\n          }\n\n          // Prevent dismissing when clicking the trigger.\n          // As the trigger is already setup to close, without doing so would\n          // cause it to close and immediately open.\n          const target = event.target as HTMLElement;\n          const targetIsTrigger = context.triggerRef.current?.contains(target);\n          if (targetIsTrigger) event.preventDefault();\n\n          // On Safari if the trigger is inside a container with tabIndex={0}, when clicked\n          // we will get the pointer down outside event on the trigger, but then a subsequent\n          // focus outside event on the container, we ignore any focus outside event when we've\n          // already had a pointer down outside event.\n          if (event.detail.originalEvent.type === 'focusin' && hasPointerDownOutsideRef.current) {\n            event.preventDefault();\n          }\n        }}\n      />\n    );\n  }\n);\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype DialogContentImplElement = React.ElementRef<typeof DismissableLayer>;\ntype DismissableLayerProps = Radix.ComponentPropsWithoutRef<typeof DismissableLayer>;\ntype FocusScopeProps = Radix.ComponentPropsWithoutRef<typeof FocusScope>;\ninterface DialogContentImplProps extends Omit<DismissableLayerProps, 'onDismiss'> {\n  /**\n   * When `true`, focus cannot escape the `Content` via keyboard,\n   * pointer, or a programmatic focus.\n   * @defaultValue false\n   */\n  trapFocus?: FocusScopeProps['trapped'];\n\n  /**\n   * Event handler called when auto-focusing on open.\n   * Can be prevented.\n   */\n  onOpenAutoFocus?: FocusScopeProps['onMountAutoFocus'];\n\n  /**\n   * Event handler called when auto-focusing on close.\n   * Can be prevented.\n   */\n  onCloseAutoFocus?: FocusScopeProps['onUnmountAutoFocus'];\n}\n\nconst DialogContentImpl = React.forwardRef<DialogContentImplElement, DialogContentImplProps>(\n  (props: ScopedProps<DialogContentImplProps>, forwardedRef) => {\n    const { __scopeDialog, trapFocus, onOpenAutoFocus, onCloseAutoFocus, ...contentProps } = props;\n    const context = useDialogContext(CONTENT_NAME, __scopeDialog);\n    const contentRef = React.useRef<HTMLDivElement>(null);\n    const composedRefs = useComposedRefs(forwardedRef, contentRef);\n\n    // Make sure the whole tree has focus guards as our `Dialog` will be\n    // the last element in the DOM (beacuse of the `Portal`)\n    useFocusGuards();\n\n    return (\n      <>\n        <FocusScope\n          asChild\n          loop\n          trapped={trapFocus}\n          onMountAutoFocus={onOpenAutoFocus}\n          onUnmountAutoFocus={onCloseAutoFocus}\n        >\n          <DismissableLayer\n            role=\"dialog\"\n            id={context.contentId}\n            aria-describedby={context.descriptionId}\n            aria-labelledby={context.titleId}\n            data-state={getState(context.open)}\n            {...contentProps}\n            ref={composedRefs}\n            onDismiss={() => context.onOpenChange(false)}\n          />\n        </FocusScope>\n        {process.env.NODE_ENV !== 'production' && (\n          <>\n            <TitleWarning titleId={context.titleId} />\n            <DescriptionWarning contentRef={contentRef} descriptionId={context.descriptionId} />\n          </>\n        )}\n      </>\n    );\n  }\n);\n\n/* -------------------------------------------------------------------------------------------------\n * DialogTitle\n * -----------------------------------------------------------------------------------------------*/\n\nconst TITLE_NAME = 'DialogTitle';\n\ntype DialogTitleElement = React.ElementRef<typeof Primitive.h2>;\ntype PrimitiveHeading2Props = Radix.ComponentPropsWithoutRef<typeof Primitive.h2>;\ninterface DialogTitleProps extends PrimitiveHeading2Props {}\n\nconst DialogTitle = React.forwardRef<DialogTitleElement, DialogTitleProps>(\n  (props: ScopedProps<DialogTitleProps>, forwardedRef) => {\n    const { __scopeDialog, ...titleProps } = props;\n    const context = useDialogContext(TITLE_NAME, __scopeDialog);\n    return <Primitive.h2 id={context.titleId} {...titleProps} ref={forwardedRef} />;\n  }\n);\n\nDialogTitle.displayName = TITLE_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DialogDescription\n * -----------------------------------------------------------------------------------------------*/\n\nconst DESCRIPTION_NAME = 'DialogDescription';\n\ntype DialogDescriptionElement = React.ElementRef<typeof Primitive.p>;\ntype PrimitiveParagraphProps = Radix.ComponentPropsWithoutRef<typeof Primitive.p>;\ninterface DialogDescriptionProps extends PrimitiveParagraphProps {}\n\nconst DialogDescription = React.forwardRef<DialogDescriptionElement, DialogDescriptionProps>(\n  (props: ScopedProps<DialogDescriptionProps>, forwardedRef) => {\n    const { __scopeDialog, ...descriptionProps } = props;\n    const context = useDialogContext(DESCRIPTION_NAME, __scopeDialog);\n    return <Primitive.p id={context.descriptionId} {...descriptionProps} ref={forwardedRef} />;\n  }\n);\n\nDialogDescription.displayName = DESCRIPTION_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DialogClose\n * -----------------------------------------------------------------------------------------------*/\n\nconst CLOSE_NAME = 'DialogClose';\n\ntype DialogCloseElement = React.ElementRef<typeof Primitive.button>;\ninterface DialogCloseProps extends PrimitiveButtonProps {}\n\nconst DialogClose = React.forwardRef<DialogCloseElement, DialogCloseProps>(\n  (props: ScopedProps<DialogCloseProps>, forwardedRef) => {\n    const { __scopeDialog, ...closeProps } = props;\n    const context = useDialogContext(CLOSE_NAME, __scopeDialog);\n    return (\n      <Primitive.button\n        type=\"button\"\n        {...closeProps}\n        ref={forwardedRef}\n        onClick={composeEventHandlers(props.onClick, () => context.onOpenChange(false))}\n      />\n    );\n  }\n);\n\nDialogClose.displayName = CLOSE_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction getState(open: boolean) {\n  return open ? 'open' : 'closed';\n}\n\nconst TITLE_WARNING_NAME = 'DialogTitleWarning';\n\nconst [WarningProvider, useWarningContext] = createContext(TITLE_WARNING_NAME, {\n  contentName: CONTENT_NAME,\n  titleName: TITLE_NAME,\n  docsSlug: 'dialog',\n});\n\ntype TitleWarningProps = { titleId?: string };\n\nconst TitleWarning: React.FC<TitleWarningProps> = ({ titleId }) => {\n  const titleWarningContext = useWarningContext(TITLE_WARNING_NAME);\n\n  const MESSAGE = `\\`${titleWarningContext.contentName}\\` requires a \\`${titleWarningContext.titleName}\\` for the component to be accessible for screen reader users.\n\nIf you want to hide the \\`${titleWarningContext.titleName}\\`, you can wrap it with our VisuallyHidden component.\n\nFor more information, see https://radix-ui.com/primitives/docs/components/${titleWarningContext.docsSlug}`;\n\n  React.useEffect(() => {\n    if (titleId) {\n      const hasTitle = document.getElementById(titleId);\n      if (!hasTitle) throw new Error(MESSAGE);\n    }\n  }, [MESSAGE, titleId]);\n\n  return null;\n};\n\nconst DESCRIPTION_WARNING_NAME = 'DialogDescriptionWarning';\n\ntype DescriptionWarningProps = {\n  contentRef: React.RefObject<DialogContentElement>;\n  descriptionId?: string;\n};\n\nconst DescriptionWarning: React.FC<DescriptionWarningProps> = ({ contentRef, descriptionId }) => {\n  const descriptionWarningContext = useWarningContext(DESCRIPTION_WARNING_NAME);\n  const MESSAGE = `Warning: Missing \\`Description\\` or \\`aria-describedby={undefined}\\` for {${descriptionWarningContext.contentName}}.`;\n\n  React.useEffect(() => {\n    const describedById = contentRef.current?.getAttribute('aria-describedby');\n    // if we have an id and the user hasn't set aria-describedby={undefined}\n    if (descriptionId && describedById) {\n      const hasDescription = document.getElementById(descriptionId);\n      if (!hasDescription) console.warn(MESSAGE);\n    }\n  }, [MESSAGE, contentRef, descriptionId]);\n\n  return null;\n};\n\nconst Root = Dialog;\nconst Trigger = DialogTrigger;\nconst Portal = DialogPortal;\nconst Overlay = DialogOverlay;\nconst Content = DialogContent;\nconst Title = DialogTitle;\nconst Description = DialogDescription;\nconst Close = DialogClose;\n\nexport {\n  createDialogScope,\n  //\n  Dialog,\n  DialogTrigger,\n  DialogPortal,\n  DialogOverlay,\n  DialogContent,\n  DialogTitle,\n  DialogDescription,\n  DialogClose,\n  //\n  Root,\n  Trigger,\n  Portal,\n  Overlay,\n  Content,\n  Title,\n  Description,\n  Close,\n  //\n  WarningProvider,\n};\nexport type {\n  DialogProps,\n  DialogTriggerProps,\n  DialogPortalProps,\n  DialogOverlayProps,\n  DialogContentProps,\n  DialogTitleProps,\n  DialogDescriptionProps,\n  DialogCloseProps,\n};\n",null],"names":["DIALOG_NAME","createDialogContext","createDialogScope","createContextScope","DialogProvider","useDialogContext","Dialog","props","__scopeDialog","children","open","openProp","defaultOpen","onOpenChange","modal","triggerRef","React","contentRef","setOpen","useControllableState","prop","defaultProp","onChange","useId","prevOpen","TRIGGER_NAME","DialogTrigger","forwardedRef","triggerProps","context","composedTriggerRef","useComposedRefs","contentId","getState","composeEventHandlers","onClick","onOpenToggle","PORTAL_NAME","PortalProvider","usePortalContext","forceMount","undefined","DialogPortal","container","map","child","OVERLAY_NAME","DialogOverlay","portalContext","overlayProps","DialogOverlayImpl","pointerEvents","style","CONTENT_NAME","DialogContent","contentProps","DialogContentModal","composedRefs","content","current","hideOthers","onCloseAutoFocus","event","preventDefault","focus","onPointerDownOutside","originalEvent","detail","ctrlLeftClick","button","ctrlKey","isRightClick","onFocusOutside","DialogContentNonModal","hasInteractedOutsideRef","hasPointerDownOutsideRef","defaultPrevented","onInteractOutside","type","target","targetIsTrigger","contains","DialogContentImpl","trapFocus","onOpenAutoFocus","useFocusGuards","descriptionId","titleId","process","TITLE_NAME","DialogTitle","titleProps","DESCRIPTION_NAME","DialogDescription","descriptionProps","CLOSE_NAME","DialogClose","closeProps","TITLE_WARNING_NAME","WarningProvider","useWarningContext","createContext","contentName","titleName","docsSlug","TitleWarning","titleWarningContext","MESSAGE","hasTitle","document","getElementById","Error","DESCRIPTION_WARNING_NAME","DescriptionWarning","descriptionWarningContext","describedById","getAttribute","hasDescription","console","warn","Root","Trigger","Portal","Overlay","Content","Title","Description","Close"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACmBA;;qGAIA,MAAMA,oCAAc;AAGpB,MAAM,CAACC,2CAAqBC,0CAAtB,GAA2CC,6LAAmBH;AAcpE,MAAM,CAACI,sCAAgBC,uCAAjB,GAAqCJ,0CAAwCD;AAUnF,MAAMM,4CAAiCC,CAAAA;IACrC,MAAM,EAAA,eACJC,aADI,EAAA,UAEJC,QAFI,EAGJC,MAAMC,QAHF,EAAA,aAIJC,WAJI,EAAA,cAKJC,YALI,EAAA,OAMJC,QAAQ,IAARA,EANI,GAOFP;IACJ,MAAMQ,aAAaC,wKAAgC;IACnD,MAAMC,aAAaD,wKAAmC;IACtD,MAAM,CAACN,OAAO,KAAR,EAAeQ,QAAf,GAA0BC,oNAAqB;QACnDC,MAAMT;QACNU,aAAaT;QACbU,UAAUT;;IAGZ,OAAA,WAAA,GACE,+KAAC,sCADH;QAEI,OAAOL;QACP,YAAYO;QACZ,YAAYE;QACZ,WAAWM;QACX,SAASA;QACT,eAAeA;QACf,MAAMb;QACN,cAAcQ;QACd,cAAcF,6KAAkB,IAAME,QAASM,CAAAA,WAAa,CAACA,WAAW;YAACN;SAA3D;QACd,OAAOJ;OAENL;;AAKP,WAAA,GAAA,OAAA,MAAA,CAAA,2CAAA;IAAA,aAAA;;AAEA;;qGAIA,MAAMgB,qCAAe;AAMrB,MAAMC,4CAAa,WAAA,GAAGV,4KACpB,CAACT,OAAwCoB;IACvC,MAAM,EAAA,eAAEnB,aAAF,EAAiB,GAAGoB,cAApB,GAAqCrB;IAC3C,MAAMsB,UAAUxB,uCAAiBoB,oCAAcjB;IAC/C,MAAMsB,qBAAqBC,kMAAgBJ,cAAcE,QAAQd,UAAvB;IAC1C,OAAA,WAAA,GACE,+KAAC,sLAAU,MAAX,EADF,8KAAA;QAEI,MAAK;QACL,iBAAc;QACd,iBAAec,QAAQnB,IAHzB;QAIE,iBAAemB,QAAQG,SAJzB;QAKE,cAAYC,+BAASJ,QAAQnB,IAAT;OAChBkB,cANN;QAOE,KAAKE;QACL,SAASI,wLAAqB3B,MAAM4B,OAAP,EAAgBN,QAAQO,YAAxB;;;AAMrC,WAAA,GAAA,OAAA,MAAA,CAAA,2CAAA;IAAA,aAAA;;AAEA;;qGAIA,MAAMC,oCAAc;AAGpB,MAAM,CAACC,sCAAgBC,uCAAjB,GAAqCtC,0CAAwCoC,mCAAa;IAC9FG,YAAYC;;AAiBd,MAAMC,4CAA6CnC,CAAAA;IACjD,MAAM,EAAA,eAAEC,aAAF,EAAA,YAAiBgC,UAAjB,EAAA,UAA6B/B,QAA7B,EAAA,WAAuCkC,SAAAA,EAAvC,GAAqDpC;IAC3D,MAAMsB,UAAUxB,uCAAiBgC,mCAAa7B;IAC9C,OAAA,WAAA,GACE,+KAAC,sCADH;QACkB,OAAOA;QAAe,YAAYgC;OAC/CxB,0KAAe4B,GAAf,CAAmBnC,UAAWoC,CAAAA,QAAD,WAAA,GAC5B,oWAFJ;YAEc,SAASL,cAAcX,QAAQnB,IAA/B;WAAV,WAAA,GACE,gWADF;YACmB,SAAO;YAAC,WAAWiC;WACjCE;;AAQb,WAAA,GAAA,OAAA,MAAA,CAAA,2CAAA;IAAA,aAAA;;AAEA;;qGAIA,MAAMC,qCAAe;AAWrB,MAAMC,4CAAa,WAAA,GAAG/B,4KACpB,CAACT,OAAwCoB;IACvC,MAAMqB,gBAAgBT,uCAAiBO,oCAAcvC,MAAMC,aAArB;IACtC,MAAM,EAAA,YAAEgC,aAAaQ,cAAcR,UAA7B,EAAyC,GAAGS,cAA5C,GAA6D1C;IACnE,MAAMsB,UAAUxB,uCAAiByC,oCAAcvC,MAAMC,aAArB;IAChC,OAAOqB,QAAQf,KAAR,GAAA,WAAA,GACL,oWADF;QACY,SAAS0B,cAAcX,QAAQnB,IAA/B;OAAV,WAAA,GACE,+KAAC,yCAAD,8KAAA,CAAA,GAAuBuC,cADzB;QACuC,KAAKtB;WAE1C;;AAIR,WAAA,GAAA,OAAA,MAAA,CAAA,2CAAA;IAAA,aAAA;;AAMA,MAAMuB,0CAAiB,WAAA,GAAGlC,4KACxB,CAACT,OAA4CoB;IAC3C,MAAM,EAAA,eAAEnB,aAAF,EAAiB,GAAGyC,cAApB,GAAqC1C;IAC3C,MAAMsB,UAAUxB,uCAAiByC,oCAActC;IAC/C,OAAA,WAAA,GAEE,gDAAA;IACA,yZAAA;QAAc,EAAE;QAAQ,gBAAc;QAAC,QAAQ;YAACqB,QAAQZ,UAAT;SAAR;OAAvC,WAAA,GACE,+KAAC,sLAAU,GAAX,EADF,8KAAA;QAEI,cAAYgB,+BAASJ,QAAQnB,IAAT;OAChBuC,cAFN;QAGE,KAAKtB,aACL,4FADA;;QAEA,OAAO;YAAEwB,eAAe;YAAQ,GAAGF,aAAaG,KAAhB;;;;AAO1C;;qGAIA,MAAMC,qCAAe;AAWrB,MAAMC,4CAAa,WAAA,GAAGtC,4KACpB,CAACT,OAAwCoB;IACvC,MAAMqB,gBAAgBT,uCAAiBc,oCAAc9C,MAAMC,aAArB;IACtC,MAAM,EAAA,YAAEgC,aAAaQ,cAAcR,UAA7B,EAAyC,GAAGe,cAA5C,GAA6DhD;IACnE,MAAMsB,UAAUxB,uCAAiBgD,oCAAc9C,MAAMC,aAArB;IAChC,OAAA,WAAA,GACE,oWADF;QACY,SAASgC,cAAcX,QAAQnB,IAA/B;OACPmB,QAAQf,KAAR,GAAA,WAAA,GACC,+KAAC,0CAAD,8KAAA,CAAA,GAAwByC,cAF5B;QAE0C,KAAK5B;UAD5C,WAAA,GAGC,+KAAC,6CAAD,8KAAA,CAAA,GAA2B4B,cAF3B;QAEyC,KAAK5B;;;AAOxD,WAAA,GAAA,OAAA,MAAA,CAAA,2CAAA;IAAA,aAAA;;AAEA,kGAAA,GAMA,MAAM6B,2CAAkB,WAAA,GAAGxC,4KACzB,CAACT,OAA4CoB;IAC3C,MAAME,UAAUxB,uCAAiBgD,oCAAc9C,MAAMC,aAArB;IAChC,MAAMS,aAAaD,wKAA6B;IAChD,MAAMyC,eAAe1B,kMAAgBJ,cAAcE,QAAQZ,UAAvB,EAAmCA,aAEvE,8FAFA;IAGAD,2KAAgB;QACd,MAAM0C,UAAUzC,WAAW0C,OAA3B;QACA,IAAID,SAAS,OAAOE,2KAAWF;OAC9B,EAHH;IAKA,OAAA,WAAA,GACE,+KAAC,yCAAD,8KAAA,CAAA,GACMnD,OAFR;QAGI,KAAKkD,aACL,wEADA;;QAGA,WAAW5B,QAAQnB,IALrB;QAME,6BAA2B;QAC3B,kBAAkBwB,wLAAqB3B,MAAMsD,gBAAP,EAA0BC,CAAAA;YAAU,IAAA;YACxEA,MAAMC,cAAN;YACA,CAAA,wBAAAlC,QAAQd,UAAR,CAAmB4C,OAAnB,MAAA,QAAA,0BAAA,KAAA,KAAA,sBAA4BK,KAA5B;;QAEF,sBAAsB9B,wLAAqB3B,MAAM0D,oBAAP,EAA8BH,CAAAA;YACtE,MAAMI,gBAAgBJ,MAAMK,MAAN,CAAaD,aAAnC;YACA,MAAME,gBAAgBF,cAAcG,MAAd,KAAyB,KAAKH,cAAcI,OAAd,KAA0B;YAC9E,MAAMC,eAAeL,cAAcG,MAAd,KAAyB,KAAKD,eAEnD,4DAFA;YAGA,0DAAA;YACA,IAAIG,cAAcT,MAAMC,cAAN;WAEpB,8DADC;;QAGD,gBAAgB7B,wLAAqB3B,MAAMiE,cAAP,EAAwBV,CAAAA,QAC1DA,MAAMC,cAAN;;;AAOV,kGAAA,GAEA,MAAMU,8CAAqB,WAAA,GAAGzD,4KAC5B,CAACT,OAA4CoB;IAC3C,MAAME,UAAUxB,uCAAiBgD,oCAAc9C,MAAMC,aAArB;IAChC,MAAMkE,0BAA0B1D,wKAAa;IAC7C,MAAM2D,2BAA2B3D,wKAAa;IAE9C,OAAA,WAAA,GACE,+KAAC,yCAAD,8KAAA,CAAA,GACMT,OAFR;QAGI,KAAKoB;QACL,WAAW;QACX,6BAA6B;QAC7B,kBAAmBmC,CAAAA;YAAU,IAAA;YAC3B,CAAA,wBAAAvD,MAAMsD,gBAAN,MAAA,QAAA,0BAAA,KAAA,KAAA,sBAAA,IAAA,CAAAtD,OAAyBuD;YAEzB,IAAI,CAACA,MAAMc,gBAAX,EAA6B;gBAAA,IAAA;gBAC3B,IAAI,CAACF,wBAAwBf,OAA7B,EAAsC,CAAA,yBAAA9B,QAAQd,UAAR,CAAmB4C,OAAnB,MAAA,QAAA,2BAAA,KAAA,KAAA,uBAA4BK,KAA5B,IACtC,sFADA;gBAEAF,MAAMC,cAAN;;YAGFW,wBAAwBf,OAAxB,GAAkC;YAClCgB,yBAAyBhB,OAAzB,GAAmC;;QAErC,mBAAoBG,CAAAA;YAAU,IAAA,uBAAA;YAC5B,CAAA,wBAAAvD,MAAMsE,iBAAN,MAAA,QAAA,0BAAA,KAAA,KAAA,sBAAA,IAAA,CAAAtE,OAA0BuD;YAE1B,IAAI,CAACA,MAAMc,gBAAX,EAA6B;gBAC3BF,wBAAwBf,OAAxB,GAAkC;gBAClC,IAAIG,MAAMK,MAAN,CAAaD,aAAb,CAA2BY,IAA3B,KAAoC,eACtCH,yBAAyBhB,OAAzB,GAAmC;cAIvC,gDAFC;YAGD,mEAAA;YACA,0CAAA;YACA,MAAMoB,SAASjB,MAAMiB,MAArB;YACA,MAAMC,kBAAe,CAAA,yBAAGnD,QAAQd,UAAR,CAAmB4C,OAAtB,MAAA,QAAA,2BAAA,KAAA,IAAA,KAAA,IAAG,uBAA4BsB,QAA5B,CAAqCF;YAC7D,IAAIC,iBAAiBlB,MAAMC,cAAN,IAErB,iFAFA;YAGA,mFAAA;YACA,qFAAA;YACA,4CAAA;YACA,IAAID,MAAMK,MAAN,CAAaD,aAAb,CAA2BY,IAA3B,KAAoC,aAAaH,yBAAyBhB,OAA9E,EACEG,MAAMC,cAAN;;;;AAQZ,kGAAA,GA0BA,MAAMmB,0CAAiB,WAAA,GAAGlE,4KACxB,CAACT,OAA4CoB;IAC3C,MAAM,EAAA,eAAEnB,aAAF,EAAA,WAAiB2E,SAAjB,EAAA,iBAA4BC,eAA5B,EAAA,kBAA6CvB,gBAA7C,EAA+D,GAAGN,cAAlE,GAAmFhD;IACzF,MAAMsB,UAAUxB,uCAAiBgD,oCAAc7C;IAC/C,MAAMS,aAAaD,wKAA6B;IAChD,MAAMyC,eAAe1B,kMAAgBJ,cAAcV,aAEnD,oEAFA;IAGA,wDAAA;IACAoE;IAEA,OAAA,WAAA,GACE,0VAAA,MAAA,WAAA,GACE,4WAFJ;QAGM,SAAO;QACP,MAAI;QACJ,SAASF;QACT,kBAAkBC;QAClB,oBAAoBvB;OALtB,WAAA,GAOE,wXAPF,8KAAA;QAQI,MAAK;QACL,IAAIhC,QAAQG,SAFd;QAGE,oBAAkBH,QAAQyD,aAH5B;QAIE,mBAAiBzD,QAAQ0D,OAJ3B;QAKE,cAAYtD,+BAASJ,QAAQnB,IAAT;OAChB6C,cANN;QAOE,KAAKE;QACL,WAAW,IAAM5B,QAAQhB,YAAR,CAAqB;UAGzC2E;;AAWT;;qGAIA,MAAMC,mCAAa;AAMnB,MAAMC,4CAAW,WAAA,GAAG1E,4KAClB,CAACT,OAAsCoB;IACrC,MAAM,EAAA,eAAEnB,aAAF,EAAiB,GAAGmF,YAApB,GAAmCpF;IACzC,MAAMsB,UAAUxB,uCAAiBoF,kCAAYjF;IAC7C,OAAA,WAAA,GAAO,+KAAC,sLAAU,EAAX,EAAP,8KAAA;QAAqB,IAAIqB,QAAQ0D,OAAZ;OAAyBI,YAAvC;QAAmD,KAAKhE;;;AAInE,WAAA,GAAA,OAAA,MAAA,CAAA,2CAAA;IAAA,aAAA;;AAEA;;qGAIA,MAAMiE,yCAAmB;AAMzB,MAAMC,4CAAiB,WAAA,GAAG7E,4KACxB,CAACT,OAA4CoB;IAC3C,MAAM,EAAA,eAAEnB,aAAF,EAAiB,GAAGsF,kBAApB,GAAyCvF;IAC/C,MAAMsB,UAAUxB,uCAAiBuF,wCAAkBpF;IACnD,OAAA,WAAA,GAAO,+KAAC,sLAAU,CAAX,EAAP,8KAAA;QAAoB,IAAIqB,QAAQyD,aAAZ;OAA+BQ,kBAA5C;QAA8D,KAAKnE;;;AAI9E,WAAA,GAAA,OAAA,MAAA,CAAA,2CAAA;IAAA,aAAA;;AAEA;;qGAIA,MAAMoE,mCAAa;AAKnB,MAAMC,4CAAW,WAAA,GAAGhF,4KAClB,CAACT,OAAsCoB;IACrC,MAAM,EAAA,eAAEnB,aAAF,EAAiB,GAAGyF,YAApB,GAAmC1F;IACzC,MAAMsB,UAAUxB,uCAAiB0F,kCAAYvF;IAC7C,OAAA,WAAA,GACE,+KAAC,sLAAU,MAAX,EADF,8KAAA;QAEI,MAAK;OACDyF,YAFN;QAGE,KAAKtE;QACL,SAASO,wLAAqB3B,MAAM4B,OAAP,EAAgB,IAAMN,QAAQhB,YAAR,CAAqB;;;AAMhF,WAAA,GAAA,OAAA,MAAA,CAAA,2CAAA;IAAA,aAAA;;AAEA,kGAAA,GAEA,SAASoB,+BAASvB,IAAlB;IACE,OAAOA,OAAO,SAAS;;AAGzB,MAAMwF,2CAAqB;AAE3B,MAAM,CAACC,2CAAiBC,wCAAlB,GAAuCC,wLAAcH,0CAAoB;IAC7EI,aAAajD;IACbkD,WAAWd;IACXe,UAAU;;AAKZ,MAAMC,qCAA4C,CAAC,EAAA,SAAElB,OAAAA,EAAH;IAChD,MAAMmB,sBAAsBN,wCAAkBF;IAE9C,MAAMS,UAAW,CAAA,EAAA,EAAID,oBAAoBJ,WAAY,CAAA,gBAAA,EAAkBI,oBAAoBH,SAAU,CAArG;;0BAEF,EAA4BG,oBAAoBH,SAAU,CAA1D;;0EAEA,EAA4EG,oBAAoBF,QAAS,CAAA,CAJvG;IAMAxF,2KAAgB;QACd,IAAIuE,SAAS;YACX,MAAMqB,WAAWC,SAASC,cAAT,CAAwBvB;YACzC,IAAI,CAACqB,UAAU,MAAM,IAAIG,MAAMJ;;OAEhC;QAACA;QAASpB;KALb;IAOA,OAAO;;AAGT,MAAMyB,iDAA2B;AAOjC,MAAMC,2CAAwD,CAAC,EAAA,YAAEhG,UAAF,EAAA,eAAcqE,aAAAA,EAAf;IAC5D,MAAM4B,4BAA4Bd,wCAAkBY;IACpD,MAAML,UAAW,CAAA,0EAAA,EAA4EO,0BAA0BZ,WAAY,CAAA,EAAA,CAAnI;IAEAtF,2KAAgB;QAAM,IAAA;QACpB,MAAMmG,gBAAa,CAAA,sBAAGlG,WAAW0C,OAAd,MAAA,QAAA,wBAAA,KAAA,IAAA,KAAA,IAAG,oBAAoByD,YAApB,CAAiC,qBACvD,wEADA;QAEA,IAAI9B,iBAAiB6B,eAAe;YAClC,MAAME,iBAAiBR,SAASC,cAAT,CAAwBxB;YAC/C,IAAI,CAAC+B,gBAAgBC,QAAQC,IAAR,CAAaZ;;OAEnC;QAACA;QAAS1F;QAAYqE;KAPzB;IASA,OAAO;;AAGT,MAAMkC,4CAAOlH;AACb,MAAMmH,4CAAU/F;AAChB,MAAMgG,4CAAShF;AACf,MAAMiF,4CAAU5E;AAChB,MAAM6E,4CAAUtE;AAChB,MAAMuE,4CAAQnC;AACd,MAAMoC,4CAAcjC;AACpB,MAAMkC,4CAAQ/B"}},
    {"offset": {"line": 4525, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4530, "column": 0}, "map": {"version":3,"sources":["packages/react/alert-dialog/src/index.ts","packages/react/alert-dialog/src/AlertDialog.tsx","/turbopack/[project]/node_modules/@radix-ui/react-alert-dialog/dist/index.mjs"],"sourcesContent":["export {\n  createAlertDialogScope,\n  //\n  AlertDialog,\n  AlertDialogTrigger,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogContent,\n  AlertDialogAction,\n  AlertDialogCancel,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  //\n  Root,\n  Trigger,\n  Portal,\n  Overlay,\n  Content,\n  Action,\n  Cancel,\n  Title,\n  Description,\n} from './AlertDialog';\nexport type {\n  AlertDialogProps,\n  AlertDialogTriggerProps,\n  AlertDialogPortalProps,\n  AlertDialogOverlayProps,\n  AlertDialogContentProps,\n  AlertDialogActionProps,\n  AlertDialogCancelProps,\n  AlertDialogTitleProps,\n  AlertDialogDescriptionProps,\n} from './AlertDialog';\n","import * as React from 'react';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport * as DialogPrimitive from '@radix-ui/react-dialog';\nimport { createDialogScope } from '@radix-ui/react-dialog';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { Slottable } from '@radix-ui/react-slot';\n\nimport type * as Radix from '@radix-ui/react-primitive';\nimport type { Scope } from '@radix-ui/react-context';\n\n/* -------------------------------------------------------------------------------------------------\n * AlertDialog\n * -----------------------------------------------------------------------------------------------*/\n\nconst ROOT_NAME = 'AlertDialog';\n\ntype ScopedProps<P> = P & { __scopeAlertDialog?: Scope };\nconst [createAlertDialogContext, createAlertDialogScope] = createContextScope(ROOT_NAME, [\n  createDialogScope,\n]);\nconst useDialogScope = createDialogScope();\n\ntype DialogProps = Radix.ComponentPropsWithoutRef<typeof DialogPrimitive.Root>;\ninterface AlertDialogProps extends Omit<DialogProps, 'modal'> {}\n\nconst AlertDialog: React.FC<AlertDialogProps> = (props: ScopedProps<AlertDialogProps>) => {\n  const { __scopeAlertDialog, ...alertDialogProps } = props;\n  const dialogScope = useDialogScope(__scopeAlertDialog);\n  return <DialogPrimitive.Root {...dialogScope} {...alertDialogProps} modal={true} />;\n};\n\nAlertDialog.displayName = ROOT_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * AlertDialogTrigger\n * -----------------------------------------------------------------------------------------------*/\nconst TRIGGER_NAME = 'AlertDialogTrigger';\n\ntype AlertDialogTriggerElement = React.ElementRef<typeof DialogPrimitive.Trigger>;\ntype DialogTriggerProps = Radix.ComponentPropsWithoutRef<typeof DialogPrimitive.Trigger>;\ninterface AlertDialogTriggerProps extends DialogTriggerProps {}\n\nconst AlertDialogTrigger = React.forwardRef<AlertDialogTriggerElement, AlertDialogTriggerProps>(\n  (props: ScopedProps<AlertDialogTriggerProps>, forwardedRef) => {\n    const { __scopeAlertDialog, ...triggerProps } = props;\n    const dialogScope = useDialogScope(__scopeAlertDialog);\n    return <DialogPrimitive.Trigger {...dialogScope} {...triggerProps} ref={forwardedRef} />;\n  }\n);\n\nAlertDialogTrigger.displayName = TRIGGER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * AlertDialogPortal\n * -----------------------------------------------------------------------------------------------*/\n\nconst PORTAL_NAME = 'AlertDialogPortal';\n\ntype DialogPortalProps = Radix.ComponentPropsWithoutRef<typeof DialogPrimitive.Portal>;\ninterface AlertDialogPortalProps extends DialogPortalProps {}\n\nconst AlertDialogPortal: React.FC<AlertDialogPortalProps> = (\n  props: ScopedProps<AlertDialogPortalProps>\n) => {\n  const { __scopeAlertDialog, ...portalProps } = props;\n  const dialogScope = useDialogScope(__scopeAlertDialog);\n  return <DialogPrimitive.Portal {...dialogScope} {...portalProps} />;\n};\n\nAlertDialogPortal.displayName = PORTAL_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * AlertDialogOverlay\n * -----------------------------------------------------------------------------------------------*/\n\nconst OVERLAY_NAME = 'AlertDialogOverlay';\n\ntype AlertDialogOverlayElement = React.ElementRef<typeof DialogPrimitive.Overlay>;\ntype DialogOverlayProps = Radix.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>;\ninterface AlertDialogOverlayProps extends DialogOverlayProps {}\n\nconst AlertDialogOverlay = React.forwardRef<AlertDialogOverlayElement, AlertDialogOverlayProps>(\n  (props: ScopedProps<AlertDialogOverlayProps>, forwardedRef) => {\n    const { __scopeAlertDialog, ...overlayProps } = props;\n    const dialogScope = useDialogScope(__scopeAlertDialog);\n    return <DialogPrimitive.Overlay {...dialogScope} {...overlayProps} ref={forwardedRef} />;\n  }\n);\n\nAlertDialogOverlay.displayName = OVERLAY_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * AlertDialogContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'AlertDialogContent';\n\ntype AlertDialogContentContextValue = {\n  cancelRef: React.MutableRefObject<AlertDialogCancelElement | null>;\n};\n\nconst [AlertDialogContentProvider, useAlertDialogContentContext] =\n  createAlertDialogContext<AlertDialogContentContextValue>(CONTENT_NAME);\n\ntype AlertDialogContentElement = React.ElementRef<typeof DialogPrimitive.Content>;\ntype DialogContentProps = Radix.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>;\ninterface AlertDialogContentProps\n  extends Omit<DialogContentProps, 'onPointerDownOutside' | 'onInteractOutside'> {}\n\nconst AlertDialogContent = React.forwardRef<AlertDialogContentElement, AlertDialogContentProps>(\n  (props: ScopedProps<AlertDialogContentProps>, forwardedRef) => {\n    const { __scopeAlertDialog, children, ...contentProps } = props;\n    const dialogScope = useDialogScope(__scopeAlertDialog);\n    const contentRef = React.useRef<AlertDialogContentElement>(null);\n    const composedRefs = useComposedRefs(forwardedRef, contentRef);\n    const cancelRef = React.useRef<AlertDialogCancelElement | null>(null);\n\n    return (\n      <DialogPrimitive.WarningProvider\n        contentName={CONTENT_NAME}\n        titleName={TITLE_NAME}\n        docsSlug=\"alert-dialog\"\n      >\n        <AlertDialogContentProvider scope={__scopeAlertDialog} cancelRef={cancelRef}>\n          <DialogPrimitive.Content\n            role=\"alertdialog\"\n            {...dialogScope}\n            {...contentProps}\n            ref={composedRefs}\n            onOpenAutoFocus={composeEventHandlers(contentProps.onOpenAutoFocus, (event) => {\n              event.preventDefault();\n              cancelRef.current?.focus({ preventScroll: true });\n            })}\n            onPointerDownOutside={(event) => event.preventDefault()}\n            onInteractOutside={(event) => event.preventDefault()}\n          >\n            {/**\n             * We have to use `Slottable` here as we cannot wrap the `AlertDialogContentProvider`\n             * around everything, otherwise the `DescriptionWarning` would be rendered straight away.\n             * This is because we want the accessibility checks to run only once the content is actually\n             * open and that behaviour is already encapsulated in `DialogContent`.\n             */}\n            <Slottable>{children}</Slottable>\n            {process.env.NODE_ENV === 'development' && (\n              <DescriptionWarning contentRef={contentRef} />\n            )}\n          </DialogPrimitive.Content>\n        </AlertDialogContentProvider>\n      </DialogPrimitive.WarningProvider>\n    );\n  }\n);\n\nAlertDialogContent.displayName = CONTENT_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * AlertDialogTitle\n * -----------------------------------------------------------------------------------------------*/\n\nconst TITLE_NAME = 'AlertDialogTitle';\n\ntype AlertDialogTitleElement = React.ElementRef<typeof DialogPrimitive.Title>;\ntype DialogTitleProps = Radix.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>;\ninterface AlertDialogTitleProps extends DialogTitleProps {}\n\nconst AlertDialogTitle = React.forwardRef<AlertDialogTitleElement, AlertDialogTitleProps>(\n  (props: ScopedProps<AlertDialogTitleProps>, forwardedRef) => {\n    const { __scopeAlertDialog, ...titleProps } = props;\n    const dialogScope = useDialogScope(__scopeAlertDialog);\n    return <DialogPrimitive.Title {...dialogScope} {...titleProps} ref={forwardedRef} />;\n  }\n);\n\nAlertDialogTitle.displayName = TITLE_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * AlertDialogDescription\n * -----------------------------------------------------------------------------------------------*/\n\nconst DESCRIPTION_NAME = 'AlertDialogDescription';\n\ntype AlertDialogDescriptionElement = React.ElementRef<typeof DialogPrimitive.Description>;\ntype DialogDescriptionProps = Radix.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>;\ninterface AlertDialogDescriptionProps extends DialogDescriptionProps {}\n\nconst AlertDialogDescription = React.forwardRef<\n  AlertDialogDescriptionElement,\n  AlertDialogDescriptionProps\n>((props: ScopedProps<AlertDialogDescriptionProps>, forwardedRef) => {\n  const { __scopeAlertDialog, ...descriptionProps } = props;\n  const dialogScope = useDialogScope(__scopeAlertDialog);\n  return <DialogPrimitive.Description {...dialogScope} {...descriptionProps} ref={forwardedRef} />;\n});\n\nAlertDialogDescription.displayName = DESCRIPTION_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * AlertDialogAction\n * -----------------------------------------------------------------------------------------------*/\n\nconst ACTION_NAME = 'AlertDialogAction';\n\ntype AlertDialogActionElement = React.ElementRef<typeof DialogPrimitive.Close>;\ntype DialogCloseProps = Radix.ComponentPropsWithoutRef<typeof DialogPrimitive.Close>;\ninterface AlertDialogActionProps extends DialogCloseProps {}\n\nconst AlertDialogAction = React.forwardRef<AlertDialogActionElement, AlertDialogActionProps>(\n  (props: ScopedProps<AlertDialogActionProps>, forwardedRef) => {\n    const { __scopeAlertDialog, ...actionProps } = props;\n    const dialogScope = useDialogScope(__scopeAlertDialog);\n    return <DialogPrimitive.Close {...dialogScope} {...actionProps} ref={forwardedRef} />;\n  }\n);\n\nAlertDialogAction.displayName = ACTION_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * AlertDialogCancel\n * -----------------------------------------------------------------------------------------------*/\n\nconst CANCEL_NAME = 'AlertDialogCancel';\n\ntype AlertDialogCancelElement = React.ElementRef<typeof DialogPrimitive.Close>;\ninterface AlertDialogCancelProps extends DialogCloseProps {}\n\nconst AlertDialogCancel = React.forwardRef<AlertDialogCancelElement, AlertDialogCancelProps>(\n  (props: ScopedProps<AlertDialogCancelProps>, forwardedRef) => {\n    const { __scopeAlertDialog, ...cancelProps } = props;\n    const { cancelRef } = useAlertDialogContentContext(CANCEL_NAME, __scopeAlertDialog);\n    const dialogScope = useDialogScope(__scopeAlertDialog);\n    const ref = useComposedRefs(forwardedRef, cancelRef);\n    return <DialogPrimitive.Close {...dialogScope} {...cancelProps} ref={ref} />;\n  }\n);\n\nAlertDialogCancel.displayName = CANCEL_NAME;\n\n/* ---------------------------------------------------------------------------------------------- */\n\ntype DescriptionWarningProps = {\n  contentRef: React.RefObject<AlertDialogContentElement>;\n};\n\nconst DescriptionWarning: React.FC<DescriptionWarningProps> = ({ contentRef }) => {\n  const MESSAGE = `\\`${CONTENT_NAME}\\` requires a description for the component to be accessible for screen reader users.\n\nYou can add a description to the \\`${CONTENT_NAME}\\` by passing a \\`${DESCRIPTION_NAME}\\` component as a child, which also benefits sighted users by adding visible context to the dialog.\n\nAlternatively, you can use your own component as a description by assigning it an \\`id\\` and passing the same value to the \\`aria-describedby\\` prop in \\`${CONTENT_NAME}\\`. If the description is confusing or duplicative for sighted users, you can use the \\`@radix-ui/react-visually-hidden\\` primitive as a wrapper around your description component.\n\nFor more information, see https://radix-ui.com/primitives/docs/components/alert-dialog`;\n\n  React.useEffect(() => {\n    const hasDescription = document.getElementById(\n      contentRef.current?.getAttribute('aria-describedby')!\n    );\n    if (!hasDescription) console.warn(MESSAGE);\n  }, [MESSAGE, contentRef]);\n\n  return null;\n};\n\nconst Root = AlertDialog;\nconst Trigger = AlertDialogTrigger;\nconst Portal = AlertDialogPortal;\nconst Overlay = AlertDialogOverlay;\nconst Content = AlertDialogContent;\nconst Action = AlertDialogAction;\nconst Cancel = AlertDialogCancel;\nconst Title = AlertDialogTitle;\nconst Description = AlertDialogDescription;\n\nexport {\n  createAlertDialogScope,\n  //\n  AlertDialog,\n  AlertDialogTrigger,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogContent,\n  AlertDialogAction,\n  AlertDialogCancel,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  //\n  Root,\n  Trigger,\n  Portal,\n  Overlay,\n  Content,\n  Action,\n  Cancel,\n  Title,\n  Description,\n};\nexport type {\n  AlertDialogProps,\n  AlertDialogTriggerProps,\n  AlertDialogPortalProps,\n  AlertDialogOverlayProps,\n  AlertDialogContentProps,\n  AlertDialogActionProps,\n  AlertDialogCancelProps,\n  AlertDialogTitleProps,\n  AlertDialogDescriptionProps,\n};\n",null],"names":["ROOT_NAME","createAlertDialogContext","createAlertDialogScope","createContextScope","useDialogScope","createDialogScope","AlertDialog","props","__scopeAlertDialog","alertDialogProps","dialogScope","TRIGGER_NAME","AlertDialogTrigger","React","forwardedRef","triggerProps","PORTAL_NAME","AlertDialogPortal","portalProps","OVERLAY_NAME","AlertDialogOverlay","overlayProps","CONTENT_NAME","AlertDialogContentProvider","useAlertDialogContentContext","AlertDialogContent","children","contentProps","contentRef","composedRefs","useComposedRefs","cancelRef","TITLE_NAME","composeEventHandlers","onOpenAutoFocus","event","preventDefault","current","focus","preventScroll","process","AlertDialogTitle","titleProps","DESCRIPTION_NAME","AlertDialogDescription","descriptionProps","ACTION_NAME","AlertDialogAction","actionProps","CANCEL_NAME","AlertDialogCancel","cancelProps","ref","DescriptionWarning","MESSAGE","hasDescription","document","getElementById","getAttribute","console","warn","Root","Trigger","Portal","Overlay","Content","Action","Cancel","Title","Description"],"mappings":"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"}},
    {"offset": {"line": 4738, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4743, "column": 0}, "map": {"version":3,"sources":["packages/react/separator/src/index.ts","packages/react/separator/src/Separator.tsx","/turbopack/[project]/node_modules/@radix-ui/react-separator/dist/index.mjs"],"sourcesContent":["export {\n  Separator,\n  //\n  Root,\n} from './Separator';\nexport type { SeparatorProps } from './Separator';\n","import * as React from 'react';\nimport { Primitive } from '@radix-ui/react-primitive';\n\nimport type * as Radix from '@radix-ui/react-primitive';\n\n/* -------------------------------------------------------------------------------------------------\n *  Separator\n * -----------------------------------------------------------------------------------------------*/\n\nconst NAME = 'Separator';\nconst DEFAULT_ORIENTATION = 'horizontal';\nconst ORIENTATIONS = ['horizontal', 'vertical'] as const;\n\ntype Orientation = typeof ORIENTATIONS[number];\ntype SeparatorElement = React.ElementRef<typeof Primitive.div>;\ntype PrimitiveDivProps = Radix.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface SeparatorProps extends PrimitiveDivProps {\n  /**\n   * Either `vertical` or `horizontal`. Defaults to `horizontal`.\n   */\n  orientation?: Orientation;\n  /**\n   * Whether or not the component is purely decorative. When true, accessibility-related attributes\n   * are updated so that that the rendered element is removed from the accessibility tree.\n   */\n  decorative?: boolean;\n}\n\nconst Separator = React.forwardRef<SeparatorElement, SeparatorProps>((props, forwardedRef) => {\n  const { decorative, orientation: orientationProp = DEFAULT_ORIENTATION, ...domProps } = props;\n  const orientation = isValidOrientation(orientationProp) ? orientationProp : DEFAULT_ORIENTATION;\n  // `aria-orientation` defaults to `horizontal` so we only need it if `orientation` is vertical\n  const ariaOrientation = orientation === 'vertical' ? orientation : undefined;\n  const semanticProps = decorative\n    ? { role: 'none' }\n    : { 'aria-orientation': ariaOrientation, role: 'separator' };\n\n  return (\n    <Primitive.div\n      data-orientation={orientation}\n      {...semanticProps}\n      {...domProps}\n      ref={forwardedRef}\n    />\n  );\n});\n\nSeparator.displayName = NAME;\n\nSeparator.propTypes = {\n  orientation(props, propName, componentName) {\n    const propValue = props[propName];\n    const strVal = String(propValue);\n    if (propValue && !isValidOrientation(propValue)) {\n      return new Error(getInvalidOrientationError(strVal, componentName));\n    }\n    return null;\n  },\n};\n\n/* -----------------------------------------------------------------------------------------------*/\n\n// Split this out for clearer readability of the error message.\nfunction getInvalidOrientationError(value: string, componentName: string) {\n  return `Invalid prop \\`orientation\\` of value \\`${value}\\` supplied to \\`${componentName}\\`, expected one of:\n  - horizontal\n  - vertical\n\nDefaulting to \\`${DEFAULT_ORIENTATION}\\`.`;\n}\n\nfunction isValidOrientation(orientation: any): orientation is Orientation {\n  return ORIENTATIONS.includes(orientation);\n}\n\nconst Root = Separator;\n\nexport {\n  Separator,\n  //\n  Root,\n};\nexport type { SeparatorProps };\n",null],"names":["NAME","DEFAULT_ORIENTATION","ORIENTATIONS","Separator","React","props","forwardedRef","decorative","orientation","orientationProp","domProps","isValidOrientation","ariaOrientation","undefined","semanticProps","role","propTypes","propName","componentName","propValue","strVal","String","Error","getInvalidOrientationError","value","includes","Root"],"mappings":";;;;;;;;;;;ACKA;;qGAIA,MAAMA,6BAAO;AACb,MAAMC,4CAAsB;AAC5B,MAAMC,qCAAe;IAAC;IAAc;CAApC;AAiBA,MAAMC,4CAAS,WAAA,GAAGC,4KAAmD,CAACC,OAAOC;IAC3E,MAAM,EAAA,YAAEC,UAAF,EAAcC,aAAaC,kBAAkBR,yCAA7C,EAAkE,GAAGS,UAArE,GAAkFL;IACxF,MAAMG,cAAcG,yCAAmBF,mBAAmBA,kBAAkBR,2CAC5E,8FADA;IAEA,MAAMW,kBAAkBJ,gBAAgB,aAAaA,cAAcK;IACnE,MAAMC,gBAAgBP,aAClB;QAAEQ,MAAM;QACR;QAAE,oBAAoBH;QAAiBG,MAAM;;IAEjD,OAAA,WAAA,GACE,+KAAC,sLAAU,GAAX,EADF,8KAAA;QAEI,oBAAkBP;OACdM,eACAJ,UAHN;QAIE,KAAKJ;;;AAKX,WAAA,GAAA,OAAA,MAAA,CAAA,2CAAA;IAAA,aAAA;;AAEAH,0CAAUa,SAAV,GAAsB;IACpBR,aAAYH,KAAD,EAAQY,QAAR,EAAkBC,aAAlB;QACT,MAAMC,YAAYd,KAAK,CAACY,SAAxB;QACA,MAAMG,SAASC,OAAOF;QACtB,IAAIA,aAAa,CAACR,yCAAmBQ,YACnC,OAAO,IAAIG,MAAMC,iDAA2BH,QAAQF;QAEtD,OAAO;;;AAIX,kGAAA,GAEA,+DAAA;AACA,SAASK,iDAA2BC,KAApC,EAAmDN,aAAnD;IACE,OAAQ,CAAA,wCAAA,EAA0CM,MAAM,iBAAA,EAAmBN,cAA3E;;;;gBAIF,EAAkBjB,0CAAoB,GAAA,CAJpC;;AAOF,SAASU,yCAAmBH,WAA5B;IACE,OAAON,mCAAauB,QAAb,CAAsBjB;;AAG/B,MAAMkB,4CAAOvB"}},
    {"offset": {"line": 4803, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}